I0211 09:41:56.834269  4794 caffe.cpp:184] Using GPUs 0, 1, 2, 3
I0211 09:42:01.641320  4794 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 500
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "examples/mnist/lenet_train_test.prototxt"
I0211 09:42:01.650434  4794 solver.cpp:91] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0211 09:42:01.651690  4794 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0211 09:42:01.651721  4794 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0211 09:42:01.651856  4794 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 32
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:42:01.651945  4794 layer_factory.hpp:77] Creating layer mnist
I0211 09:42:01.652720  4794 net.cpp:106] Creating Layer mnist
I0211 09:42:01.652739  4794 net.cpp:411] mnist -> data
I0211 09:42:01.652779  4794 net.cpp:411] mnist -> label
I0211 09:42:01.658818  4799 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_train_lmdb
I0211 09:42:01.678457  4794 data_layer.cpp:41] output data size: 32,1,28,28
I0211 09:42:01.679694  4794 net.cpp:150] Setting up mnist
I0211 09:42:01.679718  4794 net.cpp:157] Top shape: 32 1 28 28 (25088)
I0211 09:42:01.679725  4794 net.cpp:157] Top shape: 32 (32)
I0211 09:42:01.679729  4794 net.cpp:165] Memory required for data: 100480
I0211 09:42:01.679744  4794 layer_factory.hpp:77] Creating layer conv1
I0211 09:42:01.679776  4794 net.cpp:106] Creating Layer conv1
I0211 09:42:01.679787  4794 net.cpp:454] conv1 <- data
I0211 09:42:01.679806  4794 net.cpp:411] conv1 -> conv1
I0211 09:42:01.681134  4794 net.cpp:150] Setting up conv1
I0211 09:42:01.681149  4794 net.cpp:157] Top shape: 32 20 24 24 (368640)
I0211 09:42:01.681154  4794 net.cpp:165] Memory required for data: 1575040
I0211 09:42:01.681171  4794 layer_factory.hpp:77] Creating layer pool1
I0211 09:42:01.681188  4794 net.cpp:106] Creating Layer pool1
I0211 09:42:01.681195  4794 net.cpp:454] pool1 <- conv1
I0211 09:42:01.681203  4794 net.cpp:411] pool1 -> pool1
I0211 09:42:01.681414  4794 net.cpp:150] Setting up pool1
I0211 09:42:01.681427  4794 net.cpp:157] Top shape: 32 20 12 12 (92160)
I0211 09:42:01.681432  4794 net.cpp:165] Memory required for data: 1943680
I0211 09:42:01.681438  4794 layer_factory.hpp:77] Creating layer conv2
I0211 09:42:01.681450  4794 net.cpp:106] Creating Layer conv2
I0211 09:42:01.681457  4794 net.cpp:454] conv2 <- pool1
I0211 09:42:01.681468  4794 net.cpp:411] conv2 -> conv2
I0211 09:42:01.681895  4794 net.cpp:150] Setting up conv2
I0211 09:42:01.681908  4794 net.cpp:157] Top shape: 32 50 8 8 (102400)
I0211 09:42:01.681913  4794 net.cpp:165] Memory required for data: 2353280
I0211 09:42:01.681926  4794 layer_factory.hpp:77] Creating layer pool2
I0211 09:42:01.681939  4794 net.cpp:106] Creating Layer pool2
I0211 09:42:01.681946  4794 net.cpp:454] pool2 <- conv2
I0211 09:42:01.681954  4794 net.cpp:411] pool2 -> pool2
I0211 09:42:01.682102  4794 net.cpp:150] Setting up pool2
I0211 09:42:01.682116  4794 net.cpp:157] Top shape: 32 50 4 4 (25600)
I0211 09:42:01.682121  4794 net.cpp:165] Memory required for data: 2455680
I0211 09:42:01.682127  4794 layer_factory.hpp:77] Creating layer ip1
I0211 09:42:01.682142  4794 net.cpp:106] Creating Layer ip1
I0211 09:42:01.682148  4794 net.cpp:454] ip1 <- pool2
I0211 09:42:01.682159  4794 net.cpp:411] ip1 -> ip1
I0211 09:42:01.684532  4800 blocking_queue.cpp:50] Waiting for data
I0211 09:42:01.686676  4794 net.cpp:150] Setting up ip1
I0211 09:42:01.686691  4794 net.cpp:157] Top shape: 32 500 (16000)
I0211 09:42:01.686697  4794 net.cpp:165] Memory required for data: 2519680
I0211 09:42:01.686707  4794 layer_factory.hpp:77] Creating layer relu1
I0211 09:42:01.686720  4794 net.cpp:106] Creating Layer relu1
I0211 09:42:01.686725  4794 net.cpp:454] relu1 <- ip1
I0211 09:42:01.686734  4794 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:42:01.686746  4794 net.cpp:150] Setting up relu1
I0211 09:42:01.686754  4794 net.cpp:157] Top shape: 32 500 (16000)
I0211 09:42:01.686759  4794 net.cpp:165] Memory required for data: 2583680
I0211 09:42:01.686764  4794 layer_factory.hpp:77] Creating layer ip2
I0211 09:42:01.686774  4794 net.cpp:106] Creating Layer ip2
I0211 09:42:01.686779  4794 net.cpp:454] ip2 <- ip1
I0211 09:42:01.686790  4794 net.cpp:411] ip2 -> ip2
I0211 09:42:01.687669  4794 net.cpp:150] Setting up ip2
I0211 09:42:01.687682  4794 net.cpp:157] Top shape: 32 10 (320)
I0211 09:42:01.687688  4794 net.cpp:165] Memory required for data: 2584960
I0211 09:42:01.687697  4794 layer_factory.hpp:77] Creating layer loss
I0211 09:42:01.687707  4794 net.cpp:106] Creating Layer loss
I0211 09:42:01.687713  4794 net.cpp:454] loss <- ip2
I0211 09:42:01.687719  4794 net.cpp:454] loss <- label
I0211 09:42:01.687728  4794 net.cpp:411] loss -> loss
I0211 09:42:01.687753  4794 layer_factory.hpp:77] Creating layer loss
I0211 09:42:01.687852  4794 net.cpp:150] Setting up loss
I0211 09:42:01.687863  4794 net.cpp:157] Top shape: (1)
I0211 09:42:01.687868  4794 net.cpp:160]     with loss weight 1
I0211 09:42:01.687897  4794 net.cpp:165] Memory required for data: 2584964
I0211 09:42:01.687906  4794 net.cpp:226] loss needs backward computation.
I0211 09:42:01.687911  4794 net.cpp:226] ip2 needs backward computation.
I0211 09:42:01.687916  4794 net.cpp:226] relu1 needs backward computation.
I0211 09:42:01.687922  4794 net.cpp:226] ip1 needs backward computation.
I0211 09:42:01.687927  4794 net.cpp:226] pool2 needs backward computation.
I0211 09:42:01.687932  4794 net.cpp:226] conv2 needs backward computation.
I0211 09:42:01.687942  4794 net.cpp:226] pool1 needs backward computation.
I0211 09:42:01.687947  4794 net.cpp:226] conv1 needs backward computation.
I0211 09:42:01.687952  4794 net.cpp:228] mnist does not need backward computation.
I0211 09:42:01.687958  4794 net.cpp:270] This network produces output loss
I0211 09:42:01.687975  4794 net.cpp:283] Network initialization done.
I0211 09:42:01.689187  4794 solver.cpp:181] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0211 09:42:01.689230  4794 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0211 09:42:01.689399  4794 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:42:01.689501  4794 layer_factory.hpp:77] Creating layer mnist
I0211 09:42:01.689646  4794 net.cpp:106] Creating Layer mnist
I0211 09:42:01.689661  4794 net.cpp:411] mnist -> data
I0211 09:42:01.689674  4794 net.cpp:411] mnist -> label
I0211 09:42:01.695305  4801 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_test_lmdb
I0211 09:42:01.695724  4794 data_layer.cpp:41] output data size: 100,1,28,28
I0211 09:42:01.698156  4794 net.cpp:150] Setting up mnist
I0211 09:42:01.698180  4794 net.cpp:157] Top shape: 100 1 28 28 (78400)
I0211 09:42:01.698190  4794 net.cpp:157] Top shape: 100 (100)
I0211 09:42:01.698199  4794 net.cpp:165] Memory required for data: 314000
I0211 09:42:01.698209  4794 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0211 09:42:01.698225  4794 net.cpp:106] Creating Layer label_mnist_1_split
I0211 09:42:01.698235  4794 net.cpp:454] label_mnist_1_split <- label
I0211 09:42:01.698247  4794 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_0
I0211 09:42:01.698263  4794 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_1
I0211 09:42:01.698380  4794 net.cpp:150] Setting up label_mnist_1_split
I0211 09:42:01.698396  4794 net.cpp:157] Top shape: 100 (100)
I0211 09:42:01.698407  4794 net.cpp:157] Top shape: 100 (100)
I0211 09:42:01.698415  4794 net.cpp:165] Memory required for data: 314800
I0211 09:42:01.698423  4794 layer_factory.hpp:77] Creating layer conv1
I0211 09:42:01.698446  4794 net.cpp:106] Creating Layer conv1
I0211 09:42:01.698456  4794 net.cpp:454] conv1 <- data
I0211 09:42:01.698472  4794 net.cpp:411] conv1 -> conv1
I0211 09:42:01.698827  4794 net.cpp:150] Setting up conv1
I0211 09:42:01.698846  4794 net.cpp:157] Top shape: 100 20 24 24 (1152000)
I0211 09:42:01.698853  4794 net.cpp:165] Memory required for data: 4922800
I0211 09:42:01.698870  4794 layer_factory.hpp:77] Creating layer pool1
I0211 09:42:01.698910  4794 net.cpp:106] Creating Layer pool1
I0211 09:42:01.698920  4794 net.cpp:454] pool1 <- conv1
I0211 09:42:01.698930  4794 net.cpp:411] pool1 -> pool1
I0211 09:42:01.699151  4794 net.cpp:150] Setting up pool1
I0211 09:42:01.699169  4794 net.cpp:157] Top shape: 100 20 12 12 (288000)
I0211 09:42:01.699177  4794 net.cpp:165] Memory required for data: 6074800
I0211 09:42:01.699187  4794 layer_factory.hpp:77] Creating layer conv2
I0211 09:42:01.699204  4794 net.cpp:106] Creating Layer conv2
I0211 09:42:01.699213  4794 net.cpp:454] conv2 <- pool1
I0211 09:42:01.699234  4794 net.cpp:411] conv2 -> conv2
I0211 09:42:01.699862  4794 net.cpp:150] Setting up conv2
I0211 09:42:01.699880  4794 net.cpp:157] Top shape: 100 50 8 8 (320000)
I0211 09:42:01.699887  4794 net.cpp:165] Memory required for data: 7354800
I0211 09:42:01.699903  4794 layer_factory.hpp:77] Creating layer pool2
I0211 09:42:01.699919  4794 net.cpp:106] Creating Layer pool2
I0211 09:42:01.699926  4794 net.cpp:454] pool2 <- conv2
I0211 09:42:01.699945  4794 net.cpp:411] pool2 -> pool2
I0211 09:42:01.700160  4794 net.cpp:150] Setting up pool2
I0211 09:42:01.700176  4794 net.cpp:157] Top shape: 100 50 4 4 (80000)
I0211 09:42:01.700182  4794 net.cpp:165] Memory required for data: 7674800
I0211 09:42:01.700189  4794 layer_factory.hpp:77] Creating layer ip1
I0211 09:42:01.700202  4794 net.cpp:106] Creating Layer ip1
I0211 09:42:01.700212  4794 net.cpp:454] ip1 <- pool2
I0211 09:42:01.700227  4794 net.cpp:411] ip1 -> ip1
I0211 09:42:01.706290  4794 net.cpp:150] Setting up ip1
I0211 09:42:01.706316  4794 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:42:01.706324  4794 net.cpp:165] Memory required for data: 7874800
I0211 09:42:01.706344  4794 layer_factory.hpp:77] Creating layer relu1
I0211 09:42:01.706362  4794 net.cpp:106] Creating Layer relu1
I0211 09:42:01.706372  4794 net.cpp:454] relu1 <- ip1
I0211 09:42:01.706387  4794 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:42:01.706403  4794 net.cpp:150] Setting up relu1
I0211 09:42:01.706415  4794 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:42:01.706425  4794 net.cpp:165] Memory required for data: 8074800
I0211 09:42:01.706432  4794 layer_factory.hpp:77] Creating layer ip2
I0211 09:42:01.706449  4794 net.cpp:106] Creating Layer ip2
I0211 09:42:01.706459  4794 net.cpp:454] ip2 <- ip1
I0211 09:42:01.706478  4794 net.cpp:411] ip2 -> ip2
I0211 09:42:01.706755  4794 net.cpp:150] Setting up ip2
I0211 09:42:01.706776  4794 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:42:01.706786  4794 net.cpp:165] Memory required for data: 8078800
I0211 09:42:01.706800  4794 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0211 09:42:01.706814  4794 net.cpp:106] Creating Layer ip2_ip2_0_split
I0211 09:42:01.706821  4794 net.cpp:454] ip2_ip2_0_split <- ip2
I0211 09:42:01.706833  4794 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0211 09:42:01.706847  4794 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0211 09:42:01.706913  4794 net.cpp:150] Setting up ip2_ip2_0_split
I0211 09:42:01.706941  4794 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:42:01.706948  4794 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:42:01.706954  4794 net.cpp:165] Memory required for data: 8086800
I0211 09:42:01.706959  4794 layer_factory.hpp:77] Creating layer accuracy
I0211 09:42:01.706970  4794 net.cpp:106] Creating Layer accuracy
I0211 09:42:01.706977  4794 net.cpp:454] accuracy <- ip2_ip2_0_split_0
I0211 09:42:01.706984  4794 net.cpp:454] accuracy <- label_mnist_1_split_0
I0211 09:42:01.706991  4794 net.cpp:411] accuracy -> accuracy
I0211 09:42:01.707005  4794 net.cpp:150] Setting up accuracy
I0211 09:42:01.707012  4794 net.cpp:157] Top shape: (1)
I0211 09:42:01.707017  4794 net.cpp:165] Memory required for data: 8086804
I0211 09:42:01.707021  4794 layer_factory.hpp:77] Creating layer loss
I0211 09:42:01.707031  4794 net.cpp:106] Creating Layer loss
I0211 09:42:01.707036  4794 net.cpp:454] loss <- ip2_ip2_0_split_1
I0211 09:42:01.707041  4794 net.cpp:454] loss <- label_mnist_1_split_1
I0211 09:42:01.707048  4794 net.cpp:411] loss -> loss
I0211 09:42:01.707074  4794 layer_factory.hpp:77] Creating layer loss
I0211 09:42:01.707216  4794 net.cpp:150] Setting up loss
I0211 09:42:01.707233  4794 net.cpp:157] Top shape: (1)
I0211 09:42:01.707243  4794 net.cpp:160]     with loss weight 1
I0211 09:42:01.707258  4794 net.cpp:165] Memory required for data: 8086808
I0211 09:42:01.707268  4794 net.cpp:226] loss needs backward computation.
I0211 09:42:01.707279  4794 net.cpp:228] accuracy does not need backward computation.
I0211 09:42:01.707290  4794 net.cpp:226] ip2_ip2_0_split needs backward computation.
I0211 09:42:01.707299  4794 net.cpp:226] ip2 needs backward computation.
I0211 09:42:01.707309  4794 net.cpp:226] relu1 needs backward computation.
I0211 09:42:01.707319  4794 net.cpp:226] ip1 needs backward computation.
I0211 09:42:01.707327  4794 net.cpp:226] pool2 needs backward computation.
I0211 09:42:01.707337  4794 net.cpp:226] conv2 needs backward computation.
I0211 09:42:01.707347  4794 net.cpp:226] pool1 needs backward computation.
I0211 09:42:01.707356  4794 net.cpp:226] conv1 needs backward computation.
I0211 09:42:01.707367  4794 net.cpp:228] label_mnist_1_split does not need backward computation.
I0211 09:42:01.707377  4794 net.cpp:228] mnist does not need backward computation.
I0211 09:42:01.707386  4794 net.cpp:270] This network produces output accuracy
I0211 09:42:01.707394  4794 net.cpp:270] This network produces output loss
I0211 09:42:01.707424  4794 net.cpp:283] Network initialization done.
I0211 09:42:01.707492  4794 solver.cpp:60] Solver scaffolding done.
I0211 09:42:01.731202  4794 parallel.cpp:405] GPUs pairs 0:1, 2:3, 0:2
I0211 09:42:01.951190  4794 data_layer.cpp:41] output data size: 32,1,28,28
I0211 09:42:02.280041  4794 data_layer.cpp:41] output data size: 32,1,28,28
I0211 09:42:02.700229  4794 data_layer.cpp:41] output data size: 32,1,28,28
I0211 09:42:02.815585  4794 parallel.cpp:433] Starting Optimization - TEST TEST TEST
I0211 09:42:02.817199  4794 solver.cpp:311] Solving LeNet
I0211 09:42:02.817229  4794 solver.cpp:312] Learning Rate Policy: inv
I0211 09:42:02.818107  4794 solver.cpp:364] Iteration 0, Testing net (#0)
I0211 09:42:03.834738  4794 solver.cpp:432]     Test net output #0: accuracy = 0.0673
I0211 09:42:03.834782  4794 solver.cpp:432]     Test net output #1: loss = 2.37626 (* 1 = 2.37626 loss)
I0211 09:42:03.849786  4794 solver.cpp:250] Iteration 0, loss = 2.44632 Time spent communicating 0.381632
I0211 09:42:03.849825  4794 solver.cpp:267]     Train net output #0: loss = 2.44632 (* 1 = 2.44632 loss)
I0211 09:42:03.859539  4794 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0211 09:42:04.931771  4794 solver.cpp:250] Iteration 100, loss = 0.403008 Time spent communicating 155.085
I0211 09:42:04.931802  4794 solver.cpp:267]     Train net output #0: loss = 0.403008 (* 1 = 0.403008 loss)
I0211 09:42:04.933823  4794 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0211 09:42:05.977576  4794 solver.cpp:250] Iteration 200, loss = 0.194005 Time spent communicating 130.026
I0211 09:42:05.977622  4794 solver.cpp:267]     Train net output #0: loss = 0.194005 (* 1 = 0.194005 loss)
I0211 09:42:05.978693  4794 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0211 09:42:07.027884  4794 solver.cpp:250] Iteration 300, loss = 0.13902 Time spent communicating 131.211
I0211 09:42:07.027916  4794 solver.cpp:267]     Train net output #0: loss = 0.139021 (* 1 = 0.139021 loss)
I0211 09:42:07.028800  4794 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0211 09:42:08.076917  4794 solver.cpp:250] Iteration 400, loss = 0.350573 Time spent communicating 118.271
I0211 09:42:08.076951  4794 solver.cpp:267]     Train net output #0: loss = 0.350573 (* 1 = 0.350573 loss)
I0211 09:42:08.077795  4794 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0211 09:42:09.106884  4794 solver.cpp:482] Snapshotting to binary proto file examples/mnist/lenet_iter_500.caffemodel
I0211 09:42:09.141588  4794 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_500.solverstate
I0211 09:42:09.169260  4794 solver.cpp:344] Iteration 500, loss = 0.15264
I0211 09:42:09.169317  4794 solver.cpp:364] Iteration 500, Testing net (#0)
I0211 09:42:10.120343  4794 solver.cpp:432]     Test net output #0: accuracy = 0.9739
I0211 09:42:10.120375  4794 solver.cpp:432]     Test net output #1: loss = 0.080227 (* 1 = 0.080227 loss)
I0211 09:42:10.120383  4794 solver.cpp:349] Optimization Done.
I0211 09:42:10.120427  4794 parallel.cpp:256] IN DESTRUCTOR AND I'M 1
I0211 09:42:10.138309  4794 parallel.cpp:256] IN DESTRUCTOR AND I'M 3
I0211 09:42:10.154086  4794 parallel.cpp:256] IN DESTRUCTOR AND I'M 2
I0211 09:42:10.170316  4794 parallel.cpp:256] IN DESTRUCTOR AND I'M 0
I0211 09:42:10.170765  4794 caffe.cpp:215] Optimization Done.
