I0211 09:45:20.475258  4935 caffe.cpp:184] Using GPUs 0, 1
I0211 09:45:25.260004  4935 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 500
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "examples/mnist/lenet_train_test.prototxt"
I0211 09:45:25.271976  4935 solver.cpp:91] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0211 09:45:25.273397  4935 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0211 09:45:25.273455  4935 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0211 09:45:25.273735  4935 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:45:25.273828  4935 layer_factory.hpp:77] Creating layer mnist
I0211 09:45:25.274546  4935 net.cpp:106] Creating Layer mnist
I0211 09:45:25.274564  4935 net.cpp:411] mnist -> data
I0211 09:45:25.274603  4935 net.cpp:411] mnist -> label
I0211 09:45:25.280684  4939 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_train_lmdb
I0211 09:45:25.300356  4935 data_layer.cpp:41] output data size: 64,1,28,28
I0211 09:45:25.301646  4935 net.cpp:150] Setting up mnist
I0211 09:45:25.301668  4935 net.cpp:157] Top shape: 64 1 28 28 (50176)
I0211 09:45:25.301677  4935 net.cpp:157] Top shape: 64 (64)
I0211 09:45:25.301682  4935 net.cpp:165] Memory required for data: 200960
I0211 09:45:25.301697  4935 layer_factory.hpp:77] Creating layer conv1
I0211 09:45:25.301736  4935 net.cpp:106] Creating Layer conv1
I0211 09:45:25.301748  4935 net.cpp:454] conv1 <- data
I0211 09:45:25.301769  4935 net.cpp:411] conv1 -> conv1
I0211 09:45:25.303055  4935 net.cpp:150] Setting up conv1
I0211 09:45:25.303071  4935 net.cpp:157] Top shape: 64 20 24 24 (737280)
I0211 09:45:25.303076  4935 net.cpp:165] Memory required for data: 3150080
I0211 09:45:25.303092  4935 layer_factory.hpp:77] Creating layer pool1
I0211 09:45:25.303107  4935 net.cpp:106] Creating Layer pool1
I0211 09:45:25.303114  4935 net.cpp:454] pool1 <- conv1
I0211 09:45:25.303122  4935 net.cpp:411] pool1 -> pool1
I0211 09:45:25.303406  4935 net.cpp:150] Setting up pool1
I0211 09:45:25.303429  4935 net.cpp:157] Top shape: 64 20 12 12 (184320)
I0211 09:45:25.303439  4935 net.cpp:165] Memory required for data: 3887360
I0211 09:45:25.303449  4935 layer_factory.hpp:77] Creating layer conv2
I0211 09:45:25.303467  4935 net.cpp:106] Creating Layer conv2
I0211 09:45:25.303474  4935 net.cpp:454] conv2 <- pool1
I0211 09:45:25.303488  4935 net.cpp:411] conv2 -> conv2
I0211 09:45:25.303920  4935 net.cpp:150] Setting up conv2
I0211 09:45:25.303932  4935 net.cpp:157] Top shape: 64 50 8 8 (204800)
I0211 09:45:25.303937  4935 net.cpp:165] Memory required for data: 4706560
I0211 09:45:25.303948  4935 layer_factory.hpp:77] Creating layer pool2
I0211 09:45:25.303961  4935 net.cpp:106] Creating Layer pool2
I0211 09:45:25.303968  4935 net.cpp:454] pool2 <- conv2
I0211 09:45:25.303975  4935 net.cpp:411] pool2 -> pool2
I0211 09:45:25.304124  4935 net.cpp:150] Setting up pool2
I0211 09:45:25.304138  4935 net.cpp:157] Top shape: 64 50 4 4 (51200)
I0211 09:45:25.304143  4935 net.cpp:165] Memory required for data: 4911360
I0211 09:45:25.304147  4935 layer_factory.hpp:77] Creating layer ip1
I0211 09:45:25.304162  4935 net.cpp:106] Creating Layer ip1
I0211 09:45:25.304168  4935 net.cpp:454] ip1 <- pool2
I0211 09:45:25.304177  4935 net.cpp:411] ip1 -> ip1
I0211 09:45:25.306506  4940 blocking_queue.cpp:50] Waiting for data
I0211 09:45:25.308720  4935 net.cpp:150] Setting up ip1
I0211 09:45:25.308737  4935 net.cpp:157] Top shape: 64 500 (32000)
I0211 09:45:25.308742  4935 net.cpp:165] Memory required for data: 5039360
I0211 09:45:25.308753  4935 layer_factory.hpp:77] Creating layer relu1
I0211 09:45:25.308765  4935 net.cpp:106] Creating Layer relu1
I0211 09:45:25.308770  4935 net.cpp:454] relu1 <- ip1
I0211 09:45:25.308779  4935 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:45:25.308791  4935 net.cpp:150] Setting up relu1
I0211 09:45:25.308799  4935 net.cpp:157] Top shape: 64 500 (32000)
I0211 09:45:25.308804  4935 net.cpp:165] Memory required for data: 5167360
I0211 09:45:25.308809  4935 layer_factory.hpp:77] Creating layer ip2
I0211 09:45:25.308817  4935 net.cpp:106] Creating Layer ip2
I0211 09:45:25.308823  4935 net.cpp:454] ip2 <- ip1
I0211 09:45:25.308835  4935 net.cpp:411] ip2 -> ip2
I0211 09:45:25.309720  4935 net.cpp:150] Setting up ip2
I0211 09:45:25.309733  4935 net.cpp:157] Top shape: 64 10 (640)
I0211 09:45:25.309739  4935 net.cpp:165] Memory required for data: 5169920
I0211 09:45:25.309747  4935 layer_factory.hpp:77] Creating layer loss
I0211 09:45:25.309757  4935 net.cpp:106] Creating Layer loss
I0211 09:45:25.309762  4935 net.cpp:454] loss <- ip2
I0211 09:45:25.309769  4935 net.cpp:454] loss <- label
I0211 09:45:25.309777  4935 net.cpp:411] loss -> loss
I0211 09:45:25.309800  4935 layer_factory.hpp:77] Creating layer loss
I0211 09:45:25.309902  4935 net.cpp:150] Setting up loss
I0211 09:45:25.309913  4935 net.cpp:157] Top shape: (1)
I0211 09:45:25.309918  4935 net.cpp:160]     with loss weight 1
I0211 09:45:25.309947  4935 net.cpp:165] Memory required for data: 5169924
I0211 09:45:25.309957  4935 net.cpp:226] loss needs backward computation.
I0211 09:45:25.309964  4935 net.cpp:226] ip2 needs backward computation.
I0211 09:45:25.309969  4935 net.cpp:226] relu1 needs backward computation.
I0211 09:45:25.309973  4935 net.cpp:226] ip1 needs backward computation.
I0211 09:45:25.309978  4935 net.cpp:226] pool2 needs backward computation.
I0211 09:45:25.309983  4935 net.cpp:226] conv2 needs backward computation.
I0211 09:45:25.309993  4935 net.cpp:226] pool1 needs backward computation.
I0211 09:45:25.309998  4935 net.cpp:226] conv1 needs backward computation.
I0211 09:45:25.310004  4935 net.cpp:228] mnist does not need backward computation.
I0211 09:45:25.310009  4935 net.cpp:270] This network produces output loss
I0211 09:45:25.310026  4935 net.cpp:283] Network initialization done.
I0211 09:45:25.311233  4935 solver.cpp:181] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0211 09:45:25.311275  4935 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0211 09:45:25.311447  4935 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:45:25.311547  4935 layer_factory.hpp:77] Creating layer mnist
I0211 09:45:25.311688  4935 net.cpp:106] Creating Layer mnist
I0211 09:45:25.311704  4935 net.cpp:411] mnist -> data
I0211 09:45:25.311717  4935 net.cpp:411] mnist -> label
I0211 09:45:25.317226  4941 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_test_lmdb
I0211 09:45:25.317637  4935 data_layer.cpp:41] output data size: 100,1,28,28
I0211 09:45:25.319134  4935 net.cpp:150] Setting up mnist
I0211 09:45:25.319152  4935 net.cpp:157] Top shape: 100 1 28 28 (78400)
I0211 09:45:25.319160  4935 net.cpp:157] Top shape: 100 (100)
I0211 09:45:25.319164  4935 net.cpp:165] Memory required for data: 314000
I0211 09:45:25.319174  4935 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0211 09:45:25.319188  4935 net.cpp:106] Creating Layer label_mnist_1_split
I0211 09:45:25.319195  4935 net.cpp:454] label_mnist_1_split <- label
I0211 09:45:25.319205  4935 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_0
I0211 09:45:25.319216  4935 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_1
I0211 09:45:25.319382  4935 net.cpp:150] Setting up label_mnist_1_split
I0211 09:45:25.319396  4935 net.cpp:157] Top shape: 100 (100)
I0211 09:45:25.319403  4935 net.cpp:157] Top shape: 100 (100)
I0211 09:45:25.319409  4935 net.cpp:165] Memory required for data: 314800
I0211 09:45:25.319416  4935 layer_factory.hpp:77] Creating layer conv1
I0211 09:45:25.319437  4935 net.cpp:106] Creating Layer conv1
I0211 09:45:25.319443  4935 net.cpp:454] conv1 <- data
I0211 09:45:25.319458  4935 net.cpp:411] conv1 -> conv1
I0211 09:45:25.319732  4935 net.cpp:150] Setting up conv1
I0211 09:45:25.319747  4935 net.cpp:157] Top shape: 100 20 24 24 (1152000)
I0211 09:45:25.319752  4935 net.cpp:165] Memory required for data: 4922800
I0211 09:45:25.319764  4935 layer_factory.hpp:77] Creating layer pool1
I0211 09:45:25.319792  4935 net.cpp:106] Creating Layer pool1
I0211 09:45:25.319799  4935 net.cpp:454] pool1 <- conv1
I0211 09:45:25.319811  4935 net.cpp:411] pool1 -> pool1
I0211 09:45:25.319977  4935 net.cpp:150] Setting up pool1
I0211 09:45:25.319988  4935 net.cpp:157] Top shape: 100 20 12 12 (288000)
I0211 09:45:25.319994  4935 net.cpp:165] Memory required for data: 6074800
I0211 09:45:25.320000  4935 layer_factory.hpp:77] Creating layer conv2
I0211 09:45:25.320018  4935 net.cpp:106] Creating Layer conv2
I0211 09:45:25.320024  4935 net.cpp:454] conv2 <- pool1
I0211 09:45:25.320036  4935 net.cpp:411] conv2 -> conv2
I0211 09:45:25.320502  4935 net.cpp:150] Setting up conv2
I0211 09:45:25.320515  4935 net.cpp:157] Top shape: 100 50 8 8 (320000)
I0211 09:45:25.320521  4935 net.cpp:165] Memory required for data: 7354800
I0211 09:45:25.320533  4935 layer_factory.hpp:77] Creating layer pool2
I0211 09:45:25.320544  4935 net.cpp:106] Creating Layer pool2
I0211 09:45:25.320550  4935 net.cpp:454] pool2 <- conv2
I0211 09:45:25.320562  4935 net.cpp:411] pool2 -> pool2
I0211 09:45:25.320731  4935 net.cpp:150] Setting up pool2
I0211 09:45:25.320744  4935 net.cpp:157] Top shape: 100 50 4 4 (80000)
I0211 09:45:25.320750  4935 net.cpp:165] Memory required for data: 7674800
I0211 09:45:25.320755  4935 layer_factory.hpp:77] Creating layer ip1
I0211 09:45:25.320767  4935 net.cpp:106] Creating Layer ip1
I0211 09:45:25.320773  4935 net.cpp:454] ip1 <- pool2
I0211 09:45:25.320781  4935 net.cpp:411] ip1 -> ip1
I0211 09:45:25.327746  4935 net.cpp:150] Setting up ip1
I0211 09:45:25.327774  4935 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:45:25.327782  4935 net.cpp:165] Memory required for data: 7874800
I0211 09:45:25.327802  4935 layer_factory.hpp:77] Creating layer relu1
I0211 09:45:25.327822  4935 net.cpp:106] Creating Layer relu1
I0211 09:45:25.327834  4935 net.cpp:454] relu1 <- ip1
I0211 09:45:25.327849  4935 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:45:25.327867  4935 net.cpp:150] Setting up relu1
I0211 09:45:25.327882  4935 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:45:25.327890  4935 net.cpp:165] Memory required for data: 8074800
I0211 09:45:25.327901  4935 layer_factory.hpp:77] Creating layer ip2
I0211 09:45:25.327924  4935 net.cpp:106] Creating Layer ip2
I0211 09:45:25.327935  4935 net.cpp:454] ip2 <- ip1
I0211 09:45:25.327951  4935 net.cpp:411] ip2 -> ip2
I0211 09:45:25.328241  4935 net.cpp:150] Setting up ip2
I0211 09:45:25.328263  4935 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:45:25.328272  4935 net.cpp:165] Memory required for data: 8078800
I0211 09:45:25.328289  4935 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0211 09:45:25.328308  4935 net.cpp:106] Creating Layer ip2_ip2_0_split
I0211 09:45:25.328320  4935 net.cpp:454] ip2_ip2_0_split <- ip2
I0211 09:45:25.328335  4935 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0211 09:45:25.328352  4935 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0211 09:45:25.328429  4935 net.cpp:150] Setting up ip2_ip2_0_split
I0211 09:45:25.328447  4935 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:45:25.328460  4935 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:45:25.328470  4935 net.cpp:165] Memory required for data: 8086800
I0211 09:45:25.328480  4935 layer_factory.hpp:77] Creating layer accuracy
I0211 09:45:25.328506  4935 net.cpp:106] Creating Layer accuracy
I0211 09:45:25.328518  4935 net.cpp:454] accuracy <- ip2_ip2_0_split_0
I0211 09:45:25.328531  4935 net.cpp:454] accuracy <- label_mnist_1_split_0
I0211 09:45:25.328547  4935 net.cpp:411] accuracy -> accuracy
I0211 09:45:25.328570  4935 net.cpp:150] Setting up accuracy
I0211 09:45:25.328585  4935 net.cpp:157] Top shape: (1)
I0211 09:45:25.328593  4935 net.cpp:165] Memory required for data: 8086804
I0211 09:45:25.328601  4935 layer_factory.hpp:77] Creating layer loss
I0211 09:45:25.328614  4935 net.cpp:106] Creating Layer loss
I0211 09:45:25.328631  4935 net.cpp:454] loss <- ip2_ip2_0_split_1
I0211 09:45:25.328642  4935 net.cpp:454] loss <- label_mnist_1_split_1
I0211 09:45:25.328658  4935 net.cpp:411] loss -> loss
I0211 09:45:25.328707  4935 layer_factory.hpp:77] Creating layer loss
I0211 09:45:25.328889  4935 net.cpp:150] Setting up loss
I0211 09:45:25.328910  4935 net.cpp:157] Top shape: (1)
I0211 09:45:25.328918  4935 net.cpp:160]     with loss weight 1
I0211 09:45:25.328935  4935 net.cpp:165] Memory required for data: 8086808
I0211 09:45:25.328944  4935 net.cpp:226] loss needs backward computation.
I0211 09:45:25.328956  4935 net.cpp:228] accuracy does not need backward computation.
I0211 09:45:25.328968  4935 net.cpp:226] ip2_ip2_0_split needs backward computation.
I0211 09:45:25.328976  4935 net.cpp:226] ip2 needs backward computation.
I0211 09:45:25.328984  4935 net.cpp:226] relu1 needs backward computation.
I0211 09:45:25.328992  4935 net.cpp:226] ip1 needs backward computation.
I0211 09:45:25.329002  4935 net.cpp:226] pool2 needs backward computation.
I0211 09:45:25.329012  4935 net.cpp:226] conv2 needs backward computation.
I0211 09:45:25.329027  4935 net.cpp:226] pool1 needs backward computation.
I0211 09:45:25.329038  4935 net.cpp:226] conv1 needs backward computation.
I0211 09:45:25.329051  4935 net.cpp:228] label_mnist_1_split does not need backward computation.
I0211 09:45:25.329061  4935 net.cpp:228] mnist does not need backward computation.
I0211 09:45:25.329071  4935 net.cpp:270] This network produces output accuracy
I0211 09:45:25.329080  4935 net.cpp:270] This network produces output loss
I0211 09:45:25.329109  4935 net.cpp:283] Network initialization done.
I0211 09:45:25.329183  4935 solver.cpp:60] Solver scaffolding done.
I0211 09:45:25.334166  4935 parallel.cpp:405] GPUs pairs 0:1
I0211 09:45:25.558609  4935 data_layer.cpp:41] output data size: 64,1,28,28
I0211 09:45:25.721961  4935 parallel.cpp:433] Starting Optimization - TEST TEST TEST
I0211 09:45:25.722055  4935 solver.cpp:311] Solving LeNet
I0211 09:45:25.722064  4935 solver.cpp:312] Learning Rate Policy: inv
I0211 09:45:25.722190  4935 solver.cpp:364] Iteration 0, Testing net (#0)
I0211 09:45:26.804636  4935 solver.cpp:432]     Test net output #0: accuracy = 0.1234
I0211 09:45:26.804675  4935 solver.cpp:432]     Test net output #1: loss = 2.30716 (* 1 = 2.30716 loss)
I0211 09:45:26.821162  4935 solver.cpp:250] Iteration 0, loss = 2.31301 Time spent communicating 0.16848
I0211 09:45:26.821187  4935 solver.cpp:267]     Train net output #0: loss = 2.31301 (* 1 = 2.31301 loss)
I0211 09:45:26.829641  4935 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0211 09:45:28.514092  4935 solver.cpp:250] Iteration 100, loss = 0.359858 Time spent communicating 35.4946
I0211 09:45:28.514127  4935 solver.cpp:267]     Train net output #0: loss = 0.359858 (* 1 = 0.359858 loss)
I0211 09:45:28.517318  4935 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0211 09:45:30.179667  4935 solver.cpp:250] Iteration 200, loss = 0.285807 Time spent communicating 31.8426
I0211 09:45:30.179708  4935 solver.cpp:267]     Train net output #0: loss = 0.285807 (* 1 = 0.285807 loss)
I0211 09:45:30.183367  4935 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0211 09:45:31.844239  4935 solver.cpp:250] Iteration 300, loss = 0.207142 Time spent communicating 21.3999
I0211 09:45:31.844270  4935 solver.cpp:267]     Train net output #0: loss = 0.207142 (* 1 = 0.207142 loss)
I0211 09:45:31.847537  4935 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0211 09:45:33.510365  4935 solver.cpp:250] Iteration 400, loss = 0.373678 Time spent communicating 21.6947
I0211 09:45:33.510404  4935 solver.cpp:267]     Train net output #0: loss = 0.373678 (* 1 = 0.373678 loss)
I0211 09:45:33.514250  4935 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0211 09:45:35.164705  4935 solver.cpp:482] Snapshotting to binary proto file examples/mnist/lenet_iter_500.caffemodel
I0211 09:45:35.204038  4935 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_500.solverstate
I0211 09:45:35.237890  4935 solver.cpp:344] Iteration 500, loss = 0.103248
I0211 09:45:35.237920  4935 solver.cpp:364] Iteration 500, Testing net (#0)
I0211 09:45:36.183801  4935 solver.cpp:432]     Test net output #0: accuracy = 0.9754
I0211 09:45:36.183867  4935 solver.cpp:432]     Test net output #1: loss = 0.0767544 (* 1 = 0.0767544 loss)
I0211 09:45:36.183877  4935 solver.cpp:349] Optimization Done.
I0211 09:45:36.183923  4935 parallel.cpp:256] IN DESTRUCTOR AND I'M 1
I0211 09:45:36.197059  4935 parallel.cpp:256] IN DESTRUCTOR AND I'M 0
I0211 09:45:36.197502  4935 caffe.cpp:215] Optimization Done.
