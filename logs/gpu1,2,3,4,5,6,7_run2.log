I0210 21:28:47.158510 29158 caffe.cpp:184] Using GPUs 1, 2, 3, 4, 5, 6, 7
I0210 21:28:47.693354 29158 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 500
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 1
net: "examples/mnist/lenet_train_test.prototxt"
I0210 21:28:47.702970 29158 solver.cpp:91] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0210 21:28:47.704277 29158 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0210 21:28:47.704301 29158 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0210 21:28:47.704583 29158 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 18
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0210 21:28:47.704722 29158 layer_factory.hpp:77] Creating layer mnist
I0210 21:28:47.705718 29158 net.cpp:106] Creating Layer mnist
I0210 21:28:47.705737 29158 net.cpp:411] mnist -> data
I0210 21:28:47.705775 29158 net.cpp:411] mnist -> label
I0210 21:28:47.711602 29162 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_train_lmdb
I0210 21:28:47.728662 29158 data_layer.cpp:41] output data size: 18,1,28,28
I0210 21:28:47.729764 29158 net.cpp:150] Setting up mnist
I0210 21:28:47.729789 29158 net.cpp:157] Top shape: 18 1 28 28 (14112)
I0210 21:28:47.729801 29158 net.cpp:157] Top shape: 18 (18)
I0210 21:28:47.729809 29158 net.cpp:165] Memory required for data: 56520
I0210 21:28:47.729825 29158 layer_factory.hpp:77] Creating layer conv1
I0210 21:28:47.729857 29158 net.cpp:106] Creating Layer conv1
I0210 21:28:47.729869 29158 net.cpp:454] conv1 <- data
I0210 21:28:47.729898 29158 net.cpp:411] conv1 -> conv1
I0210 21:28:47.731187 29158 net.cpp:150] Setting up conv1
I0210 21:28:47.731202 29158 net.cpp:157] Top shape: 18 20 24 24 (207360)
I0210 21:28:47.731209 29158 net.cpp:165] Memory required for data: 885960
I0210 21:28:47.731227 29158 layer_factory.hpp:77] Creating layer pool1
I0210 21:28:47.731245 29158 net.cpp:106] Creating Layer pool1
I0210 21:28:47.731253 29158 net.cpp:454] pool1 <- conv1
I0210 21:28:47.731261 29158 net.cpp:411] pool1 -> pool1
I0210 21:28:47.731459 29158 net.cpp:150] Setting up pool1
I0210 21:28:47.731472 29158 net.cpp:157] Top shape: 18 20 12 12 (51840)
I0210 21:28:47.731477 29158 net.cpp:165] Memory required for data: 1093320
I0210 21:28:47.731482 29158 layer_factory.hpp:77] Creating layer conv2
I0210 21:28:47.731498 29158 net.cpp:106] Creating Layer conv2
I0210 21:28:47.731504 29158 net.cpp:454] conv2 <- pool1
I0210 21:28:47.731513 29158 net.cpp:411] conv2 -> conv2
I0210 21:28:47.732837 29158 net.cpp:150] Setting up conv2
I0210 21:28:47.732852 29158 net.cpp:157] Top shape: 18 50 8 8 (57600)
I0210 21:28:47.732857 29158 net.cpp:165] Memory required for data: 1323720
I0210 21:28:47.732868 29158 layer_factory.hpp:77] Creating layer pool2
I0210 21:28:47.732880 29158 net.cpp:106] Creating Layer pool2
I0210 21:28:47.732887 29158 net.cpp:454] pool2 <- conv2
I0210 21:28:47.732911 29158 net.cpp:411] pool2 -> pool2
I0210 21:28:47.733059 29158 net.cpp:150] Setting up pool2
I0210 21:28:47.733072 29158 net.cpp:157] Top shape: 18 50 4 4 (14400)
I0210 21:28:47.733075 29158 net.cpp:165] Memory required for data: 1381320
I0210 21:28:47.733081 29158 layer_factory.hpp:77] Creating layer ip1
I0210 21:28:47.733100 29158 net.cpp:106] Creating Layer ip1
I0210 21:28:47.733108 29158 net.cpp:454] ip1 <- pool2
I0210 21:28:47.733116 29158 net.cpp:411] ip1 -> ip1
I0210 21:28:47.734333 29163 blocking_queue.cpp:50] Waiting for data
I0210 21:28:47.737623 29158 net.cpp:150] Setting up ip1
I0210 21:28:47.737639 29158 net.cpp:157] Top shape: 18 500 (9000)
I0210 21:28:47.737644 29158 net.cpp:165] Memory required for data: 1417320
I0210 21:28:47.737656 29158 layer_factory.hpp:77] Creating layer relu1
I0210 21:28:47.737668 29158 net.cpp:106] Creating Layer relu1
I0210 21:28:47.737673 29158 net.cpp:454] relu1 <- ip1
I0210 21:28:47.737684 29158 net.cpp:397] relu1 -> ip1 (in-place)
I0210 21:28:47.737696 29158 net.cpp:150] Setting up relu1
I0210 21:28:47.737704 29158 net.cpp:157] Top shape: 18 500 (9000)
I0210 21:28:47.737709 29158 net.cpp:165] Memory required for data: 1453320
I0210 21:28:47.737715 29158 layer_factory.hpp:77] Creating layer ip2
I0210 21:28:47.737725 29158 net.cpp:106] Creating Layer ip2
I0210 21:28:47.737730 29158 net.cpp:454] ip2 <- ip1
I0210 21:28:47.737741 29158 net.cpp:411] ip2 -> ip2
I0210 21:28:47.737903 29158 net.cpp:150] Setting up ip2
I0210 21:28:47.737915 29158 net.cpp:157] Top shape: 18 10 (180)
I0210 21:28:47.737920 29158 net.cpp:165] Memory required for data: 1454040
I0210 21:28:47.737929 29158 layer_factory.hpp:77] Creating layer loss
I0210 21:28:47.737941 29158 net.cpp:106] Creating Layer loss
I0210 21:28:47.737946 29158 net.cpp:454] loss <- ip2
I0210 21:28:47.737953 29158 net.cpp:454] loss <- label
I0210 21:28:47.737965 29158 net.cpp:411] loss -> loss
I0210 21:28:47.737985 29158 layer_factory.hpp:77] Creating layer loss
I0210 21:28:47.738080 29158 net.cpp:150] Setting up loss
I0210 21:28:47.738091 29158 net.cpp:157] Top shape: (1)
I0210 21:28:47.738097 29158 net.cpp:160]     with loss weight 1
I0210 21:28:47.738127 29158 net.cpp:165] Memory required for data: 1454044
I0210 21:28:47.738137 29158 net.cpp:226] loss needs backward computation.
I0210 21:28:47.738143 29158 net.cpp:226] ip2 needs backward computation.
I0210 21:28:47.738149 29158 net.cpp:226] relu1 needs backward computation.
I0210 21:28:47.738154 29158 net.cpp:226] ip1 needs backward computation.
I0210 21:28:47.738159 29158 net.cpp:226] pool2 needs backward computation.
I0210 21:28:47.738164 29158 net.cpp:226] conv2 needs backward computation.
I0210 21:28:47.738173 29158 net.cpp:226] pool1 needs backward computation.
I0210 21:28:47.738179 29158 net.cpp:226] conv1 needs backward computation.
I0210 21:28:47.738185 29158 net.cpp:228] mnist does not need backward computation.
I0210 21:28:47.738190 29158 net.cpp:270] This network produces output loss
I0210 21:28:47.738205 29158 net.cpp:283] Network initialization done.
I0210 21:28:47.739524 29158 solver.cpp:181] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0210 21:28:47.739567 29158 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0210 21:28:47.739742 29158 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0210 21:28:47.739841 29158 layer_factory.hpp:77] Creating layer mnist
I0210 21:28:47.739991 29158 net.cpp:106] Creating Layer mnist
I0210 21:28:47.740013 29158 net.cpp:411] mnist -> data
I0210 21:28:47.740026 29158 net.cpp:411] mnist -> label
I0210 21:28:47.745514 29164 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_test_lmdb
I0210 21:28:47.745965 29158 data_layer.cpp:41] output data size: 100,1,28,28
I0210 21:28:47.747807 29158 net.cpp:150] Setting up mnist
I0210 21:28:47.747833 29158 net.cpp:157] Top shape: 100 1 28 28 (78400)
I0210 21:28:47.747844 29158 net.cpp:157] Top shape: 100 (100)
I0210 21:28:47.747850 29158 net.cpp:165] Memory required for data: 314000
I0210 21:28:47.747859 29158 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0210 21:28:47.747889 29158 net.cpp:106] Creating Layer label_mnist_1_split
I0210 21:28:47.747900 29158 net.cpp:454] label_mnist_1_split <- label
I0210 21:28:47.747908 29158 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_0
I0210 21:28:47.747920 29158 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_1
I0210 21:28:47.748080 29158 net.cpp:150] Setting up label_mnist_1_split
I0210 21:28:47.748091 29158 net.cpp:157] Top shape: 100 (100)
I0210 21:28:47.748098 29158 net.cpp:157] Top shape: 100 (100)
I0210 21:28:47.748105 29158 net.cpp:165] Memory required for data: 314800
I0210 21:28:47.748111 29158 layer_factory.hpp:77] Creating layer conv1
I0210 21:28:47.748126 29158 net.cpp:106] Creating Layer conv1
I0210 21:28:47.748133 29158 net.cpp:454] conv1 <- data
I0210 21:28:47.748145 29158 net.cpp:411] conv1 -> conv1
I0210 21:28:47.748397 29158 net.cpp:150] Setting up conv1
I0210 21:28:47.748410 29158 net.cpp:157] Top shape: 100 20 24 24 (1152000)
I0210 21:28:47.748416 29158 net.cpp:165] Memory required for data: 4922800
I0210 21:28:47.748430 29158 layer_factory.hpp:77] Creating layer pool1
I0210 21:28:47.748442 29158 net.cpp:106] Creating Layer pool1
I0210 21:28:47.748463 29158 net.cpp:454] pool1 <- conv1
I0210 21:28:47.748473 29158 net.cpp:411] pool1 -> pool1
I0210 21:28:47.748631 29158 net.cpp:150] Setting up pool1
I0210 21:28:47.748641 29158 net.cpp:157] Top shape: 100 20 12 12 (288000)
I0210 21:28:47.748647 29158 net.cpp:165] Memory required for data: 6074800
I0210 21:28:47.748653 29158 layer_factory.hpp:77] Creating layer conv2
I0210 21:28:47.748669 29158 net.cpp:106] Creating Layer conv2
I0210 21:28:47.748677 29158 net.cpp:454] conv2 <- pool1
I0210 21:28:47.748685 29158 net.cpp:411] conv2 -> conv2
I0210 21:28:47.749128 29158 net.cpp:150] Setting up conv2
I0210 21:28:47.749140 29158 net.cpp:157] Top shape: 100 50 8 8 (320000)
I0210 21:28:47.749146 29158 net.cpp:165] Memory required for data: 7354800
I0210 21:28:47.749158 29158 layer_factory.hpp:77] Creating layer pool2
I0210 21:28:47.749169 29158 net.cpp:106] Creating Layer pool2
I0210 21:28:47.749174 29158 net.cpp:454] pool2 <- conv2
I0210 21:28:47.749181 29158 net.cpp:411] pool2 -> pool2
I0210 21:28:47.749342 29158 net.cpp:150] Setting up pool2
I0210 21:28:47.749354 29158 net.cpp:157] Top shape: 100 50 4 4 (80000)
I0210 21:28:47.749358 29158 net.cpp:165] Memory required for data: 7674800
I0210 21:28:47.749364 29158 layer_factory.hpp:77] Creating layer ip1
I0210 21:28:47.749377 29158 net.cpp:106] Creating Layer ip1
I0210 21:28:47.749385 29158 net.cpp:454] ip1 <- pool2
I0210 21:28:47.749404 29158 net.cpp:411] ip1 -> ip1
I0210 21:28:47.754861 29158 net.cpp:150] Setting up ip1
I0210 21:28:47.754878 29158 net.cpp:157] Top shape: 100 500 (50000)
I0210 21:28:47.754895 29158 net.cpp:165] Memory required for data: 7874800
I0210 21:28:47.754909 29158 layer_factory.hpp:77] Creating layer relu1
I0210 21:28:47.754919 29158 net.cpp:106] Creating Layer relu1
I0210 21:28:47.754926 29158 net.cpp:454] relu1 <- ip1
I0210 21:28:47.754938 29158 net.cpp:397] relu1 -> ip1 (in-place)
I0210 21:28:47.754948 29158 net.cpp:150] Setting up relu1
I0210 21:28:47.754956 29158 net.cpp:157] Top shape: 100 500 (50000)
I0210 21:28:47.754961 29158 net.cpp:165] Memory required for data: 8074800
I0210 21:28:47.754966 29158 layer_factory.hpp:77] Creating layer ip2
I0210 21:28:47.754977 29158 net.cpp:106] Creating Layer ip2
I0210 21:28:47.754983 29158 net.cpp:454] ip2 <- ip1
I0210 21:28:47.754995 29158 net.cpp:411] ip2 -> ip2
I0210 21:28:47.755152 29158 net.cpp:150] Setting up ip2
I0210 21:28:47.755163 29158 net.cpp:157] Top shape: 100 10 (1000)
I0210 21:28:47.755169 29158 net.cpp:165] Memory required for data: 8078800
I0210 21:28:47.755178 29158 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0210 21:28:47.755187 29158 net.cpp:106] Creating Layer ip2_ip2_0_split
I0210 21:28:47.755194 29158 net.cpp:454] ip2_ip2_0_split <- ip2
I0210 21:28:47.755203 29158 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0210 21:28:47.755214 29158 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0210 21:28:47.755254 29158 net.cpp:150] Setting up ip2_ip2_0_split
I0210 21:28:47.755264 29158 net.cpp:157] Top shape: 100 10 (1000)
I0210 21:28:47.755272 29158 net.cpp:157] Top shape: 100 10 (1000)
I0210 21:28:47.755278 29158 net.cpp:165] Memory required for data: 8086800
I0210 21:28:47.755285 29158 layer_factory.hpp:77] Creating layer accuracy
I0210 21:28:47.755301 29158 net.cpp:106] Creating Layer accuracy
I0210 21:28:47.755307 29158 net.cpp:454] accuracy <- ip2_ip2_0_split_0
I0210 21:28:47.755316 29158 net.cpp:454] accuracy <- label_mnist_1_split_0
I0210 21:28:47.755323 29158 net.cpp:411] accuracy -> accuracy
I0210 21:28:47.755337 29158 net.cpp:150] Setting up accuracy
I0210 21:28:47.755347 29158 net.cpp:157] Top shape: (1)
I0210 21:28:47.755352 29158 net.cpp:165] Memory required for data: 8086804
I0210 21:28:47.755357 29158 layer_factory.hpp:77] Creating layer loss
I0210 21:28:47.755368 29158 net.cpp:106] Creating Layer loss
I0210 21:28:47.755374 29158 net.cpp:454] loss <- ip2_ip2_0_split_1
I0210 21:28:47.755381 29158 net.cpp:454] loss <- label_mnist_1_split_1
I0210 21:28:47.755389 29158 net.cpp:411] loss -> loss
I0210 21:28:47.755416 29158 layer_factory.hpp:77] Creating layer loss
I0210 21:28:47.755511 29158 net.cpp:150] Setting up loss
I0210 21:28:47.755522 29158 net.cpp:157] Top shape: (1)
I0210 21:28:47.755527 29158 net.cpp:160]     with loss weight 1
I0210 21:28:47.755537 29158 net.cpp:165] Memory required for data: 8086808
I0210 21:28:47.755543 29158 net.cpp:226] loss needs backward computation.
I0210 21:28:47.755550 29158 net.cpp:228] accuracy does not need backward computation.
I0210 21:28:47.755558 29158 net.cpp:226] ip2_ip2_0_split needs backward computation.
I0210 21:28:47.755563 29158 net.cpp:226] ip2 needs backward computation.
I0210 21:28:47.755569 29158 net.cpp:226] relu1 needs backward computation.
I0210 21:28:47.755574 29158 net.cpp:226] ip1 needs backward computation.
I0210 21:28:47.755579 29158 net.cpp:226] pool2 needs backward computation.
I0210 21:28:47.755586 29158 net.cpp:226] conv2 needs backward computation.
I0210 21:28:47.755591 29158 net.cpp:226] pool1 needs backward computation.
I0210 21:28:47.755596 29158 net.cpp:226] conv1 needs backward computation.
I0210 21:28:47.755601 29158 net.cpp:228] label_mnist_1_split does not need backward computation.
I0210 21:28:47.755609 29158 net.cpp:228] mnist does not need backward computation.
I0210 21:28:47.755614 29158 net.cpp:270] This network produces output accuracy
I0210 21:28:47.755620 29158 net.cpp:270] This network produces output loss
I0210 21:28:47.755640 29158 net.cpp:283] Network initialization done.
I0210 21:28:47.755681 29158 solver.cpp:60] Solver scaffolding done.
I0210 21:28:47.882511 29158 parallel.cpp:405] GPUs pairs 1:2, 4:5, 6:7, 1:3, 4:6, 1:4
I0210 21:28:48.081523 29158 data_layer.cpp:41] output data size: 18,1,28,28
I0210 21:28:48.597576 29158 data_layer.cpp:41] output data size: 18,1,28,28
I0210 21:28:49.013088 29158 data_layer.cpp:41] output data size: 18,1,28,28
I0210 21:28:49.114444 29158 parallel.cpp:234] GPU 4 does not have p2p access to GPU 1
I0210 21:28:49.432359 29158 data_layer.cpp:41] output data size: 18,1,28,28
I0210 21:28:49.943748 29158 data_layer.cpp:41] output data size: 18,1,28,28
I0210 21:28:50.574988 29158 data_layer.cpp:41] output data size: 18,1,28,28
I0210 21:28:50.769114 29158 parallel.cpp:433] Starting Optimization - TEST TEST TEST
I0210 21:28:50.927162 29158 solver.cpp:311] Solving LeNet
I0210 21:28:50.927211 29158 solver.cpp:312] Learning Rate Policy: inv
I0210 21:28:50.927781 29158 solver.cpp:364] Iteration 0, Testing net (#0)
I0210 21:28:51.992331 29158 solver.cpp:432]     Test net output #0: accuracy = 0.0894
I0210 21:28:51.992395 29158 solver.cpp:432]     Test net output #1: loss = 2.40215 (* 1 = 2.40215 loss)
I0210 21:28:52.011689 29158 solver.cpp:250] Iteration 0, loss = 2.19554 Time spent communicating 0.709888
I0210 21:28:52.011728 29158 solver.cpp:267]     Train net output #0: loss = 2.19554 (* 1 = 2.19554 loss)
I0210 21:28:52.013036 29158 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0210 21:28:53.009819 29158 solver.cpp:250] Iteration 100, loss = 0.479552 Time spent communicating 168.91
I0210 21:28:53.009872 29158 solver.cpp:267]     Train net output #0: loss = 0.479552 (* 1 = 0.479552 loss)
I0210 21:28:53.011126 29158 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0210 21:28:53.999321 29158 solver.cpp:250] Iteration 200, loss = 0.060803 Time spent communicating 241.05
I0210 21:28:53.999367 29158 solver.cpp:267]     Train net output #0: loss = 0.060803 (* 1 = 0.060803 loss)
I0210 21:28:54.001595 29158 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0210 21:28:54.982609 29158 solver.cpp:250] Iteration 300, loss = 0.0496698 Time spent communicating 216.082
I0210 21:28:54.982656 29158 solver.cpp:267]     Train net output #0: loss = 0.0496698 (* 1 = 0.0496698 loss)
I0210 21:28:54.984395 29158 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0210 21:28:55.957231 29158 solver.cpp:250] Iteration 400, loss = 0.21417 Time spent communicating 166.999
I0210 21:28:55.957276 29158 solver.cpp:267]     Train net output #0: loss = 0.21417 (* 1 = 0.21417 loss)
I0210 21:28:55.958358 29158 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0210 21:28:56.911864 29158 solver.cpp:482] Snapshotting to binary proto file examples/mnist/lenet_iter_500.caffemodel
I0210 21:28:56.944769 29158 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_500.solverstate
I0210 21:28:56.971005 29158 solver.cpp:344] Iteration 500, loss = 0.0794273
I0210 21:28:56.971041 29158 solver.cpp:364] Iteration 500, Testing net (#0)
I0210 21:28:57.921061 29158 solver.cpp:432]     Test net output #0: accuracy = 0.9768
I0210 21:28:57.921108 29158 solver.cpp:432]     Test net output #1: loss = 0.0737885 (* 1 = 0.0737885 loss)
I0210 21:28:57.921115 29158 solver.cpp:349] Optimization Done.
I0210 21:28:57.921241 29158 parallel.cpp:256] IN DESTRUCTOR AND I'M 2
I0210 21:28:57.946394 29158 parallel.cpp:256] IN DESTRUCTOR AND I'M 5
I0210 21:28:57.969319 29158 parallel.cpp:256] IN DESTRUCTOR AND I'M 7
I0210 21:28:57.991953 29158 parallel.cpp:256] IN DESTRUCTOR AND I'M 3
I0210 21:28:58.015755 29158 parallel.cpp:256] IN DESTRUCTOR AND I'M 6
I0210 21:28:58.039535 29158 parallel.cpp:256] IN DESTRUCTOR AND I'M 4
I0210 21:28:58.059597 29158 parallel.cpp:256] IN DESTRUCTOR AND I'M 1
I0210 21:28:58.060072 29158 caffe.cpp:215] Optimization Done.
