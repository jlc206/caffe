I0211 09:35:23.363042  4395 caffe.cpp:184] Using GPUs 0, 1, 2, 3, 4, 5, 6, 7
I0211 09:35:28.201783  4395 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 500
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "examples/mnist/lenet_train_test.prototxt"
I0211 09:35:28.214179  4395 solver.cpp:91] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0211 09:35:28.215919  4395 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0211 09:35:28.215977  4395 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0211 09:35:28.216250  4395 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 16
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:35:28.216408  4395 layer_factory.hpp:77] Creating layer mnist
I0211 09:35:28.217854  4395 net.cpp:106] Creating Layer mnist
I0211 09:35:28.217905  4395 net.cpp:411] mnist -> data
I0211 09:35:28.218003  4395 net.cpp:411] mnist -> label
I0211 09:35:28.225188  4402 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_train_lmdb
I0211 09:35:28.244613  4395 data_layer.cpp:41] output data size: 16,1,28,28
I0211 09:35:28.245882  4395 net.cpp:150] Setting up mnist
I0211 09:35:28.245908  4395 net.cpp:157] Top shape: 16 1 28 28 (12544)
I0211 09:35:28.245915  4395 net.cpp:157] Top shape: 16 (16)
I0211 09:35:28.245920  4395 net.cpp:165] Memory required for data: 50240
I0211 09:35:28.245934  4395 layer_factory.hpp:77] Creating layer conv1
I0211 09:35:28.245966  4395 net.cpp:106] Creating Layer conv1
I0211 09:35:28.245978  4395 net.cpp:454] conv1 <- data
I0211 09:35:28.245998  4395 net.cpp:411] conv1 -> conv1
I0211 09:35:28.248008  4395 net.cpp:150] Setting up conv1
I0211 09:35:28.248028  4395 net.cpp:157] Top shape: 16 20 24 24 (184320)
I0211 09:35:28.248034  4395 net.cpp:165] Memory required for data: 787520
I0211 09:35:28.248051  4395 layer_factory.hpp:77] Creating layer pool1
I0211 09:35:28.248070  4395 net.cpp:106] Creating Layer pool1
I0211 09:35:28.248076  4395 net.cpp:454] pool1 <- conv1
I0211 09:35:28.248087  4395 net.cpp:411] pool1 -> pool1
I0211 09:35:28.248289  4395 net.cpp:150] Setting up pool1
I0211 09:35:28.248302  4395 net.cpp:157] Top shape: 16 20 12 12 (46080)
I0211 09:35:28.248307  4395 net.cpp:165] Memory required for data: 971840
I0211 09:35:28.248313  4395 layer_factory.hpp:77] Creating layer conv2
I0211 09:35:28.248328  4395 net.cpp:106] Creating Layer conv2
I0211 09:35:28.248335  4395 net.cpp:454] conv2 <- pool1
I0211 09:35:28.248344  4395 net.cpp:411] conv2 -> conv2
I0211 09:35:28.249982  4395 net.cpp:150] Setting up conv2
I0211 09:35:28.250000  4395 net.cpp:157] Top shape: 16 50 8 8 (51200)
I0211 09:35:28.250005  4395 net.cpp:165] Memory required for data: 1176640
I0211 09:35:28.250016  4395 layer_factory.hpp:77] Creating layer pool2
I0211 09:35:28.250026  4395 net.cpp:106] Creating Layer pool2
I0211 09:35:28.250031  4395 net.cpp:454] pool2 <- conv2
I0211 09:35:28.250041  4395 net.cpp:411] pool2 -> pool2
I0211 09:35:28.250195  4395 net.cpp:150] Setting up pool2
I0211 09:35:28.250206  4395 net.cpp:157] Top shape: 16 50 4 4 (12800)
I0211 09:35:28.250212  4395 net.cpp:165] Memory required for data: 1227840
I0211 09:35:28.250217  4395 layer_factory.hpp:77] Creating layer ip1
I0211 09:35:28.250236  4395 net.cpp:106] Creating Layer ip1
I0211 09:35:28.250243  4395 net.cpp:454] ip1 <- pool2
I0211 09:35:28.250254  4395 net.cpp:411] ip1 -> ip1
I0211 09:35:28.252542  4403 blocking_queue.cpp:50] Waiting for data
I0211 09:35:28.255101  4395 net.cpp:150] Setting up ip1
I0211 09:35:28.255120  4395 net.cpp:157] Top shape: 16 500 (8000)
I0211 09:35:28.255125  4395 net.cpp:165] Memory required for data: 1259840
I0211 09:35:28.255137  4395 layer_factory.hpp:77] Creating layer relu1
I0211 09:35:28.255151  4395 net.cpp:106] Creating Layer relu1
I0211 09:35:28.255158  4395 net.cpp:454] relu1 <- ip1
I0211 09:35:28.255167  4395 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:35:28.255180  4395 net.cpp:150] Setting up relu1
I0211 09:35:28.255188  4395 net.cpp:157] Top shape: 16 500 (8000)
I0211 09:35:28.255193  4395 net.cpp:165] Memory required for data: 1291840
I0211 09:35:28.255199  4395 layer_factory.hpp:77] Creating layer ip2
I0211 09:35:28.255213  4395 net.cpp:106] Creating Layer ip2
I0211 09:35:28.255219  4395 net.cpp:454] ip2 <- ip1
I0211 09:35:28.255228  4395 net.cpp:411] ip2 -> ip2
I0211 09:35:28.255388  4395 net.cpp:150] Setting up ip2
I0211 09:35:28.255399  4395 net.cpp:157] Top shape: 16 10 (160)
I0211 09:35:28.255405  4395 net.cpp:165] Memory required for data: 1292480
I0211 09:35:28.255414  4395 layer_factory.hpp:77] Creating layer loss
I0211 09:35:28.255427  4395 net.cpp:106] Creating Layer loss
I0211 09:35:28.255434  4395 net.cpp:454] loss <- ip2
I0211 09:35:28.255441  4395 net.cpp:454] loss <- label
I0211 09:35:28.255453  4395 net.cpp:411] loss -> loss
I0211 09:35:28.255475  4395 layer_factory.hpp:77] Creating layer loss
I0211 09:35:28.255578  4395 net.cpp:150] Setting up loss
I0211 09:35:28.255589  4395 net.cpp:157] Top shape: (1)
I0211 09:35:28.255595  4395 net.cpp:160]     with loss weight 1
I0211 09:35:28.255625  4395 net.cpp:165] Memory required for data: 1292484
I0211 09:35:28.255635  4395 net.cpp:226] loss needs backward computation.
I0211 09:35:28.255643  4395 net.cpp:226] ip2 needs backward computation.
I0211 09:35:28.255648  4395 net.cpp:226] relu1 needs backward computation.
I0211 09:35:28.255653  4395 net.cpp:226] ip1 needs backward computation.
I0211 09:35:28.255658  4395 net.cpp:226] pool2 needs backward computation.
I0211 09:35:28.255662  4395 net.cpp:226] conv2 needs backward computation.
I0211 09:35:28.255671  4395 net.cpp:226] pool1 needs backward computation.
I0211 09:35:28.255679  4395 net.cpp:226] conv1 needs backward computation.
I0211 09:35:28.255686  4395 net.cpp:228] mnist does not need backward computation.
I0211 09:35:28.255691  4395 net.cpp:270] This network produces output loss
I0211 09:35:28.255707  4395 net.cpp:283] Network initialization done.
I0211 09:35:28.256816  4395 solver.cpp:181] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0211 09:35:28.256857  4395 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0211 09:35:28.257050  4395 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:35:28.257158  4395 layer_factory.hpp:77] Creating layer mnist
I0211 09:35:28.257293  4395 net.cpp:106] Creating Layer mnist
I0211 09:35:28.257308  4395 net.cpp:411] mnist -> data
I0211 09:35:28.257320  4395 net.cpp:411] mnist -> label
I0211 09:35:28.262987  4404 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_test_lmdb
I0211 09:35:28.263368  4395 data_layer.cpp:41] output data size: 100,1,28,28
I0211 09:35:28.265329  4395 net.cpp:150] Setting up mnist
I0211 09:35:28.265347  4395 net.cpp:157] Top shape: 100 1 28 28 (78400)
I0211 09:35:28.265354  4395 net.cpp:157] Top shape: 100 (100)
I0211 09:35:28.265359  4395 net.cpp:165] Memory required for data: 314000
I0211 09:35:28.265367  4395 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0211 09:35:28.265384  4395 net.cpp:106] Creating Layer label_mnist_1_split
I0211 09:35:28.265391  4395 net.cpp:454] label_mnist_1_split <- label
I0211 09:35:28.265399  4395 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_0
I0211 09:35:28.265413  4395 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_1
I0211 09:35:28.265470  4395 net.cpp:150] Setting up label_mnist_1_split
I0211 09:35:28.265480  4395 net.cpp:157] Top shape: 100 (100)
I0211 09:35:28.265486  4395 net.cpp:157] Top shape: 100 (100)
I0211 09:35:28.265491  4395 net.cpp:165] Memory required for data: 314800
I0211 09:35:28.265497  4395 layer_factory.hpp:77] Creating layer conv1
I0211 09:35:28.265513  4395 net.cpp:106] Creating Layer conv1
I0211 09:35:28.265521  4395 net.cpp:454] conv1 <- data
I0211 09:35:28.265532  4395 net.cpp:411] conv1 -> conv1
I0211 09:35:28.266007  4395 net.cpp:150] Setting up conv1
I0211 09:35:28.266021  4395 net.cpp:157] Top shape: 100 20 24 24 (1152000)
I0211 09:35:28.266027  4395 net.cpp:165] Memory required for data: 4922800
I0211 09:35:28.266039  4395 layer_factory.hpp:77] Creating layer pool1
I0211 09:35:28.266052  4395 net.cpp:106] Creating Layer pool1
I0211 09:35:28.266072  4395 net.cpp:454] pool1 <- conv1
I0211 09:35:28.266083  4395 net.cpp:411] pool1 -> pool1
I0211 09:35:28.266371  4395 net.cpp:150] Setting up pool1
I0211 09:35:28.266384  4395 net.cpp:157] Top shape: 100 20 12 12 (288000)
I0211 09:35:28.266388  4395 net.cpp:165] Memory required for data: 6074800
I0211 09:35:28.266393  4395 layer_factory.hpp:77] Creating layer conv2
I0211 09:35:28.266433  4395 net.cpp:106] Creating Layer conv2
I0211 09:35:28.266448  4395 net.cpp:454] conv2 <- pool1
I0211 09:35:28.266479  4395 net.cpp:411] conv2 -> conv2
I0211 09:35:28.267175  4395 net.cpp:150] Setting up conv2
I0211 09:35:28.267212  4395 net.cpp:157] Top shape: 100 50 8 8 (320000)
I0211 09:35:28.267218  4395 net.cpp:165] Memory required for data: 7354800
I0211 09:35:28.267228  4395 layer_factory.hpp:77] Creating layer pool2
I0211 09:35:28.267241  4395 net.cpp:106] Creating Layer pool2
I0211 09:35:28.267246  4395 net.cpp:454] pool2 <- conv2
I0211 09:35:28.267254  4395 net.cpp:411] pool2 -> pool2
I0211 09:35:28.267526  4395 net.cpp:150] Setting up pool2
I0211 09:35:28.267546  4395 net.cpp:157] Top shape: 100 50 4 4 (80000)
I0211 09:35:28.267552  4395 net.cpp:165] Memory required for data: 7674800
I0211 09:35:28.267557  4395 layer_factory.hpp:77] Creating layer ip1
I0211 09:35:28.267567  4395 net.cpp:106] Creating Layer ip1
I0211 09:35:28.267573  4395 net.cpp:454] ip1 <- pool2
I0211 09:35:28.267590  4395 net.cpp:411] ip1 -> ip1
I0211 09:35:28.276170  4395 net.cpp:150] Setting up ip1
I0211 09:35:28.276190  4395 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:35:28.276196  4395 net.cpp:165] Memory required for data: 7874800
I0211 09:35:28.276208  4395 layer_factory.hpp:77] Creating layer relu1
I0211 09:35:28.276221  4395 net.cpp:106] Creating Layer relu1
I0211 09:35:28.276229  4395 net.cpp:454] relu1 <- ip1
I0211 09:35:28.276237  4395 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:35:28.276248  4395 net.cpp:150] Setting up relu1
I0211 09:35:28.276255  4395 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:35:28.276262  4395 net.cpp:165] Memory required for data: 8074800
I0211 09:35:28.276267  4395 layer_factory.hpp:77] Creating layer ip2
I0211 09:35:28.276278  4395 net.cpp:106] Creating Layer ip2
I0211 09:35:28.276283  4395 net.cpp:454] ip2 <- ip1
I0211 09:35:28.276295  4395 net.cpp:411] ip2 -> ip2
I0211 09:35:28.276453  4395 net.cpp:150] Setting up ip2
I0211 09:35:28.276464  4395 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:35:28.276469  4395 net.cpp:165] Memory required for data: 8078800
I0211 09:35:28.276479  4395 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0211 09:35:28.276487  4395 net.cpp:106] Creating Layer ip2_ip2_0_split
I0211 09:35:28.276494  4395 net.cpp:454] ip2_ip2_0_split <- ip2
I0211 09:35:28.276500  4395 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0211 09:35:28.276510  4395 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0211 09:35:28.276552  4395 net.cpp:150] Setting up ip2_ip2_0_split
I0211 09:35:28.276562  4395 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:35:28.276568  4395 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:35:28.276573  4395 net.cpp:165] Memory required for data: 8086800
I0211 09:35:28.276578  4395 layer_factory.hpp:77] Creating layer accuracy
I0211 09:35:28.276592  4395 net.cpp:106] Creating Layer accuracy
I0211 09:35:28.276597  4395 net.cpp:454] accuracy <- ip2_ip2_0_split_0
I0211 09:35:28.276604  4395 net.cpp:454] accuracy <- label_mnist_1_split_0
I0211 09:35:28.276612  4395 net.cpp:411] accuracy -> accuracy
I0211 09:35:28.276626  4395 net.cpp:150] Setting up accuracy
I0211 09:35:28.276634  4395 net.cpp:157] Top shape: (1)
I0211 09:35:28.276639  4395 net.cpp:165] Memory required for data: 8086804
I0211 09:35:28.276645  4395 layer_factory.hpp:77] Creating layer loss
I0211 09:35:28.276655  4395 net.cpp:106] Creating Layer loss
I0211 09:35:28.276662  4395 net.cpp:454] loss <- ip2_ip2_0_split_1
I0211 09:35:28.276669  4395 net.cpp:454] loss <- label_mnist_1_split_1
I0211 09:35:28.276676  4395 net.cpp:411] loss -> loss
I0211 09:35:28.276705  4395 layer_factory.hpp:77] Creating layer loss
I0211 09:35:28.276800  4395 net.cpp:150] Setting up loss
I0211 09:35:28.276811  4395 net.cpp:157] Top shape: (1)
I0211 09:35:28.276818  4395 net.cpp:160]     with loss weight 1
I0211 09:35:28.276825  4395 net.cpp:165] Memory required for data: 8086808
I0211 09:35:28.276830  4395 net.cpp:226] loss needs backward computation.
I0211 09:35:28.276835  4395 net.cpp:228] accuracy does not need backward computation.
I0211 09:35:28.276841  4395 net.cpp:226] ip2_ip2_0_split needs backward computation.
I0211 09:35:28.276845  4395 net.cpp:226] ip2 needs backward computation.
I0211 09:35:28.276849  4395 net.cpp:226] relu1 needs backward computation.
I0211 09:35:28.276854  4395 net.cpp:226] ip1 needs backward computation.
I0211 09:35:28.276859  4395 net.cpp:226] pool2 needs backward computation.
I0211 09:35:28.276862  4395 net.cpp:226] conv2 needs backward computation.
I0211 09:35:28.276872  4395 net.cpp:226] pool1 needs backward computation.
I0211 09:35:28.276878  4395 net.cpp:226] conv1 needs backward computation.
I0211 09:35:28.276885  4395 net.cpp:228] label_mnist_1_split does not need backward computation.
I0211 09:35:28.276895  4395 net.cpp:228] mnist does not need backward computation.
I0211 09:35:28.276901  4395 net.cpp:270] This network produces output accuracy
I0211 09:35:28.276907  4395 net.cpp:270] This network produces output loss
I0211 09:35:28.276926  4395 net.cpp:283] Network initialization done.
I0211 09:35:28.276973  4395 solver.cpp:60] Solver scaffolding done.
I0211 09:35:28.545900  4395 parallel.cpp:405] GPUs pairs 0:1, 2:3, 4:5, 6:7, 0:2, 4:6, 0:4
I0211 09:35:28.814225  4395 data_layer.cpp:41] output data size: 16,1,28,28
I0211 09:35:29.252419  4395 data_layer.cpp:41] output data size: 16,1,28,28
I0211 09:35:29.659811  4395 data_layer.cpp:41] output data size: 16,1,28,28
I0211 09:35:29.886317  4395 parallel.cpp:234] GPU 4 does not have p2p access to GPU 0
I0211 09:35:30.154253  4395 data_layer.cpp:41] output data size: 16,1,28,28
I0211 09:35:30.660940  4395 data_layer.cpp:41] output data size: 16,1,28,28
I0211 09:35:31.113234  4395 data_layer.cpp:41] output data size: 16,1,28,28
I0211 09:35:31.588531  4395 data_layer.cpp:41] output data size: 16,1,28,28
I0211 09:35:31.851294  4395 parallel.cpp:433] Starting Optimization - TEST TEST TEST
I0211 09:35:31.854239  4395 solver.cpp:311] Solving LeNet
I0211 09:35:31.854276  4395 solver.cpp:312] Learning Rate Policy: inv
I0211 09:35:31.855746  4395 solver.cpp:364] Iteration 0, Testing net (#0)
I0211 09:35:32.869617  4395 solver.cpp:432]     Test net output #0: accuracy = 0.0421
I0211 09:35:32.869673  4395 solver.cpp:432]     Test net output #1: loss = 2.44371 (* 1 = 2.44371 loss)
I0211 09:35:32.892717  4395 solver.cpp:250] Iteration 0, loss = 2.37852 Time spent communicating 0.650144
I0211 09:35:32.892791  4395 solver.cpp:267]     Train net output #0: loss = 2.37852 (* 1 = 2.37852 loss)
I0211 09:35:32.902211  4395 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0211 09:35:33.914377  4395 solver.cpp:250] Iteration 100, loss = 0.191947 Time spent communicating 229.752
I0211 09:35:33.914414  4395 solver.cpp:267]     Train net output #0: loss = 0.191947 (* 1 = 0.191947 loss)
I0211 09:35:33.918089  4395 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0211 09:35:34.920233  4395 solver.cpp:250] Iteration 200, loss = 0.259313 Time spent communicating 194.289
I0211 09:35:34.920269  4395 solver.cpp:267]     Train net output #0: loss = 0.259313 (* 1 = 0.259313 loss)
I0211 09:35:34.923182  4395 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0211 09:35:35.921967  4395 solver.cpp:250] Iteration 300, loss = 0.274722 Time spent communicating 158.196
I0211 09:35:35.922013  4395 solver.cpp:267]     Train net output #0: loss = 0.274722 (* 1 = 0.274722 loss)
I0211 09:35:35.922685  4395 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0211 09:35:36.921883  4395 solver.cpp:250] Iteration 400, loss = 0.564382 Time spent communicating 116.646
I0211 09:35:36.921921  4395 solver.cpp:267]     Train net output #0: loss = 0.564382 (* 1 = 0.564382 loss)
I0211 09:35:36.923288  4395 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0211 09:35:37.909658  4395 solver.cpp:482] Snapshotting to binary proto file examples/mnist/lenet_iter_500.caffemodel
I0211 09:35:37.947737  4395 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_500.solverstate
I0211 09:35:37.976006  4395 solver.cpp:344] Iteration 500, loss = 0.0137336
I0211 09:35:37.976032  4395 solver.cpp:364] Iteration 500, Testing net (#0)
I0211 09:35:38.927243  4395 solver.cpp:432]     Test net output #0: accuracy = 0.9755
I0211 09:35:38.927266  4395 solver.cpp:432]     Test net output #1: loss = 0.0746965 (* 1 = 0.0746965 loss)
I0211 09:35:38.927274  4395 solver.cpp:349] Optimization Done.
I0211 09:35:38.927392  4395 parallel.cpp:256] IN DESTRUCTOR AND I'M 1
I0211 09:35:38.955021  4395 parallel.cpp:256] IN DESTRUCTOR AND I'M 3
I0211 09:35:38.980056  4395 parallel.cpp:256] IN DESTRUCTOR AND I'M 5
I0211 09:35:39.005009  4395 parallel.cpp:256] IN DESTRUCTOR AND I'M 7
I0211 09:35:39.030215  4395 parallel.cpp:256] IN DESTRUCTOR AND I'M 2
I0211 09:35:39.055161  4395 parallel.cpp:256] IN DESTRUCTOR AND I'M 6
I0211 09:35:39.078722  4395 parallel.cpp:256] IN DESTRUCTOR AND I'M 4
I0211 09:35:39.101140  4395 parallel.cpp:256] IN DESTRUCTOR AND I'M 0
I0211 09:35:39.101586  4395 caffe.cpp:215] Optimization Done.
