I0211 09:47:01.492876  4996 caffe.cpp:184] Using GPUs 0
I0211 09:47:06.296900  4996 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 500
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "examples/mnist/lenet_train_test.prototxt"
I0211 09:47:06.308734  4996 solver.cpp:91] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0211 09:47:06.310370  4996 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0211 09:47:06.310425  4996 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0211 09:47:06.310722  4996 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:47:06.310906  4996 layer_factory.hpp:77] Creating layer mnist
I0211 09:47:06.312502  4996 net.cpp:106] Creating Layer mnist
I0211 09:47:06.312541  4996 net.cpp:411] mnist -> data
I0211 09:47:06.312683  4996 net.cpp:411] mnist -> label
I0211 09:47:06.318176  5000 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_train_lmdb
I0211 09:47:06.340261  4996 data_layer.cpp:41] output data size: 128,1,28,28
I0211 09:47:06.342468  4996 net.cpp:150] Setting up mnist
I0211 09:47:06.342490  4996 net.cpp:157] Top shape: 128 1 28 28 (100352)
I0211 09:47:06.342499  4996 net.cpp:157] Top shape: 128 (128)
I0211 09:47:06.342504  4996 net.cpp:165] Memory required for data: 401920
I0211 09:47:06.342519  4996 layer_factory.hpp:77] Creating layer conv1
I0211 09:47:06.342555  4996 net.cpp:106] Creating Layer conv1
I0211 09:47:06.342566  4996 net.cpp:454] conv1 <- data
I0211 09:47:06.342586  4996 net.cpp:411] conv1 -> conv1
I0211 09:47:06.343818  4996 net.cpp:150] Setting up conv1
I0211 09:47:06.343833  4996 net.cpp:157] Top shape: 128 20 24 24 (1474560)
I0211 09:47:06.343838  4996 net.cpp:165] Memory required for data: 6300160
I0211 09:47:06.343855  4996 layer_factory.hpp:77] Creating layer pool1
I0211 09:47:06.343875  4996 net.cpp:106] Creating Layer pool1
I0211 09:47:06.343881  4996 net.cpp:454] pool1 <- conv1
I0211 09:47:06.343890  4996 net.cpp:411] pool1 -> pool1
I0211 09:47:06.344100  4996 net.cpp:150] Setting up pool1
I0211 09:47:06.344115  4996 net.cpp:157] Top shape: 128 20 12 12 (368640)
I0211 09:47:06.344120  4996 net.cpp:165] Memory required for data: 7774720
I0211 09:47:06.344126  4996 layer_factory.hpp:77] Creating layer conv2
I0211 09:47:06.344140  4996 net.cpp:106] Creating Layer conv2
I0211 09:47:06.344146  4996 net.cpp:454] conv2 <- pool1
I0211 09:47:06.344157  4996 net.cpp:411] conv2 -> conv2
I0211 09:47:06.345551  4996 net.cpp:150] Setting up conv2
I0211 09:47:06.345566  4996 net.cpp:157] Top shape: 128 50 8 8 (409600)
I0211 09:47:06.345571  4996 net.cpp:165] Memory required for data: 9413120
I0211 09:47:06.345584  4996 layer_factory.hpp:77] Creating layer pool2
I0211 09:47:06.345597  4996 net.cpp:106] Creating Layer pool2
I0211 09:47:06.345603  4996 net.cpp:454] pool2 <- conv2
I0211 09:47:06.345610  4996 net.cpp:411] pool2 -> pool2
I0211 09:47:06.345768  4996 net.cpp:150] Setting up pool2
I0211 09:47:06.345779  4996 net.cpp:157] Top shape: 128 50 4 4 (102400)
I0211 09:47:06.345784  4996 net.cpp:165] Memory required for data: 9822720
I0211 09:47:06.345789  4996 layer_factory.hpp:77] Creating layer ip1
I0211 09:47:06.345808  4996 net.cpp:106] Creating Layer ip1
I0211 09:47:06.345815  4996 net.cpp:454] ip1 <- pool2
I0211 09:47:06.345826  4996 net.cpp:411] ip1 -> ip1
I0211 09:47:06.350358  4996 net.cpp:150] Setting up ip1
I0211 09:47:06.350371  4996 net.cpp:157] Top shape: 128 500 (64000)
I0211 09:47:06.350378  4996 net.cpp:165] Memory required for data: 10078720
I0211 09:47:06.350389  4996 layer_factory.hpp:77] Creating layer relu1
I0211 09:47:06.350400  4996 net.cpp:106] Creating Layer relu1
I0211 09:47:06.350405  4996 net.cpp:454] relu1 <- ip1
I0211 09:47:06.350414  4996 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:47:06.350427  4996 net.cpp:150] Setting up relu1
I0211 09:47:06.350436  4996 net.cpp:157] Top shape: 128 500 (64000)
I0211 09:47:06.350443  4996 net.cpp:165] Memory required for data: 10334720
I0211 09:47:06.350450  4996 layer_factory.hpp:77] Creating layer ip2
I0211 09:47:06.350462  4996 net.cpp:106] Creating Layer ip2
I0211 09:47:06.350468  4996 net.cpp:454] ip2 <- ip1
I0211 09:47:06.350477  4996 net.cpp:411] ip2 -> ip2
I0211 09:47:06.351372  4996 net.cpp:150] Setting up ip2
I0211 09:47:06.351385  4996 net.cpp:157] Top shape: 128 10 (1280)
I0211 09:47:06.351390  4996 net.cpp:165] Memory required for data: 10339840
I0211 09:47:06.351398  4996 layer_factory.hpp:77] Creating layer loss
I0211 09:47:06.351411  4996 net.cpp:106] Creating Layer loss
I0211 09:47:06.351418  4996 net.cpp:454] loss <- ip2
I0211 09:47:06.351424  4996 net.cpp:454] loss <- label
I0211 09:47:06.351433  4996 net.cpp:411] loss -> loss
I0211 09:47:06.351455  4996 layer_factory.hpp:77] Creating layer loss
I0211 09:47:06.352288  4996 net.cpp:150] Setting up loss
I0211 09:47:06.352300  4996 net.cpp:157] Top shape: (1)
I0211 09:47:06.352305  4996 net.cpp:160]     with loss weight 1
I0211 09:47:06.352336  4996 net.cpp:165] Memory required for data: 10339844
I0211 09:47:06.352346  4996 net.cpp:226] loss needs backward computation.
I0211 09:47:06.352352  4996 net.cpp:226] ip2 needs backward computation.
I0211 09:47:06.352358  4996 net.cpp:226] relu1 needs backward computation.
I0211 09:47:06.352365  4996 net.cpp:226] ip1 needs backward computation.
I0211 09:47:06.352370  4996 net.cpp:226] pool2 needs backward computation.
I0211 09:47:06.352375  4996 net.cpp:226] conv2 needs backward computation.
I0211 09:47:06.352385  4996 net.cpp:226] pool1 needs backward computation.
I0211 09:47:06.352391  4996 net.cpp:226] conv1 needs backward computation.
I0211 09:47:06.352398  4996 net.cpp:228] mnist does not need backward computation.
I0211 09:47:06.352403  4996 net.cpp:270] This network produces output loss
I0211 09:47:06.352418  4996 net.cpp:283] Network initialization done.
I0211 09:47:06.353415  4996 solver.cpp:181] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0211 09:47:06.353456  4996 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0211 09:47:06.353660  4996 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:47:06.353765  4996 layer_factory.hpp:77] Creating layer mnist
I0211 09:47:06.353899  4996 net.cpp:106] Creating Layer mnist
I0211 09:47:06.353912  4996 net.cpp:411] mnist -> data
I0211 09:47:06.353925  4996 net.cpp:411] mnist -> label
I0211 09:47:06.359272  5002 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_test_lmdb
I0211 09:47:06.359694  4996 data_layer.cpp:41] output data size: 100,1,28,28
I0211 09:47:06.361147  4996 net.cpp:150] Setting up mnist
I0211 09:47:06.361163  4996 net.cpp:157] Top shape: 100 1 28 28 (78400)
I0211 09:47:06.361171  4996 net.cpp:157] Top shape: 100 (100)
I0211 09:47:06.361176  4996 net.cpp:165] Memory required for data: 314000
I0211 09:47:06.361181  4996 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0211 09:47:06.361196  4996 net.cpp:106] Creating Layer label_mnist_1_split
I0211 09:47:06.361203  4996 net.cpp:454] label_mnist_1_split <- label
I0211 09:47:06.361210  4996 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_0
I0211 09:47:06.361222  4996 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_1
I0211 09:47:06.361378  4996 net.cpp:150] Setting up label_mnist_1_split
I0211 09:47:06.361389  4996 net.cpp:157] Top shape: 100 (100)
I0211 09:47:06.361397  4996 net.cpp:157] Top shape: 100 (100)
I0211 09:47:06.361402  4996 net.cpp:165] Memory required for data: 314800
I0211 09:47:06.361407  4996 layer_factory.hpp:77] Creating layer conv1
I0211 09:47:06.361421  4996 net.cpp:106] Creating Layer conv1
I0211 09:47:06.361428  4996 net.cpp:454] conv1 <- data
I0211 09:47:06.361439  4996 net.cpp:411] conv1 -> conv1
I0211 09:47:06.361763  4996 net.cpp:150] Setting up conv1
I0211 09:47:06.361775  4996 net.cpp:157] Top shape: 100 20 24 24 (1152000)
I0211 09:47:06.361780  4996 net.cpp:165] Memory required for data: 4922800
I0211 09:47:06.361794  4996 layer_factory.hpp:77] Creating layer pool1
I0211 09:47:06.361809  4996 net.cpp:106] Creating Layer pool1
I0211 09:47:06.361831  4996 net.cpp:454] pool1 <- conv1
I0211 09:47:06.361840  4996 net.cpp:411] pool1 -> pool1
I0211 09:47:06.362002  4996 net.cpp:150] Setting up pool1
I0211 09:47:06.362013  4996 net.cpp:157] Top shape: 100 20 12 12 (288000)
I0211 09:47:06.362018  4996 net.cpp:165] Memory required for data: 6074800
I0211 09:47:06.362025  4996 layer_factory.hpp:77] Creating layer conv2
I0211 09:47:06.362040  4996 net.cpp:106] Creating Layer conv2
I0211 09:47:06.362046  4996 net.cpp:454] conv2 <- pool1
I0211 09:47:06.362058  4996 net.cpp:411] conv2 -> conv2
I0211 09:47:06.362493  4996 net.cpp:150] Setting up conv2
I0211 09:47:06.362505  4996 net.cpp:157] Top shape: 100 50 8 8 (320000)
I0211 09:47:06.362511  4996 net.cpp:165] Memory required for data: 7354800
I0211 09:47:06.362521  4996 layer_factory.hpp:77] Creating layer pool2
I0211 09:47:06.362535  4996 net.cpp:106] Creating Layer pool2
I0211 09:47:06.362541  4996 net.cpp:454] pool2 <- conv2
I0211 09:47:06.362550  4996 net.cpp:411] pool2 -> pool2
I0211 09:47:06.362799  4996 net.cpp:150] Setting up pool2
I0211 09:47:06.362830  4996 net.cpp:157] Top shape: 100 50 4 4 (80000)
I0211 09:47:06.362843  4996 net.cpp:165] Memory required for data: 7674800
I0211 09:47:06.362853  4996 layer_factory.hpp:77] Creating layer ip1
I0211 09:47:06.362874  4996 net.cpp:106] Creating Layer ip1
I0211 09:47:06.362887  4996 net.cpp:454] ip1 <- pool2
I0211 09:47:06.362911  4996 net.cpp:411] ip1 -> ip1
I0211 09:47:06.372218  4996 net.cpp:150] Setting up ip1
I0211 09:47:06.372249  4996 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:47:06.372259  4996 net.cpp:165] Memory required for data: 7874800
I0211 09:47:06.372287  4996 layer_factory.hpp:77] Creating layer relu1
I0211 09:47:06.372308  4996 net.cpp:106] Creating Layer relu1
I0211 09:47:06.372321  4996 net.cpp:454] relu1 <- ip1
I0211 09:47:06.372344  4996 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:47:06.372366  4996 net.cpp:150] Setting up relu1
I0211 09:47:06.372381  4996 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:47:06.372392  4996 net.cpp:165] Memory required for data: 8074800
I0211 09:47:06.372405  4996 layer_factory.hpp:77] Creating layer ip2
I0211 09:47:06.372426  4996 net.cpp:106] Creating Layer ip2
I0211 09:47:06.372439  4996 net.cpp:454] ip2 <- ip1
I0211 09:47:06.372462  4996 net.cpp:411] ip2 -> ip2
I0211 09:47:06.372761  4996 net.cpp:150] Setting up ip2
I0211 09:47:06.372773  4996 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:47:06.372779  4996 net.cpp:165] Memory required for data: 8078800
I0211 09:47:06.372787  4996 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0211 09:47:06.372794  4996 net.cpp:106] Creating Layer ip2_ip2_0_split
I0211 09:47:06.372799  4996 net.cpp:454] ip2_ip2_0_split <- ip2
I0211 09:47:06.372807  4996 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0211 09:47:06.372815  4996 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0211 09:47:06.372859  4996 net.cpp:150] Setting up ip2_ip2_0_split
I0211 09:47:06.372869  4996 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:47:06.372875  4996 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:47:06.372879  4996 net.cpp:165] Memory required for data: 8086800
I0211 09:47:06.372884  4996 layer_factory.hpp:77] Creating layer accuracy
I0211 09:47:06.372900  4996 net.cpp:106] Creating Layer accuracy
I0211 09:47:06.372905  4996 net.cpp:454] accuracy <- ip2_ip2_0_split_0
I0211 09:47:06.372913  4996 net.cpp:454] accuracy <- label_mnist_1_split_0
I0211 09:47:06.372920  4996 net.cpp:411] accuracy -> accuracy
I0211 09:47:06.372936  4996 net.cpp:150] Setting up accuracy
I0211 09:47:06.372943  4996 net.cpp:157] Top shape: (1)
I0211 09:47:06.372948  4996 net.cpp:165] Memory required for data: 8086804
I0211 09:47:06.372954  4996 layer_factory.hpp:77] Creating layer loss
I0211 09:47:06.372963  4996 net.cpp:106] Creating Layer loss
I0211 09:47:06.372969  4996 net.cpp:454] loss <- ip2_ip2_0_split_1
I0211 09:47:06.372977  4996 net.cpp:454] loss <- label_mnist_1_split_1
I0211 09:47:06.372984  4996 net.cpp:411] loss -> loss
I0211 09:47:06.372994  4996 layer_factory.hpp:77] Creating layer loss
I0211 09:47:06.373107  4996 net.cpp:150] Setting up loss
I0211 09:47:06.373118  4996 net.cpp:157] Top shape: (1)
I0211 09:47:06.373123  4996 net.cpp:160]     with loss weight 1
I0211 09:47:06.373133  4996 net.cpp:165] Memory required for data: 8086808
I0211 09:47:06.373139  4996 net.cpp:226] loss needs backward computation.
I0211 09:47:06.373145  4996 net.cpp:228] accuracy does not need backward computation.
I0211 09:47:06.373152  4996 net.cpp:226] ip2_ip2_0_split needs backward computation.
I0211 09:47:06.373157  4996 net.cpp:226] ip2 needs backward computation.
I0211 09:47:06.373163  4996 net.cpp:226] relu1 needs backward computation.
I0211 09:47:06.373168  4996 net.cpp:226] ip1 needs backward computation.
I0211 09:47:06.373174  4996 net.cpp:226] pool2 needs backward computation.
I0211 09:47:06.373179  4996 net.cpp:226] conv2 needs backward computation.
I0211 09:47:06.373185  4996 net.cpp:226] pool1 needs backward computation.
I0211 09:47:06.373191  4996 net.cpp:226] conv1 needs backward computation.
I0211 09:47:06.373198  4996 net.cpp:228] label_mnist_1_split does not need backward computation.
I0211 09:47:06.373203  4996 net.cpp:228] mnist does not need backward computation.
I0211 09:47:06.373208  4996 net.cpp:270] This network produces output accuracy
I0211 09:47:06.373214  4996 net.cpp:270] This network produces output loss
I0211 09:47:06.373230  4996 net.cpp:283] Network initialization done.
I0211 09:47:06.373270  4996 solver.cpp:60] Solver scaffolding done.
I0211 09:47:06.373549  4996 caffe.cpp:212] Starting Optimization
I0211 09:47:06.373559  4996 solver.cpp:311] Solving LeNet
I0211 09:47:06.373564  4996 solver.cpp:312] Learning Rate Policy: inv
I0211 09:47:06.374255  4996 solver.cpp:364] Iteration 0, Testing net (#0)
I0211 09:47:07.345368  4996 solver.cpp:432]     Test net output #0: accuracy = 0.0942
I0211 09:47:07.345402  4996 solver.cpp:432]     Test net output #1: loss = 2.37947 (* 1 = 2.37947 loss)
I0211 09:47:07.368312  4996 solver.cpp:250] Iteration 0, loss = 2.33932 Time spent communicating 0.00288
I0211 09:47:07.368335  4996 solver.cpp:267]     Train net output #0: loss = 2.33932 (* 1 = 2.33932 loss)
I0211 09:47:07.375990  4996 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0211 09:47:10.260550  4996 solver.cpp:250] Iteration 100, loss = 0.206301 Time spent communicating 0.388512
I0211 09:47:10.260591  4996 solver.cpp:267]     Train net output #0: loss = 0.206301 (* 1 = 0.206301 loss)
I0211 09:47:10.269354  4996 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0211 09:47:13.153645  4996 solver.cpp:250] Iteration 200, loss = 0.154385 Time spent communicating 0.383361
I0211 09:47:13.153677  4996 solver.cpp:267]     Train net output #0: loss = 0.154385 (* 1 = 0.154385 loss)
I0211 09:47:13.162262  4996 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0211 09:47:16.046501  4996 solver.cpp:250] Iteration 300, loss = 0.118633 Time spent communicating 0.383873
I0211 09:47:16.046533  4996 solver.cpp:267]     Train net output #0: loss = 0.118633 (* 1 = 0.118633 loss)
I0211 09:47:16.055094  4996 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0211 09:47:18.938328  4996 solver.cpp:250] Iteration 400, loss = 0.17308 Time spent communicating 0.383777
I0211 09:47:18.938365  4996 solver.cpp:267]     Train net output #0: loss = 0.17308 (* 1 = 0.17308 loss)
I0211 09:47:18.947314  4996 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0211 09:47:21.810607  4996 solver.cpp:482] Snapshotting to binary proto file examples/mnist/lenet_iter_500.caffemodel
I0211 09:47:21.839735  4996 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_500.solverstate
I0211 09:47:21.875288  4996 solver.cpp:344] Iteration 500, loss = 0.0818339
I0211 09:47:21.875322  4996 solver.cpp:364] Iteration 500, Testing net (#0)
I0211 09:47:22.816841  4996 solver.cpp:432]     Test net output #0: accuracy = 0.9729
I0211 09:47:22.816881  4996 solver.cpp:432]     Test net output #1: loss = 0.0823815 (* 1 = 0.0823815 loss)
I0211 09:47:22.816890  4996 solver.cpp:349] Optimization Done.
I0211 09:47:22.816933  4996 caffe.cpp:215] Optimization Done.
