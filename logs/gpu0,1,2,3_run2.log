I0211 09:42:11.718462  4820 caffe.cpp:184] Using GPUs 0, 1, 2, 3
I0211 09:42:16.548662  4820 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 500
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "examples/mnist/lenet_train_test.prototxt"
I0211 09:42:16.559412  4820 solver.cpp:91] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0211 09:42:16.560600  4820 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0211 09:42:16.560667  4820 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0211 09:42:16.560945  4820 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 32
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:42:16.561121  4820 layer_factory.hpp:77] Creating layer mnist
I0211 09:42:16.562578  4820 net.cpp:106] Creating Layer mnist
I0211 09:42:16.562616  4820 net.cpp:411] mnist -> data
I0211 09:42:16.562755  4820 net.cpp:411] mnist -> label
I0211 09:42:16.568514  4824 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_train_lmdb
I0211 09:42:16.589367  4820 data_layer.cpp:41] output data size: 32,1,28,28
I0211 09:42:16.590610  4820 net.cpp:150] Setting up mnist
I0211 09:42:16.590637  4820 net.cpp:157] Top shape: 32 1 28 28 (25088)
I0211 09:42:16.590646  4820 net.cpp:157] Top shape: 32 (32)
I0211 09:42:16.590652  4820 net.cpp:165] Memory required for data: 100480
I0211 09:42:16.590667  4820 layer_factory.hpp:77] Creating layer conv1
I0211 09:42:16.590700  4820 net.cpp:106] Creating Layer conv1
I0211 09:42:16.590713  4820 net.cpp:454] conv1 <- data
I0211 09:42:16.590730  4820 net.cpp:411] conv1 -> conv1
I0211 09:42:16.591979  4820 net.cpp:150] Setting up conv1
I0211 09:42:16.591995  4820 net.cpp:157] Top shape: 32 20 24 24 (368640)
I0211 09:42:16.592000  4820 net.cpp:165] Memory required for data: 1575040
I0211 09:42:16.592016  4820 layer_factory.hpp:77] Creating layer pool1
I0211 09:42:16.592033  4820 net.cpp:106] Creating Layer pool1
I0211 09:42:16.592041  4820 net.cpp:454] pool1 <- conv1
I0211 09:42:16.592048  4820 net.cpp:411] pool1 -> pool1
I0211 09:42:16.592257  4820 net.cpp:150] Setting up pool1
I0211 09:42:16.592272  4820 net.cpp:157] Top shape: 32 20 12 12 (92160)
I0211 09:42:16.592278  4820 net.cpp:165] Memory required for data: 1943680
I0211 09:42:16.592283  4820 layer_factory.hpp:77] Creating layer conv2
I0211 09:42:16.592295  4820 net.cpp:106] Creating Layer conv2
I0211 09:42:16.592301  4820 net.cpp:454] conv2 <- pool1
I0211 09:42:16.592313  4820 net.cpp:411] conv2 -> conv2
I0211 09:42:16.592739  4820 net.cpp:150] Setting up conv2
I0211 09:42:16.592752  4820 net.cpp:157] Top shape: 32 50 8 8 (102400)
I0211 09:42:16.592758  4820 net.cpp:165] Memory required for data: 2353280
I0211 09:42:16.592769  4820 layer_factory.hpp:77] Creating layer pool2
I0211 09:42:16.592782  4820 net.cpp:106] Creating Layer pool2
I0211 09:42:16.592788  4820 net.cpp:454] pool2 <- conv2
I0211 09:42:16.592795  4820 net.cpp:411] pool2 -> pool2
I0211 09:42:16.592939  4820 net.cpp:150] Setting up pool2
I0211 09:42:16.592950  4820 net.cpp:157] Top shape: 32 50 4 4 (25600)
I0211 09:42:16.592955  4820 net.cpp:165] Memory required for data: 2455680
I0211 09:42:16.592960  4820 layer_factory.hpp:77] Creating layer ip1
I0211 09:42:16.592978  4820 net.cpp:106] Creating Layer ip1
I0211 09:42:16.592984  4820 net.cpp:454] ip1 <- pool2
I0211 09:42:16.592993  4820 net.cpp:411] ip1 -> ip1
I0211 09:42:16.594571  4825 blocking_queue.cpp:50] Waiting for data
I0211 09:42:16.597497  4820 net.cpp:150] Setting up ip1
I0211 09:42:16.597515  4820 net.cpp:157] Top shape: 32 500 (16000)
I0211 09:42:16.597519  4820 net.cpp:165] Memory required for data: 2519680
I0211 09:42:16.597532  4820 layer_factory.hpp:77] Creating layer relu1
I0211 09:42:16.597544  4820 net.cpp:106] Creating Layer relu1
I0211 09:42:16.597550  4820 net.cpp:454] relu1 <- ip1
I0211 09:42:16.597558  4820 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:42:16.597569  4820 net.cpp:150] Setting up relu1
I0211 09:42:16.597576  4820 net.cpp:157] Top shape: 32 500 (16000)
I0211 09:42:16.597582  4820 net.cpp:165] Memory required for data: 2583680
I0211 09:42:16.597587  4820 layer_factory.hpp:77] Creating layer ip2
I0211 09:42:16.597596  4820 net.cpp:106] Creating Layer ip2
I0211 09:42:16.597602  4820 net.cpp:454] ip2 <- ip1
I0211 09:42:16.597612  4820 net.cpp:411] ip2 -> ip2
I0211 09:42:16.598505  4820 net.cpp:150] Setting up ip2
I0211 09:42:16.598517  4820 net.cpp:157] Top shape: 32 10 (320)
I0211 09:42:16.598522  4820 net.cpp:165] Memory required for data: 2584960
I0211 09:42:16.598532  4820 layer_factory.hpp:77] Creating layer loss
I0211 09:42:16.598546  4820 net.cpp:106] Creating Layer loss
I0211 09:42:16.598551  4820 net.cpp:454] loss <- ip2
I0211 09:42:16.598558  4820 net.cpp:454] loss <- label
I0211 09:42:16.598567  4820 net.cpp:411] loss -> loss
I0211 09:42:16.598587  4820 layer_factory.hpp:77] Creating layer loss
I0211 09:42:16.598695  4820 net.cpp:150] Setting up loss
I0211 09:42:16.598706  4820 net.cpp:157] Top shape: (1)
I0211 09:42:16.598711  4820 net.cpp:160]     with loss weight 1
I0211 09:42:16.598740  4820 net.cpp:165] Memory required for data: 2584964
I0211 09:42:16.598749  4820 net.cpp:226] loss needs backward computation.
I0211 09:42:16.598757  4820 net.cpp:226] ip2 needs backward computation.
I0211 09:42:16.598762  4820 net.cpp:226] relu1 needs backward computation.
I0211 09:42:16.598767  4820 net.cpp:226] ip1 needs backward computation.
I0211 09:42:16.598772  4820 net.cpp:226] pool2 needs backward computation.
I0211 09:42:16.598776  4820 net.cpp:226] conv2 needs backward computation.
I0211 09:42:16.598785  4820 net.cpp:226] pool1 needs backward computation.
I0211 09:42:16.598791  4820 net.cpp:226] conv1 needs backward computation.
I0211 09:42:16.598796  4820 net.cpp:228] mnist does not need backward computation.
I0211 09:42:16.598800  4820 net.cpp:270] This network produces output loss
I0211 09:42:16.598817  4820 net.cpp:283] Network initialization done.
I0211 09:42:16.600127  4820 solver.cpp:181] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0211 09:42:16.600170  4820 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0211 09:42:16.600347  4820 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:42:16.600452  4820 layer_factory.hpp:77] Creating layer mnist
I0211 09:42:16.600595  4820 net.cpp:106] Creating Layer mnist
I0211 09:42:16.600610  4820 net.cpp:411] mnist -> data
I0211 09:42:16.600630  4820 net.cpp:411] mnist -> label
I0211 09:42:16.604799  4826 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_test_lmdb
I0211 09:42:16.605192  4820 data_layer.cpp:41] output data size: 100,1,28,28
I0211 09:42:16.606886  4820 net.cpp:150] Setting up mnist
I0211 09:42:16.606907  4820 net.cpp:157] Top shape: 100 1 28 28 (78400)
I0211 09:42:16.606915  4820 net.cpp:157] Top shape: 100 (100)
I0211 09:42:16.606921  4820 net.cpp:165] Memory required for data: 314000
I0211 09:42:16.606930  4820 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0211 09:42:16.606943  4820 net.cpp:106] Creating Layer label_mnist_1_split
I0211 09:42:16.606955  4820 net.cpp:454] label_mnist_1_split <- label
I0211 09:42:16.606972  4820 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_0
I0211 09:42:16.606987  4820 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_1
I0211 09:42:16.607242  4820 net.cpp:150] Setting up label_mnist_1_split
I0211 09:42:16.607259  4820 net.cpp:157] Top shape: 100 (100)
I0211 09:42:16.607266  4820 net.cpp:157] Top shape: 100 (100)
I0211 09:42:16.607273  4820 net.cpp:165] Memory required for data: 314800
I0211 09:42:16.607281  4820 layer_factory.hpp:77] Creating layer conv1
I0211 09:42:16.607301  4820 net.cpp:106] Creating Layer conv1
I0211 09:42:16.607311  4820 net.cpp:454] conv1 <- data
I0211 09:42:16.607322  4820 net.cpp:411] conv1 -> conv1
I0211 09:42:16.607653  4820 net.cpp:150] Setting up conv1
I0211 09:42:16.607671  4820 net.cpp:157] Top shape: 100 20 24 24 (1152000)
I0211 09:42:16.607678  4820 net.cpp:165] Memory required for data: 4922800
I0211 09:42:16.607693  4820 layer_factory.hpp:77] Creating layer pool1
I0211 09:42:16.607728  4820 net.cpp:106] Creating Layer pool1
I0211 09:42:16.607738  4820 net.cpp:454] pool1 <- conv1
I0211 09:42:16.607748  4820 net.cpp:411] pool1 -> pool1
I0211 09:42:16.607942  4820 net.cpp:150] Setting up pool1
I0211 09:42:16.607957  4820 net.cpp:157] Top shape: 100 20 12 12 (288000)
I0211 09:42:16.607962  4820 net.cpp:165] Memory required for data: 6074800
I0211 09:42:16.607969  4820 layer_factory.hpp:77] Creating layer conv2
I0211 09:42:16.607987  4820 net.cpp:106] Creating Layer conv2
I0211 09:42:16.607995  4820 net.cpp:454] conv2 <- pool1
I0211 09:42:16.608011  4820 net.cpp:411] conv2 -> conv2
I0211 09:42:16.608562  4820 net.cpp:150] Setting up conv2
I0211 09:42:16.608578  4820 net.cpp:157] Top shape: 100 50 8 8 (320000)
I0211 09:42:16.608585  4820 net.cpp:165] Memory required for data: 7354800
I0211 09:42:16.608598  4820 layer_factory.hpp:77] Creating layer pool2
I0211 09:42:16.608618  4820 net.cpp:106] Creating Layer pool2
I0211 09:42:16.608633  4820 net.cpp:454] pool2 <- conv2
I0211 09:42:16.608645  4820 net.cpp:411] pool2 -> pool2
I0211 09:42:16.608853  4820 net.cpp:150] Setting up pool2
I0211 09:42:16.608873  4820 net.cpp:157] Top shape: 100 50 4 4 (80000)
I0211 09:42:16.608881  4820 net.cpp:165] Memory required for data: 7674800
I0211 09:42:16.608889  4820 layer_factory.hpp:77] Creating layer ip1
I0211 09:42:16.608901  4820 net.cpp:106] Creating Layer ip1
I0211 09:42:16.608909  4820 net.cpp:454] ip1 <- pool2
I0211 09:42:16.608921  4820 net.cpp:411] ip1 -> ip1
I0211 09:42:16.615039  4820 net.cpp:150] Setting up ip1
I0211 09:42:16.615061  4820 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:42:16.615068  4820 net.cpp:165] Memory required for data: 7874800
I0211 09:42:16.615085  4820 layer_factory.hpp:77] Creating layer relu1
I0211 09:42:16.615099  4820 net.cpp:106] Creating Layer relu1
I0211 09:42:16.615109  4820 net.cpp:454] relu1 <- ip1
I0211 09:42:16.615125  4820 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:42:16.615140  4820 net.cpp:150] Setting up relu1
I0211 09:42:16.615151  4820 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:42:16.615159  4820 net.cpp:165] Memory required for data: 8074800
I0211 09:42:16.615169  4820 layer_factory.hpp:77] Creating layer ip2
I0211 09:42:16.615183  4820 net.cpp:106] Creating Layer ip2
I0211 09:42:16.615191  4820 net.cpp:454] ip2 <- ip1
I0211 09:42:16.615207  4820 net.cpp:411] ip2 -> ip2
I0211 09:42:16.615437  4820 net.cpp:150] Setting up ip2
I0211 09:42:16.615453  4820 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:42:16.615461  4820 net.cpp:165] Memory required for data: 8078800
I0211 09:42:16.615474  4820 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0211 09:42:16.615490  4820 net.cpp:106] Creating Layer ip2_ip2_0_split
I0211 09:42:16.615499  4820 net.cpp:454] ip2_ip2_0_split <- ip2
I0211 09:42:16.615511  4820 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0211 09:42:16.615528  4820 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0211 09:42:16.615586  4820 net.cpp:150] Setting up ip2_ip2_0_split
I0211 09:42:16.615599  4820 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:42:16.615609  4820 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:42:16.615625  4820 net.cpp:165] Memory required for data: 8086800
I0211 09:42:16.615634  4820 layer_factory.hpp:77] Creating layer accuracy
I0211 09:42:16.615659  4820 net.cpp:106] Creating Layer accuracy
I0211 09:42:16.615669  4820 net.cpp:454] accuracy <- ip2_ip2_0_split_0
I0211 09:42:16.615677  4820 net.cpp:454] accuracy <- label_mnist_1_split_0
I0211 09:42:16.615687  4820 net.cpp:411] accuracy -> accuracy
I0211 09:42:16.615710  4820 net.cpp:150] Setting up accuracy
I0211 09:42:16.615722  4820 net.cpp:157] Top shape: (1)
I0211 09:42:16.615728  4820 net.cpp:165] Memory required for data: 8086804
I0211 09:42:16.615736  4820 layer_factory.hpp:77] Creating layer loss
I0211 09:42:16.615748  4820 net.cpp:106] Creating Layer loss
I0211 09:42:16.615756  4820 net.cpp:454] loss <- ip2_ip2_0_split_1
I0211 09:42:16.615766  4820 net.cpp:454] loss <- label_mnist_1_split_1
I0211 09:42:16.615775  4820 net.cpp:411] loss -> loss
I0211 09:42:16.615814  4820 layer_factory.hpp:77] Creating layer loss
I0211 09:42:16.615957  4820 net.cpp:150] Setting up loss
I0211 09:42:16.615972  4820 net.cpp:157] Top shape: (1)
I0211 09:42:16.615979  4820 net.cpp:160]     with loss weight 1
I0211 09:42:16.615993  4820 net.cpp:165] Memory required for data: 8086808
I0211 09:42:16.616003  4820 net.cpp:226] loss needs backward computation.
I0211 09:42:16.616010  4820 net.cpp:228] accuracy does not need backward computation.
I0211 09:42:16.616020  4820 net.cpp:226] ip2_ip2_0_split needs backward computation.
I0211 09:42:16.616029  4820 net.cpp:226] ip2 needs backward computation.
I0211 09:42:16.616037  4820 net.cpp:226] relu1 needs backward computation.
I0211 09:42:16.616045  4820 net.cpp:226] ip1 needs backward computation.
I0211 09:42:16.616055  4820 net.cpp:226] pool2 needs backward computation.
I0211 09:42:16.616063  4820 net.cpp:226] conv2 needs backward computation.
I0211 09:42:16.616071  4820 net.cpp:226] pool1 needs backward computation.
I0211 09:42:16.616080  4820 net.cpp:226] conv1 needs backward computation.
I0211 09:42:16.616089  4820 net.cpp:228] label_mnist_1_split does not need backward computation.
I0211 09:42:16.616099  4820 net.cpp:228] mnist does not need backward computation.
I0211 09:42:16.616106  4820 net.cpp:270] This network produces output accuracy
I0211 09:42:16.616114  4820 net.cpp:270] This network produces output loss
I0211 09:42:16.616139  4820 net.cpp:283] Network initialization done.
I0211 09:42:16.616199  4820 solver.cpp:60] Solver scaffolding done.
I0211 09:42:16.640765  4820 parallel.cpp:405] GPUs pairs 0:1, 2:3, 0:2
I0211 09:42:16.856454  4820 data_layer.cpp:41] output data size: 32,1,28,28
I0211 09:42:17.240645  4820 data_layer.cpp:41] output data size: 32,1,28,28
I0211 09:42:17.661031  4820 data_layer.cpp:41] output data size: 32,1,28,28
I0211 09:42:17.841629  4820 parallel.cpp:433] Starting Optimization - TEST TEST TEST
I0211 09:42:17.841876  4820 solver.cpp:311] Solving LeNet
I0211 09:42:17.841891  4820 solver.cpp:312] Learning Rate Policy: inv
I0211 09:42:17.842098  4820 solver.cpp:364] Iteration 0, Testing net (#0)
I0211 09:42:18.875429  4820 solver.cpp:432]     Test net output #0: accuracy = 0.0959
I0211 09:42:18.875473  4820 solver.cpp:432]     Test net output #1: loss = 2.41501 (* 1 = 2.41501 loss)
I0211 09:42:18.889102  4820 solver.cpp:250] Iteration 0, loss = 2.47241 Time spent communicating 0.3664
I0211 09:42:18.889132  4820 solver.cpp:267]     Train net output #0: loss = 2.47241 (* 1 = 2.47241 loss)
I0211 09:42:18.896201  4820 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0211 09:42:20.049254  4820 solver.cpp:250] Iteration 100, loss = 0.37087 Time spent communicating 110.826
I0211 09:42:20.049289  4820 solver.cpp:267]     Train net output #0: loss = 0.37087 (* 1 = 0.37087 loss)
I0211 09:42:20.050520  4820 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0211 09:42:21.062297  4820 solver.cpp:250] Iteration 200, loss = 0.256115 Time spent communicating 101.244
I0211 09:42:21.062343  4820 solver.cpp:267]     Train net output #0: loss = 0.256115 (* 1 = 0.256115 loss)
I0211 09:42:21.064131  4820 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0211 09:42:22.132788  4820 solver.cpp:250] Iteration 300, loss = 0.155967 Time spent communicating 163.819
I0211 09:42:22.132819  4820 solver.cpp:267]     Train net output #0: loss = 0.155967 (* 1 = 0.155967 loss)
I0211 09:42:22.133465  4820 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0211 09:42:23.200839  4820 solver.cpp:250] Iteration 400, loss = 0.359191 Time spent communicating 155.96
I0211 09:42:23.200871  4820 solver.cpp:267]     Train net output #0: loss = 0.35919 (* 1 = 0.35919 loss)
I0211 09:42:23.204370  4820 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0211 09:42:24.251227  4820 solver.cpp:482] Snapshotting to binary proto file examples/mnist/lenet_iter_500.caffemodel
I0211 09:42:24.286406  4820 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_500.solverstate
I0211 09:42:24.313956  4820 solver.cpp:344] Iteration 500, loss = 0.156924
I0211 09:42:24.314023  4820 solver.cpp:364] Iteration 500, Testing net (#0)
I0211 09:42:25.265736  4820 solver.cpp:432]     Test net output #0: accuracy = 0.9759
I0211 09:42:25.265760  4820 solver.cpp:432]     Test net output #1: loss = 0.0775702 (* 1 = 0.0775702 loss)
I0211 09:42:25.265769  4820 solver.cpp:349] Optimization Done.
I0211 09:42:25.265815  4820 parallel.cpp:256] IN DESTRUCTOR AND I'M 1
I0211 09:42:25.284780  4820 parallel.cpp:256] IN DESTRUCTOR AND I'M 3
I0211 09:42:25.305692  4820 parallel.cpp:256] IN DESTRUCTOR AND I'M 2
I0211 09:42:25.322729  4820 parallel.cpp:256] IN DESTRUCTOR AND I'M 0
I0211 09:42:25.323187  4820 caffe.cpp:215] Optimization Done.
