I0211 09:47:24.531555  5009 caffe.cpp:184] Using GPUs 0
I0211 09:47:28.808828  5009 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 500
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "examples/mnist/lenet_train_test.prototxt"
I0211 09:47:28.821213  5009 solver.cpp:91] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0211 09:47:28.822868  5009 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0211 09:47:28.822919  5009 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0211 09:47:28.823205  5009 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:47:28.823367  5009 layer_factory.hpp:77] Creating layer mnist
I0211 09:47:28.824978  5009 net.cpp:106] Creating Layer mnist
I0211 09:47:28.825021  5009 net.cpp:411] mnist -> data
I0211 09:47:28.825156  5009 net.cpp:411] mnist -> label
I0211 09:47:28.830817  5013 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_train_lmdb
I0211 09:47:28.851642  5009 data_layer.cpp:41] output data size: 128,1,28,28
I0211 09:47:28.854399  5009 net.cpp:150] Setting up mnist
I0211 09:47:28.854423  5009 net.cpp:157] Top shape: 128 1 28 28 (100352)
I0211 09:47:28.854430  5009 net.cpp:157] Top shape: 128 (128)
I0211 09:47:28.854437  5009 net.cpp:165] Memory required for data: 401920
I0211 09:47:28.854452  5009 layer_factory.hpp:77] Creating layer conv1
I0211 09:47:28.854485  5009 net.cpp:106] Creating Layer conv1
I0211 09:47:28.854495  5009 net.cpp:454] conv1 <- data
I0211 09:47:28.854514  5009 net.cpp:411] conv1 -> conv1
I0211 09:47:28.855877  5009 net.cpp:150] Setting up conv1
I0211 09:47:28.855892  5009 net.cpp:157] Top shape: 128 20 24 24 (1474560)
I0211 09:47:28.855897  5009 net.cpp:165] Memory required for data: 6300160
I0211 09:47:28.855912  5009 layer_factory.hpp:77] Creating layer pool1
I0211 09:47:28.855931  5009 net.cpp:106] Creating Layer pool1
I0211 09:47:28.855937  5009 net.cpp:454] pool1 <- conv1
I0211 09:47:28.855944  5009 net.cpp:411] pool1 -> pool1
I0211 09:47:28.856148  5009 net.cpp:150] Setting up pool1
I0211 09:47:28.856159  5009 net.cpp:157] Top shape: 128 20 12 12 (368640)
I0211 09:47:28.856165  5009 net.cpp:165] Memory required for data: 7774720
I0211 09:47:28.856170  5009 layer_factory.hpp:77] Creating layer conv2
I0211 09:47:28.856187  5009 net.cpp:106] Creating Layer conv2
I0211 09:47:28.856194  5009 net.cpp:454] conv2 <- pool1
I0211 09:47:28.856204  5009 net.cpp:411] conv2 -> conv2
I0211 09:47:28.857558  5009 net.cpp:150] Setting up conv2
I0211 09:47:28.857573  5009 net.cpp:157] Top shape: 128 50 8 8 (409600)
I0211 09:47:28.857578  5009 net.cpp:165] Memory required for data: 9413120
I0211 09:47:28.857589  5009 layer_factory.hpp:77] Creating layer pool2
I0211 09:47:28.857604  5009 net.cpp:106] Creating Layer pool2
I0211 09:47:28.857610  5009 net.cpp:454] pool2 <- conv2
I0211 09:47:28.857622  5009 net.cpp:411] pool2 -> pool2
I0211 09:47:28.857776  5009 net.cpp:150] Setting up pool2
I0211 09:47:28.857787  5009 net.cpp:157] Top shape: 128 50 4 4 (102400)
I0211 09:47:28.857792  5009 net.cpp:165] Memory required for data: 9822720
I0211 09:47:28.857797  5009 layer_factory.hpp:77] Creating layer ip1
I0211 09:47:28.857817  5009 net.cpp:106] Creating Layer ip1
I0211 09:47:28.857825  5009 net.cpp:454] ip1 <- pool2
I0211 09:47:28.857834  5009 net.cpp:411] ip1 -> ip1
I0211 09:47:28.862359  5009 net.cpp:150] Setting up ip1
I0211 09:47:28.862372  5009 net.cpp:157] Top shape: 128 500 (64000)
I0211 09:47:28.862377  5009 net.cpp:165] Memory required for data: 10078720
I0211 09:47:28.862390  5009 layer_factory.hpp:77] Creating layer relu1
I0211 09:47:28.862401  5009 net.cpp:106] Creating Layer relu1
I0211 09:47:28.862407  5009 net.cpp:454] relu1 <- ip1
I0211 09:47:28.862416  5009 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:47:28.862429  5009 net.cpp:150] Setting up relu1
I0211 09:47:28.862437  5009 net.cpp:157] Top shape: 128 500 (64000)
I0211 09:47:28.862442  5009 net.cpp:165] Memory required for data: 10334720
I0211 09:47:28.862447  5009 layer_factory.hpp:77] Creating layer ip2
I0211 09:47:28.862459  5009 net.cpp:106] Creating Layer ip2
I0211 09:47:28.862465  5009 net.cpp:454] ip2 <- ip1
I0211 09:47:28.862473  5009 net.cpp:411] ip2 -> ip2
I0211 09:47:28.863378  5009 net.cpp:150] Setting up ip2
I0211 09:47:28.863391  5009 net.cpp:157] Top shape: 128 10 (1280)
I0211 09:47:28.863396  5009 net.cpp:165] Memory required for data: 10339840
I0211 09:47:28.863405  5009 layer_factory.hpp:77] Creating layer loss
I0211 09:47:28.863416  5009 net.cpp:106] Creating Layer loss
I0211 09:47:28.863422  5009 net.cpp:454] loss <- ip2
I0211 09:47:28.863430  5009 net.cpp:454] loss <- label
I0211 09:47:28.863440  5009 net.cpp:411] loss -> loss
I0211 09:47:28.863459  5009 layer_factory.hpp:77] Creating layer loss
I0211 09:47:28.864351  5009 net.cpp:150] Setting up loss
I0211 09:47:28.864364  5009 net.cpp:157] Top shape: (1)
I0211 09:47:28.864368  5009 net.cpp:160]     with loss weight 1
I0211 09:47:28.864398  5009 net.cpp:165] Memory required for data: 10339844
I0211 09:47:28.864406  5009 net.cpp:226] loss needs backward computation.
I0211 09:47:28.864413  5009 net.cpp:226] ip2 needs backward computation.
I0211 09:47:28.864419  5009 net.cpp:226] relu1 needs backward computation.
I0211 09:47:28.864424  5009 net.cpp:226] ip1 needs backward computation.
I0211 09:47:28.864430  5009 net.cpp:226] pool2 needs backward computation.
I0211 09:47:28.864435  5009 net.cpp:226] conv2 needs backward computation.
I0211 09:47:28.864445  5009 net.cpp:226] pool1 needs backward computation.
I0211 09:47:28.864450  5009 net.cpp:226] conv1 needs backward computation.
I0211 09:47:28.864456  5009 net.cpp:228] mnist does not need backward computation.
I0211 09:47:28.864461  5009 net.cpp:270] This network produces output loss
I0211 09:47:28.864477  5009 net.cpp:283] Network initialization done.
I0211 09:47:28.865515  5009 solver.cpp:181] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0211 09:47:28.865556  5009 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0211 09:47:28.865746  5009 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:47:28.865845  5009 layer_factory.hpp:77] Creating layer mnist
I0211 09:47:28.865984  5009 net.cpp:106] Creating Layer mnist
I0211 09:47:28.865998  5009 net.cpp:411] mnist -> data
I0211 09:47:28.866008  5009 net.cpp:411] mnist -> label
I0211 09:47:28.871556  5015 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_test_lmdb
I0211 09:47:28.871968  5009 data_layer.cpp:41] output data size: 100,1,28,28
I0211 09:47:28.873575  5009 net.cpp:150] Setting up mnist
I0211 09:47:28.873591  5009 net.cpp:157] Top shape: 100 1 28 28 (78400)
I0211 09:47:28.873597  5009 net.cpp:157] Top shape: 100 (100)
I0211 09:47:28.873605  5009 net.cpp:165] Memory required for data: 314000
I0211 09:47:28.873610  5009 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0211 09:47:28.873636  5009 net.cpp:106] Creating Layer label_mnist_1_split
I0211 09:47:28.873646  5009 net.cpp:454] label_mnist_1_split <- label
I0211 09:47:28.873653  5009 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_0
I0211 09:47:28.873662  5009 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_1
I0211 09:47:28.873782  5009 net.cpp:150] Setting up label_mnist_1_split
I0211 09:47:28.873793  5009 net.cpp:157] Top shape: 100 (100)
I0211 09:47:28.873800  5009 net.cpp:157] Top shape: 100 (100)
I0211 09:47:28.873805  5009 net.cpp:165] Memory required for data: 314800
I0211 09:47:28.873810  5009 layer_factory.hpp:77] Creating layer conv1
I0211 09:47:28.873824  5009 net.cpp:106] Creating Layer conv1
I0211 09:47:28.873831  5009 net.cpp:454] conv1 <- data
I0211 09:47:28.873842  5009 net.cpp:411] conv1 -> conv1
I0211 09:47:28.874354  5009 net.cpp:150] Setting up conv1
I0211 09:47:28.874382  5009 net.cpp:157] Top shape: 100 20 24 24 (1152000)
I0211 09:47:28.874392  5009 net.cpp:165] Memory required for data: 4922800
I0211 09:47:28.874418  5009 layer_factory.hpp:77] Creating layer pool1
I0211 09:47:28.874444  5009 net.cpp:106] Creating Layer pool1
I0211 09:47:28.874490  5009 net.cpp:454] pool1 <- conv1
I0211 09:47:28.874511  5009 net.cpp:411] pool1 -> pool1
I0211 09:47:28.874783  5009 net.cpp:150] Setting up pool1
I0211 09:47:28.874795  5009 net.cpp:157] Top shape: 100 20 12 12 (288000)
I0211 09:47:28.874800  5009 net.cpp:165] Memory required for data: 6074800
I0211 09:47:28.874805  5009 layer_factory.hpp:77] Creating layer conv2
I0211 09:47:28.874825  5009 net.cpp:106] Creating Layer conv2
I0211 09:47:28.874830  5009 net.cpp:454] conv2 <- pool1
I0211 09:47:28.874840  5009 net.cpp:411] conv2 -> conv2
I0211 09:47:28.875723  5009 net.cpp:150] Setting up conv2
I0211 09:47:28.875736  5009 net.cpp:157] Top shape: 100 50 8 8 (320000)
I0211 09:47:28.875742  5009 net.cpp:165] Memory required for data: 7354800
I0211 09:47:28.875752  5009 layer_factory.hpp:77] Creating layer pool2
I0211 09:47:28.875763  5009 net.cpp:106] Creating Layer pool2
I0211 09:47:28.875768  5009 net.cpp:454] pool2 <- conv2
I0211 09:47:28.875776  5009 net.cpp:411] pool2 -> pool2
I0211 09:47:28.875977  5009 net.cpp:150] Setting up pool2
I0211 09:47:28.876000  5009 net.cpp:157] Top shape: 100 50 4 4 (80000)
I0211 09:47:28.876010  5009 net.cpp:165] Memory required for data: 7674800
I0211 09:47:28.876020  5009 layer_factory.hpp:77] Creating layer ip1
I0211 09:47:28.876045  5009 net.cpp:106] Creating Layer ip1
I0211 09:47:28.876060  5009 net.cpp:454] ip1 <- pool2
I0211 09:47:28.876082  5009 net.cpp:411] ip1 -> ip1
I0211 09:47:28.881558  5009 net.cpp:150] Setting up ip1
I0211 09:47:28.881573  5009 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:47:28.881578  5009 net.cpp:165] Memory required for data: 7874800
I0211 09:47:28.881592  5009 layer_factory.hpp:77] Creating layer relu1
I0211 09:47:28.881600  5009 net.cpp:106] Creating Layer relu1
I0211 09:47:28.881606  5009 net.cpp:454] relu1 <- ip1
I0211 09:47:28.881623  5009 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:47:28.881633  5009 net.cpp:150] Setting up relu1
I0211 09:47:28.881641  5009 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:47:28.881646  5009 net.cpp:165] Memory required for data: 8074800
I0211 09:47:28.881651  5009 layer_factory.hpp:77] Creating layer ip2
I0211 09:47:28.881660  5009 net.cpp:106] Creating Layer ip2
I0211 09:47:28.881666  5009 net.cpp:454] ip2 <- ip1
I0211 09:47:28.881677  5009 net.cpp:411] ip2 -> ip2
I0211 09:47:28.881829  5009 net.cpp:150] Setting up ip2
I0211 09:47:28.881839  5009 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:47:28.881845  5009 net.cpp:165] Memory required for data: 8078800
I0211 09:47:28.881855  5009 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0211 09:47:28.881862  5009 net.cpp:106] Creating Layer ip2_ip2_0_split
I0211 09:47:28.881868  5009 net.cpp:454] ip2_ip2_0_split <- ip2
I0211 09:47:28.881876  5009 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0211 09:47:28.881888  5009 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0211 09:47:28.881991  5009 net.cpp:150] Setting up ip2_ip2_0_split
I0211 09:47:28.882012  5009 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:47:28.882026  5009 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:47:28.882038  5009 net.cpp:165] Memory required for data: 8086800
I0211 09:47:28.882050  5009 layer_factory.hpp:77] Creating layer accuracy
I0211 09:47:28.882081  5009 net.cpp:106] Creating Layer accuracy
I0211 09:47:28.882096  5009 net.cpp:454] accuracy <- ip2_ip2_0_split_0
I0211 09:47:28.882110  5009 net.cpp:454] accuracy <- label_mnist_1_split_0
I0211 09:47:28.882128  5009 net.cpp:411] accuracy -> accuracy
I0211 09:47:28.882158  5009 net.cpp:150] Setting up accuracy
I0211 09:47:28.882174  5009 net.cpp:157] Top shape: (1)
I0211 09:47:28.882186  5009 net.cpp:165] Memory required for data: 8086804
I0211 09:47:28.882196  5009 layer_factory.hpp:77] Creating layer loss
I0211 09:47:28.882217  5009 net.cpp:106] Creating Layer loss
I0211 09:47:28.882230  5009 net.cpp:454] loss <- ip2_ip2_0_split_1
I0211 09:47:28.882246  5009 net.cpp:454] loss <- label_mnist_1_split_1
I0211 09:47:28.882262  5009 net.cpp:411] loss -> loss
I0211 09:47:28.882284  5009 layer_factory.hpp:77] Creating layer loss
I0211 09:47:28.882515  5009 net.cpp:150] Setting up loss
I0211 09:47:28.882539  5009 net.cpp:157] Top shape: (1)
I0211 09:47:28.882551  5009 net.cpp:160]     with loss weight 1
I0211 09:47:28.882571  5009 net.cpp:165] Memory required for data: 8086808
I0211 09:47:28.882582  5009 net.cpp:226] loss needs backward computation.
I0211 09:47:28.882596  5009 net.cpp:228] accuracy does not need backward computation.
I0211 09:47:28.882611  5009 net.cpp:226] ip2_ip2_0_split needs backward computation.
I0211 09:47:28.882630  5009 net.cpp:226] ip2 needs backward computation.
I0211 09:47:28.882643  5009 net.cpp:226] relu1 needs backward computation.
I0211 09:47:28.882654  5009 net.cpp:226] ip1 needs backward computation.
I0211 09:47:28.882666  5009 net.cpp:226] pool2 needs backward computation.
I0211 09:47:28.882678  5009 net.cpp:226] conv2 needs backward computation.
I0211 09:47:28.882690  5009 net.cpp:226] pool1 needs backward computation.
I0211 09:47:28.882702  5009 net.cpp:226] conv1 needs backward computation.
I0211 09:47:28.882716  5009 net.cpp:228] label_mnist_1_split does not need backward computation.
I0211 09:47:28.882730  5009 net.cpp:228] mnist does not need backward computation.
I0211 09:47:28.882740  5009 net.cpp:270] This network produces output accuracy
I0211 09:47:28.882751  5009 net.cpp:270] This network produces output loss
I0211 09:47:28.882791  5009 net.cpp:283] Network initialization done.
I0211 09:47:28.882879  5009 solver.cpp:60] Solver scaffolding done.
I0211 09:47:28.883476  5009 caffe.cpp:212] Starting Optimization
I0211 09:47:28.883496  5009 solver.cpp:311] Solving LeNet
I0211 09:47:28.883508  5009 solver.cpp:312] Learning Rate Policy: inv
I0211 09:47:28.884279  5009 solver.cpp:364] Iteration 0, Testing net (#0)
I0211 09:47:29.843770  5009 solver.cpp:432]     Test net output #0: accuracy = 0.1608
I0211 09:47:29.843804  5009 solver.cpp:432]     Test net output #1: loss = 2.38451 (* 1 = 2.38451 loss)
I0211 09:47:29.865407  5009 solver.cpp:250] Iteration 0, loss = 2.4565 Time spent communicating 0.002272
I0211 09:47:29.865432  5009 solver.cpp:267]     Train net output #0: loss = 2.4565 (* 1 = 2.4565 loss)
I0211 09:47:29.873960  5009 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0211 09:47:32.744293  5009 solver.cpp:250] Iteration 100, loss = 0.246129 Time spent communicating 0.386881
I0211 09:47:32.744336  5009 solver.cpp:267]     Train net output #0: loss = 0.246129 (* 1 = 0.246129 loss)
I0211 09:47:32.754189  5009 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0211 09:47:35.622727  5009 solver.cpp:250] Iteration 200, loss = 0.128119 Time spent communicating 0.382049
I0211 09:47:35.622772  5009 solver.cpp:267]     Train net output #0: loss = 0.128119 (* 1 = 0.128119 loss)
I0211 09:47:35.632668  5009 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0211 09:47:38.502629  5009 solver.cpp:250] Iteration 300, loss = 0.111555 Time spent communicating 0.381793
I0211 09:47:38.502686  5009 solver.cpp:267]     Train net output #0: loss = 0.111555 (* 1 = 0.111555 loss)
I0211 09:47:38.512531  5009 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0211 09:47:41.381752  5009 solver.cpp:250] Iteration 400, loss = 0.149499 Time spent communicating 0.380609
I0211 09:47:41.381798  5009 solver.cpp:267]     Train net output #0: loss = 0.149498 (* 1 = 0.149498 loss)
I0211 09:47:41.391702  5009 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0211 09:47:44.242732  5009 solver.cpp:482] Snapshotting to binary proto file examples/mnist/lenet_iter_500.caffemodel
I0211 09:47:44.272145  5009 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_500.solverstate
I0211 09:47:44.307379  5009 solver.cpp:344] Iteration 500, loss = 0.0832831
I0211 09:47:44.307415  5009 solver.cpp:364] Iteration 500, Testing net (#0)
I0211 09:47:45.244356  5009 solver.cpp:432]     Test net output #0: accuracy = 0.9753
I0211 09:47:45.244387  5009 solver.cpp:432]     Test net output #1: loss = 0.0784847 (* 1 = 0.0784847 loss)
I0211 09:47:45.244395  5009 solver.cpp:349] Optimization Done.
I0211 09:47:45.244441  5009 caffe.cpp:215] Optimization Done.
