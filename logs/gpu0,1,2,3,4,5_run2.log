I0211 09:39:22.836590  4628 caffe.cpp:184] Using GPUs 0, 1, 2, 3, 4, 5
I0211 09:39:27.600018  4628 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 500
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "examples/mnist/lenet_train_test.prototxt"
I0211 09:39:27.609781  4628 solver.cpp:91] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0211 09:39:27.611306  4628 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0211 09:39:27.611341  4628 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0211 09:39:27.611515  4628 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 21
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:39:27.611613  4628 layer_factory.hpp:77] Creating layer mnist
I0211 09:39:27.612407  4628 net.cpp:106] Creating Layer mnist
I0211 09:39:27.612432  4628 net.cpp:411] mnist -> data
I0211 09:39:27.612473  4628 net.cpp:411] mnist -> label
I0211 09:39:27.618005  4634 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_train_lmdb
I0211 09:39:27.636436  4628 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:27.637681  4628 net.cpp:150] Setting up mnist
I0211 09:39:27.637703  4628 net.cpp:157] Top shape: 21 1 28 28 (16464)
I0211 09:39:27.637712  4628 net.cpp:157] Top shape: 21 (21)
I0211 09:39:27.637717  4628 net.cpp:165] Memory required for data: 65940
I0211 09:39:27.637732  4628 layer_factory.hpp:77] Creating layer conv1
I0211 09:39:27.637768  4628 net.cpp:106] Creating Layer conv1
I0211 09:39:27.637778  4628 net.cpp:454] conv1 <- data
I0211 09:39:27.637799  4628 net.cpp:411] conv1 -> conv1
I0211 09:39:27.639094  4628 net.cpp:150] Setting up conv1
I0211 09:39:27.639112  4628 net.cpp:157] Top shape: 21 20 24 24 (241920)
I0211 09:39:27.639117  4628 net.cpp:165] Memory required for data: 1033620
I0211 09:39:27.639134  4628 layer_factory.hpp:77] Creating layer pool1
I0211 09:39:27.639148  4628 net.cpp:106] Creating Layer pool1
I0211 09:39:27.639155  4628 net.cpp:454] pool1 <- conv1
I0211 09:39:27.639168  4628 net.cpp:411] pool1 -> pool1
I0211 09:39:27.639381  4628 net.cpp:150] Setting up pool1
I0211 09:39:27.639394  4628 net.cpp:157] Top shape: 21 20 12 12 (60480)
I0211 09:39:27.639400  4628 net.cpp:165] Memory required for data: 1275540
I0211 09:39:27.639405  4628 layer_factory.hpp:77] Creating layer conv2
I0211 09:39:27.639420  4628 net.cpp:106] Creating Layer conv2
I0211 09:39:27.639427  4628 net.cpp:454] conv2 <- pool1
I0211 09:39:27.639436  4628 net.cpp:411] conv2 -> conv2
I0211 09:39:27.639856  4628 net.cpp:150] Setting up conv2
I0211 09:39:27.639870  4628 net.cpp:157] Top shape: 21 50 8 8 (67200)
I0211 09:39:27.639874  4628 net.cpp:165] Memory required for data: 1544340
I0211 09:39:27.639884  4628 layer_factory.hpp:77] Creating layer pool2
I0211 09:39:27.639899  4628 net.cpp:106] Creating Layer pool2
I0211 09:39:27.639906  4628 net.cpp:454] pool2 <- conv2
I0211 09:39:27.639917  4628 net.cpp:411] pool2 -> pool2
I0211 09:39:27.640066  4628 net.cpp:150] Setting up pool2
I0211 09:39:27.640077  4628 net.cpp:157] Top shape: 21 50 4 4 (16800)
I0211 09:39:27.640082  4628 net.cpp:165] Memory required for data: 1611540
I0211 09:39:27.640089  4628 layer_factory.hpp:77] Creating layer ip1
I0211 09:39:27.640107  4628 net.cpp:106] Creating Layer ip1
I0211 09:39:27.640113  4628 net.cpp:454] ip1 <- pool2
I0211 09:39:27.640122  4628 net.cpp:411] ip1 -> ip1
I0211 09:39:27.642444  4635 blocking_queue.cpp:50] Waiting for data
I0211 09:39:27.644629  4628 net.cpp:150] Setting up ip1
I0211 09:39:27.644646  4628 net.cpp:157] Top shape: 21 500 (10500)
I0211 09:39:27.644651  4628 net.cpp:165] Memory required for data: 1653540
I0211 09:39:27.644662  4628 layer_factory.hpp:77] Creating layer relu1
I0211 09:39:27.644673  4628 net.cpp:106] Creating Layer relu1
I0211 09:39:27.644678  4628 net.cpp:454] relu1 <- ip1
I0211 09:39:27.644688  4628 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:39:27.644701  4628 net.cpp:150] Setting up relu1
I0211 09:39:27.644708  4628 net.cpp:157] Top shape: 21 500 (10500)
I0211 09:39:27.644713  4628 net.cpp:165] Memory required for data: 1695540
I0211 09:39:27.644718  4628 layer_factory.hpp:77] Creating layer ip2
I0211 09:39:27.644727  4628 net.cpp:106] Creating Layer ip2
I0211 09:39:27.644733  4628 net.cpp:454] ip2 <- ip1
I0211 09:39:27.644743  4628 net.cpp:411] ip2 -> ip2
I0211 09:39:27.645612  4628 net.cpp:150] Setting up ip2
I0211 09:39:27.645627  4628 net.cpp:157] Top shape: 21 10 (210)
I0211 09:39:27.645632  4628 net.cpp:165] Memory required for data: 1696380
I0211 09:39:27.645639  4628 layer_factory.hpp:77] Creating layer loss
I0211 09:39:27.645654  4628 net.cpp:106] Creating Layer loss
I0211 09:39:27.645660  4628 net.cpp:454] loss <- ip2
I0211 09:39:27.645668  4628 net.cpp:454] loss <- label
I0211 09:39:27.645676  4628 net.cpp:411] loss -> loss
I0211 09:39:27.645696  4628 layer_factory.hpp:77] Creating layer loss
I0211 09:39:27.645792  4628 net.cpp:150] Setting up loss
I0211 09:39:27.645802  4628 net.cpp:157] Top shape: (1)
I0211 09:39:27.645807  4628 net.cpp:160]     with loss weight 1
I0211 09:39:27.645838  4628 net.cpp:165] Memory required for data: 1696384
I0211 09:39:27.645846  4628 net.cpp:226] loss needs backward computation.
I0211 09:39:27.645853  4628 net.cpp:226] ip2 needs backward computation.
I0211 09:39:27.645859  4628 net.cpp:226] relu1 needs backward computation.
I0211 09:39:27.645864  4628 net.cpp:226] ip1 needs backward computation.
I0211 09:39:27.645869  4628 net.cpp:226] pool2 needs backward computation.
I0211 09:39:27.645874  4628 net.cpp:226] conv2 needs backward computation.
I0211 09:39:27.645882  4628 net.cpp:226] pool1 needs backward computation.
I0211 09:39:27.645887  4628 net.cpp:226] conv1 needs backward computation.
I0211 09:39:27.645907  4628 net.cpp:228] mnist does not need backward computation.
I0211 09:39:27.645912  4628 net.cpp:270] This network produces output loss
I0211 09:39:27.645931  4628 net.cpp:283] Network initialization done.
I0211 09:39:27.646993  4628 solver.cpp:181] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0211 09:39:27.647033  4628 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0211 09:39:27.647212  4628 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:39:27.647313  4628 layer_factory.hpp:77] Creating layer mnist
I0211 09:39:27.647940  4628 net.cpp:106] Creating Layer mnist
I0211 09:39:27.647954  4628 net.cpp:411] mnist -> data
I0211 09:39:27.647967  4628 net.cpp:411] mnist -> label
I0211 09:39:27.653092  4636 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_test_lmdb
I0211 09:39:27.653558  4628 data_layer.cpp:41] output data size: 100,1,28,28
I0211 09:39:27.655748  4628 net.cpp:150] Setting up mnist
I0211 09:39:27.655781  4628 net.cpp:157] Top shape: 100 1 28 28 (78400)
I0211 09:39:27.655794  4628 net.cpp:157] Top shape: 100 (100)
I0211 09:39:27.655804  4628 net.cpp:165] Memory required for data: 314000
I0211 09:39:27.655819  4628 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0211 09:39:27.655839  4628 net.cpp:106] Creating Layer label_mnist_1_split
I0211 09:39:27.655851  4628 net.cpp:454] label_mnist_1_split <- label
I0211 09:39:27.655876  4628 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_0
I0211 09:39:27.655908  4628 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_1
I0211 09:39:27.656144  4628 net.cpp:150] Setting up label_mnist_1_split
I0211 09:39:27.656167  4628 net.cpp:157] Top shape: 100 (100)
I0211 09:39:27.656179  4628 net.cpp:157] Top shape: 100 (100)
I0211 09:39:27.656188  4628 net.cpp:165] Memory required for data: 314800
I0211 09:39:27.656198  4628 layer_factory.hpp:77] Creating layer conv1
I0211 09:39:27.656234  4628 net.cpp:106] Creating Layer conv1
I0211 09:39:27.656249  4628 net.cpp:454] conv1 <- data
I0211 09:39:27.656266  4628 net.cpp:411] conv1 -> conv1
I0211 09:39:27.656756  4628 net.cpp:150] Setting up conv1
I0211 09:39:27.656781  4628 net.cpp:157] Top shape: 100 20 24 24 (1152000)
I0211 09:39:27.656792  4628 net.cpp:165] Memory required for data: 4922800
I0211 09:39:27.656816  4628 layer_factory.hpp:77] Creating layer pool1
I0211 09:39:27.656834  4628 net.cpp:106] Creating Layer pool1
I0211 09:39:27.656879  4628 net.cpp:454] pool1 <- conv1
I0211 09:39:27.656918  4628 net.cpp:411] pool1 -> pool1
I0211 09:39:27.657126  4628 net.cpp:150] Setting up pool1
I0211 09:39:27.657138  4628 net.cpp:157] Top shape: 100 20 12 12 (288000)
I0211 09:39:27.657143  4628 net.cpp:165] Memory required for data: 6074800
I0211 09:39:27.657148  4628 layer_factory.hpp:77] Creating layer conv2
I0211 09:39:27.657165  4628 net.cpp:106] Creating Layer conv2
I0211 09:39:27.657172  4628 net.cpp:454] conv2 <- pool1
I0211 09:39:27.657183  4628 net.cpp:411] conv2 -> conv2
I0211 09:39:27.657660  4628 net.cpp:150] Setting up conv2
I0211 09:39:27.657673  4628 net.cpp:157] Top shape: 100 50 8 8 (320000)
I0211 09:39:27.657678  4628 net.cpp:165] Memory required for data: 7354800
I0211 09:39:27.657691  4628 layer_factory.hpp:77] Creating layer pool2
I0211 09:39:27.657701  4628 net.cpp:106] Creating Layer pool2
I0211 09:39:27.657706  4628 net.cpp:454] pool2 <- conv2
I0211 09:39:27.657718  4628 net.cpp:411] pool2 -> pool2
I0211 09:39:27.657879  4628 net.cpp:150] Setting up pool2
I0211 09:39:27.657896  4628 net.cpp:157] Top shape: 100 50 4 4 (80000)
I0211 09:39:27.657902  4628 net.cpp:165] Memory required for data: 7674800
I0211 09:39:27.657907  4628 layer_factory.hpp:77] Creating layer ip1
I0211 09:39:27.657922  4628 net.cpp:106] Creating Layer ip1
I0211 09:39:27.657929  4628 net.cpp:454] ip1 <- pool2
I0211 09:39:27.657939  4628 net.cpp:411] ip1 -> ip1
I0211 09:39:27.664486  4628 net.cpp:150] Setting up ip1
I0211 09:39:27.664501  4628 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:39:27.664506  4628 net.cpp:165] Memory required for data: 7874800
I0211 09:39:27.664517  4628 layer_factory.hpp:77] Creating layer relu1
I0211 09:39:27.664530  4628 net.cpp:106] Creating Layer relu1
I0211 09:39:27.664537  4628 net.cpp:454] relu1 <- ip1
I0211 09:39:27.664544  4628 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:39:27.664554  4628 net.cpp:150] Setting up relu1
I0211 09:39:27.664562  4628 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:39:27.664566  4628 net.cpp:165] Memory required for data: 8074800
I0211 09:39:27.664571  4628 layer_factory.hpp:77] Creating layer ip2
I0211 09:39:27.664583  4628 net.cpp:106] Creating Layer ip2
I0211 09:39:27.664589  4628 net.cpp:454] ip2 <- ip1
I0211 09:39:27.664597  4628 net.cpp:411] ip2 -> ip2
I0211 09:39:27.664752  4628 net.cpp:150] Setting up ip2
I0211 09:39:27.664763  4628 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:39:27.664768  4628 net.cpp:165] Memory required for data: 8078800
I0211 09:39:27.664777  4628 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0211 09:39:27.664788  4628 net.cpp:106] Creating Layer ip2_ip2_0_split
I0211 09:39:27.664793  4628 net.cpp:454] ip2_ip2_0_split <- ip2
I0211 09:39:27.664801  4628 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0211 09:39:27.664810  4628 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0211 09:39:27.664852  4628 net.cpp:150] Setting up ip2_ip2_0_split
I0211 09:39:27.664862  4628 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:39:27.664868  4628 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:39:27.664873  4628 net.cpp:165] Memory required for data: 8086800
I0211 09:39:27.664880  4628 layer_factory.hpp:77] Creating layer accuracy
I0211 09:39:27.664897  4628 net.cpp:106] Creating Layer accuracy
I0211 09:39:27.664904  4628 net.cpp:454] accuracy <- ip2_ip2_0_split_0
I0211 09:39:27.664911  4628 net.cpp:454] accuracy <- label_mnist_1_split_0
I0211 09:39:27.664921  4628 net.cpp:411] accuracy -> accuracy
I0211 09:39:27.664937  4628 net.cpp:150] Setting up accuracy
I0211 09:39:27.664945  4628 net.cpp:157] Top shape: (1)
I0211 09:39:27.664950  4628 net.cpp:165] Memory required for data: 8086804
I0211 09:39:27.664954  4628 layer_factory.hpp:77] Creating layer loss
I0211 09:39:27.664962  4628 net.cpp:106] Creating Layer loss
I0211 09:39:27.664966  4628 net.cpp:454] loss <- ip2_ip2_0_split_1
I0211 09:39:27.664973  4628 net.cpp:454] loss <- label_mnist_1_split_1
I0211 09:39:27.664983  4628 net.cpp:411] loss -> loss
I0211 09:39:27.665010  4628 layer_factory.hpp:77] Creating layer loss
I0211 09:39:27.665105  4628 net.cpp:150] Setting up loss
I0211 09:39:27.665115  4628 net.cpp:157] Top shape: (1)
I0211 09:39:27.665120  4628 net.cpp:160]     with loss weight 1
I0211 09:39:27.665129  4628 net.cpp:165] Memory required for data: 8086808
I0211 09:39:27.665135  4628 net.cpp:226] loss needs backward computation.
I0211 09:39:27.665141  4628 net.cpp:228] accuracy does not need backward computation.
I0211 09:39:27.665148  4628 net.cpp:226] ip2_ip2_0_split needs backward computation.
I0211 09:39:27.665153  4628 net.cpp:226] ip2 needs backward computation.
I0211 09:39:27.665158  4628 net.cpp:226] relu1 needs backward computation.
I0211 09:39:27.665163  4628 net.cpp:226] ip1 needs backward computation.
I0211 09:39:27.665166  4628 net.cpp:226] pool2 needs backward computation.
I0211 09:39:27.665170  4628 net.cpp:226] conv2 needs backward computation.
I0211 09:39:27.665176  4628 net.cpp:226] pool1 needs backward computation.
I0211 09:39:27.665181  4628 net.cpp:226] conv1 needs backward computation.
I0211 09:39:27.665189  4628 net.cpp:228] label_mnist_1_split does not need backward computation.
I0211 09:39:27.665195  4628 net.cpp:228] mnist does not need backward computation.
I0211 09:39:27.665200  4628 net.cpp:270] This network produces output accuracy
I0211 09:39:27.665205  4628 net.cpp:270] This network produces output loss
I0211 09:39:27.665221  4628 net.cpp:283] Network initialization done.
I0211 09:39:27.665262  4628 solver.cpp:60] Solver scaffolding done.
I0211 09:39:27.748576  4628 parallel.cpp:405] GPUs pairs 0:1, 2:3, 4:5, 0:2, 0:4
I0211 09:39:27.970233  4628 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:28.314071  4628 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:28.754114  4628 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:28.983595  4628 parallel.cpp:234] GPU 4 does not have p2p access to GPU 0
I0211 09:39:29.238261  4628 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:29.701529  4628 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:29.929607  4628 parallel.cpp:433] Starting Optimization - TEST TEST TEST
I0211 09:39:29.931002  4628 solver.cpp:311] Solving LeNet
I0211 09:39:29.931026  4628 solver.cpp:312] Learning Rate Policy: inv
I0211 09:39:29.931877  4628 solver.cpp:364] Iteration 0, Testing net (#0)
I0211 09:39:30.946961  4628 solver.cpp:432]     Test net output #0: accuracy = 0.1037
I0211 09:39:30.947016  4628 solver.cpp:432]     Test net output #1: loss = 2.36137 (* 1 = 2.36137 loss)
I0211 09:39:30.961848  4628 solver.cpp:250] Iteration 0, loss = 2.40061 Time spent communicating 0.667072
I0211 09:39:30.961874  4628 solver.cpp:267]     Train net output #0: loss = 2.40061 (* 1 = 2.40061 loss)
I0211 09:39:30.968950  4628 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0211 09:39:31.926285  4628 solver.cpp:250] Iteration 100, loss = 0.357262 Time spent communicating 199.286
I0211 09:39:31.926331  4628 solver.cpp:267]     Train net output #0: loss = 0.357262 (* 1 = 0.357262 loss)
I0211 09:39:31.927430  4628 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0211 09:39:32.848906  4628 solver.cpp:250] Iteration 200, loss = 0.224923 Time spent communicating 181.706
I0211 09:39:32.848933  4628 solver.cpp:267]     Train net output #0: loss = 0.224922 (* 1 = 0.224922 loss)
I0211 09:39:32.850369  4628 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0211 09:39:33.786454  4628 solver.cpp:250] Iteration 300, loss = 0.0780544 Time spent communicating 165.164
I0211 09:39:33.786494  4628 solver.cpp:267]     Train net output #0: loss = 0.0780543 (* 1 = 0.0780543 loss)
I0211 09:39:33.787806  4628 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0211 09:39:34.750087  4628 solver.cpp:250] Iteration 400, loss = 0.403049 Time spent communicating 161.909
I0211 09:39:34.750123  4628 solver.cpp:267]     Train net output #0: loss = 0.403049 (* 1 = 0.403049 loss)
I0211 09:39:34.752018  4628 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0211 09:39:35.684608  4628 solver.cpp:482] Snapshotting to binary proto file examples/mnist/lenet_iter_500.caffemodel
I0211 09:39:35.723122  4628 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_500.solverstate
I0211 09:39:35.751240  4628 solver.cpp:344] Iteration 500, loss = 0.191473
I0211 09:39:35.751276  4628 solver.cpp:364] Iteration 500, Testing net (#0)
I0211 09:39:36.702991  4628 solver.cpp:432]     Test net output #0: accuracy = 0.9765
I0211 09:39:36.703014  4628 solver.cpp:432]     Test net output #1: loss = 0.0734791 (* 1 = 0.0734791 loss)
I0211 09:39:36.703022  4628 solver.cpp:349] Optimization Done.
I0211 09:39:36.703127  4628 parallel.cpp:256] IN DESTRUCTOR AND I'M 1
I0211 09:39:36.725504  4628 parallel.cpp:256] IN DESTRUCTOR AND I'M 3
I0211 09:39:36.746052  4628 parallel.cpp:256] IN DESTRUCTOR AND I'M 5
I0211 09:39:36.769182  4628 parallel.cpp:256] IN DESTRUCTOR AND I'M 2
I0211 09:39:36.792512  4628 parallel.cpp:256] IN DESTRUCTOR AND I'M 4
I0211 09:39:36.810287  4628 parallel.cpp:256] IN DESTRUCTOR AND I'M 0
I0211 09:39:36.810753  4628 caffe.cpp:215] Optimization Done.
