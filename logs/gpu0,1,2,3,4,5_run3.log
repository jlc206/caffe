I0211 09:39:38.458361  4659 caffe.cpp:184] Using GPUs 0, 1, 2, 3, 4, 5
I0211 09:39:43.206961  4659 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 500
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "examples/mnist/lenet_train_test.prototxt"
I0211 09:39:43.218477  4659 solver.cpp:91] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0211 09:39:43.220149  4659 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0211 09:39:43.220207  4659 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0211 09:39:43.220489  4659 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 21
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:39:43.220669  4659 layer_factory.hpp:77] Creating layer mnist
I0211 09:39:43.222100  4659 net.cpp:106] Creating Layer mnist
I0211 09:39:43.222137  4659 net.cpp:411] mnist -> data
I0211 09:39:43.222285  4659 net.cpp:411] mnist -> label
I0211 09:39:43.227793  4663 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_train_lmdb
I0211 09:39:43.249575  4659 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:43.250814  4659 net.cpp:150] Setting up mnist
I0211 09:39:43.250836  4659 net.cpp:157] Top shape: 21 1 28 28 (16464)
I0211 09:39:43.250844  4659 net.cpp:157] Top shape: 21 (21)
I0211 09:39:43.250850  4659 net.cpp:165] Memory required for data: 65940
I0211 09:39:43.250864  4659 layer_factory.hpp:77] Creating layer conv1
I0211 09:39:43.250900  4659 net.cpp:106] Creating Layer conv1
I0211 09:39:43.250913  4659 net.cpp:454] conv1 <- data
I0211 09:39:43.250936  4659 net.cpp:411] conv1 -> conv1
I0211 09:39:43.252212  4659 net.cpp:150] Setting up conv1
I0211 09:39:43.252228  4659 net.cpp:157] Top shape: 21 20 24 24 (241920)
I0211 09:39:43.252233  4659 net.cpp:165] Memory required for data: 1033620
I0211 09:39:43.252249  4659 layer_factory.hpp:77] Creating layer pool1
I0211 09:39:43.252265  4659 net.cpp:106] Creating Layer pool1
I0211 09:39:43.252272  4659 net.cpp:454] pool1 <- conv1
I0211 09:39:43.252281  4659 net.cpp:411] pool1 -> pool1
I0211 09:39:43.252492  4659 net.cpp:150] Setting up pool1
I0211 09:39:43.252504  4659 net.cpp:157] Top shape: 21 20 12 12 (60480)
I0211 09:39:43.252511  4659 net.cpp:165] Memory required for data: 1275540
I0211 09:39:43.252517  4659 layer_factory.hpp:77] Creating layer conv2
I0211 09:39:43.252532  4659 net.cpp:106] Creating Layer conv2
I0211 09:39:43.252538  4659 net.cpp:454] conv2 <- pool1
I0211 09:39:43.252550  4659 net.cpp:411] conv2 -> conv2
I0211 09:39:43.252988  4659 net.cpp:150] Setting up conv2
I0211 09:39:43.253001  4659 net.cpp:157] Top shape: 21 50 8 8 (67200)
I0211 09:39:43.253007  4659 net.cpp:165] Memory required for data: 1544340
I0211 09:39:43.253018  4659 layer_factory.hpp:77] Creating layer pool2
I0211 09:39:43.253031  4659 net.cpp:106] Creating Layer pool2
I0211 09:39:43.253036  4659 net.cpp:454] pool2 <- conv2
I0211 09:39:43.253043  4659 net.cpp:411] pool2 -> pool2
I0211 09:39:43.253193  4659 net.cpp:150] Setting up pool2
I0211 09:39:43.253204  4659 net.cpp:157] Top shape: 21 50 4 4 (16800)
I0211 09:39:43.253209  4659 net.cpp:165] Memory required for data: 1611540
I0211 09:39:43.253213  4659 layer_factory.hpp:77] Creating layer ip1
I0211 09:39:43.253231  4659 net.cpp:106] Creating Layer ip1
I0211 09:39:43.253237  4659 net.cpp:454] ip1 <- pool2
I0211 09:39:43.253248  4659 net.cpp:411] ip1 -> ip1
I0211 09:39:43.255558  4664 blocking_queue.cpp:50] Waiting for data
I0211 09:39:43.258061  4659 net.cpp:150] Setting up ip1
I0211 09:39:43.258077  4659 net.cpp:157] Top shape: 21 500 (10500)
I0211 09:39:43.258082  4659 net.cpp:165] Memory required for data: 1653540
I0211 09:39:43.258095  4659 layer_factory.hpp:77] Creating layer relu1
I0211 09:39:43.258107  4659 net.cpp:106] Creating Layer relu1
I0211 09:39:43.258112  4659 net.cpp:454] relu1 <- ip1
I0211 09:39:43.258121  4659 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:39:43.258133  4659 net.cpp:150] Setting up relu1
I0211 09:39:43.258141  4659 net.cpp:157] Top shape: 21 500 (10500)
I0211 09:39:43.258147  4659 net.cpp:165] Memory required for data: 1695540
I0211 09:39:43.258152  4659 layer_factory.hpp:77] Creating layer ip2
I0211 09:39:43.258165  4659 net.cpp:106] Creating Layer ip2
I0211 09:39:43.258172  4659 net.cpp:454] ip2 <- ip1
I0211 09:39:43.258179  4659 net.cpp:411] ip2 -> ip2
I0211 09:39:43.259059  4659 net.cpp:150] Setting up ip2
I0211 09:39:43.259073  4659 net.cpp:157] Top shape: 21 10 (210)
I0211 09:39:43.259078  4659 net.cpp:165] Memory required for data: 1696380
I0211 09:39:43.259086  4659 layer_factory.hpp:77] Creating layer loss
I0211 09:39:43.259099  4659 net.cpp:106] Creating Layer loss
I0211 09:39:43.259104  4659 net.cpp:454] loss <- ip2
I0211 09:39:43.259109  4659 net.cpp:454] loss <- label
I0211 09:39:43.259124  4659 net.cpp:411] loss -> loss
I0211 09:39:43.259143  4659 layer_factory.hpp:77] Creating layer loss
I0211 09:39:43.259239  4659 net.cpp:150] Setting up loss
I0211 09:39:43.259251  4659 net.cpp:157] Top shape: (1)
I0211 09:39:43.259255  4659 net.cpp:160]     with loss weight 1
I0211 09:39:43.259286  4659 net.cpp:165] Memory required for data: 1696384
I0211 09:39:43.259295  4659 net.cpp:226] loss needs backward computation.
I0211 09:39:43.259302  4659 net.cpp:226] ip2 needs backward computation.
I0211 09:39:43.259307  4659 net.cpp:226] relu1 needs backward computation.
I0211 09:39:43.259311  4659 net.cpp:226] ip1 needs backward computation.
I0211 09:39:43.259316  4659 net.cpp:226] pool2 needs backward computation.
I0211 09:39:43.259320  4659 net.cpp:226] conv2 needs backward computation.
I0211 09:39:43.259328  4659 net.cpp:226] pool1 needs backward computation.
I0211 09:39:43.259335  4659 net.cpp:226] conv1 needs backward computation.
I0211 09:39:43.259341  4659 net.cpp:228] mnist does not need backward computation.
I0211 09:39:43.259346  4659 net.cpp:270] This network produces output loss
I0211 09:39:43.259361  4659 net.cpp:283] Network initialization done.
I0211 09:39:43.260577  4659 solver.cpp:181] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0211 09:39:43.260623  4659 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0211 09:39:43.260802  4659 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:39:43.260910  4659 layer_factory.hpp:77] Creating layer mnist
I0211 09:39:43.261545  4659 net.cpp:106] Creating Layer mnist
I0211 09:39:43.261561  4659 net.cpp:411] mnist -> data
I0211 09:39:43.261574  4659 net.cpp:411] mnist -> label
I0211 09:39:43.266757  4665 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_test_lmdb
I0211 09:39:43.267151  4659 data_layer.cpp:41] output data size: 100,1,28,28
I0211 09:39:43.268685  4659 net.cpp:150] Setting up mnist
I0211 09:39:43.268707  4659 net.cpp:157] Top shape: 100 1 28 28 (78400)
I0211 09:39:43.268713  4659 net.cpp:157] Top shape: 100 (100)
I0211 09:39:43.268718  4659 net.cpp:165] Memory required for data: 314000
I0211 09:39:43.268725  4659 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0211 09:39:43.268736  4659 net.cpp:106] Creating Layer label_mnist_1_split
I0211 09:39:43.268743  4659 net.cpp:454] label_mnist_1_split <- label
I0211 09:39:43.268754  4659 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_0
I0211 09:39:43.268769  4659 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_1
I0211 09:39:43.268831  4659 net.cpp:150] Setting up label_mnist_1_split
I0211 09:39:43.268842  4659 net.cpp:157] Top shape: 100 (100)
I0211 09:39:43.268851  4659 net.cpp:157] Top shape: 100 (100)
I0211 09:39:43.268857  4659 net.cpp:165] Memory required for data: 314800
I0211 09:39:43.268862  4659 layer_factory.hpp:77] Creating layer conv1
I0211 09:39:43.268879  4659 net.cpp:106] Creating Layer conv1
I0211 09:39:43.268887  4659 net.cpp:454] conv1 <- data
I0211 09:39:43.268910  4659 net.cpp:411] conv1 -> conv1
I0211 09:39:43.269420  4659 net.cpp:150] Setting up conv1
I0211 09:39:43.269435  4659 net.cpp:157] Top shape: 100 20 24 24 (1152000)
I0211 09:39:43.269443  4659 net.cpp:165] Memory required for data: 4922800
I0211 09:39:43.269457  4659 layer_factory.hpp:77] Creating layer pool1
I0211 09:39:43.269472  4659 net.cpp:106] Creating Layer pool1
I0211 09:39:43.269497  4659 net.cpp:454] pool1 <- conv1
I0211 09:39:43.269507  4659 net.cpp:411] pool1 -> pool1
I0211 09:39:43.269683  4659 net.cpp:150] Setting up pool1
I0211 09:39:43.269696  4659 net.cpp:157] Top shape: 100 20 12 12 (288000)
I0211 09:39:43.269702  4659 net.cpp:165] Memory required for data: 6074800
I0211 09:39:43.269709  4659 layer_factory.hpp:77] Creating layer conv2
I0211 09:39:43.269729  4659 net.cpp:106] Creating Layer conv2
I0211 09:39:43.269737  4659 net.cpp:454] conv2 <- pool1
I0211 09:39:43.269747  4659 net.cpp:411] conv2 -> conv2
I0211 09:39:43.270242  4659 net.cpp:150] Setting up conv2
I0211 09:39:43.270259  4659 net.cpp:157] Top shape: 100 50 8 8 (320000)
I0211 09:39:43.270267  4659 net.cpp:165] Memory required for data: 7354800
I0211 09:39:43.270279  4659 layer_factory.hpp:77] Creating layer pool2
I0211 09:39:43.270288  4659 net.cpp:106] Creating Layer pool2
I0211 09:39:43.270294  4659 net.cpp:454] pool2 <- conv2
I0211 09:39:43.270303  4659 net.cpp:411] pool2 -> pool2
I0211 09:39:43.270472  4659 net.cpp:150] Setting up pool2
I0211 09:39:43.270484  4659 net.cpp:157] Top shape: 100 50 4 4 (80000)
I0211 09:39:43.270489  4659 net.cpp:165] Memory required for data: 7674800
I0211 09:39:43.270494  4659 layer_factory.hpp:77] Creating layer ip1
I0211 09:39:43.270508  4659 net.cpp:106] Creating Layer ip1
I0211 09:39:43.270514  4659 net.cpp:454] ip1 <- pool2
I0211 09:39:43.270526  4659 net.cpp:411] ip1 -> ip1
I0211 09:39:43.276309  4659 net.cpp:150] Setting up ip1
I0211 09:39:43.276334  4659 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:39:43.276340  4659 net.cpp:165] Memory required for data: 7874800
I0211 09:39:43.276360  4659 layer_factory.hpp:77] Creating layer relu1
I0211 09:39:43.276377  4659 net.cpp:106] Creating Layer relu1
I0211 09:39:43.276388  4659 net.cpp:454] relu1 <- ip1
I0211 09:39:43.276407  4659 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:39:43.276424  4659 net.cpp:150] Setting up relu1
I0211 09:39:43.276437  4659 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:39:43.276444  4659 net.cpp:165] Memory required for data: 8074800
I0211 09:39:43.276453  4659 layer_factory.hpp:77] Creating layer ip2
I0211 09:39:43.276470  4659 net.cpp:106] Creating Layer ip2
I0211 09:39:43.276480  4659 net.cpp:454] ip2 <- ip1
I0211 09:39:43.276499  4659 net.cpp:411] ip2 -> ip2
I0211 09:39:43.276741  4659 net.cpp:150] Setting up ip2
I0211 09:39:43.276760  4659 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:39:43.276767  4659 net.cpp:165] Memory required for data: 8078800
I0211 09:39:43.276782  4659 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0211 09:39:43.276796  4659 net.cpp:106] Creating Layer ip2_ip2_0_split
I0211 09:39:43.276806  4659 net.cpp:454] ip2_ip2_0_split <- ip2
I0211 09:39:43.276824  4659 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0211 09:39:43.276839  4659 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0211 09:39:43.276913  4659 net.cpp:150] Setting up ip2_ip2_0_split
I0211 09:39:43.276931  4659 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:39:43.276942  4659 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:39:43.276950  4659 net.cpp:165] Memory required for data: 8086800
I0211 09:39:43.276960  4659 layer_factory.hpp:77] Creating layer accuracy
I0211 09:39:43.276984  4659 net.cpp:106] Creating Layer accuracy
I0211 09:39:43.276995  4659 net.cpp:454] accuracy <- ip2_ip2_0_split_0
I0211 09:39:43.277007  4659 net.cpp:454] accuracy <- label_mnist_1_split_0
I0211 09:39:43.277020  4659 net.cpp:411] accuracy -> accuracy
I0211 09:39:43.277046  4659 net.cpp:150] Setting up accuracy
I0211 09:39:43.277060  4659 net.cpp:157] Top shape: (1)
I0211 09:39:43.277068  4659 net.cpp:165] Memory required for data: 8086804
I0211 09:39:43.277077  4659 layer_factory.hpp:77] Creating layer loss
I0211 09:39:43.277089  4659 net.cpp:106] Creating Layer loss
I0211 09:39:43.277099  4659 net.cpp:454] loss <- ip2_ip2_0_split_1
I0211 09:39:43.277110  4659 net.cpp:454] loss <- label_mnist_1_split_1
I0211 09:39:43.277122  4659 net.cpp:411] loss -> loss
I0211 09:39:43.277163  4659 layer_factory.hpp:77] Creating layer loss
I0211 09:39:43.277321  4659 net.cpp:150] Setting up loss
I0211 09:39:43.277338  4659 net.cpp:157] Top shape: (1)
I0211 09:39:43.277348  4659 net.cpp:160]     with loss weight 1
I0211 09:39:43.277361  4659 net.cpp:165] Memory required for data: 8086808
I0211 09:39:43.277371  4659 net.cpp:226] loss needs backward computation.
I0211 09:39:43.277381  4659 net.cpp:228] accuracy does not need backward computation.
I0211 09:39:43.277392  4659 net.cpp:226] ip2_ip2_0_split needs backward computation.
I0211 09:39:43.277401  4659 net.cpp:226] ip2 needs backward computation.
I0211 09:39:43.277410  4659 net.cpp:226] relu1 needs backward computation.
I0211 09:39:43.277418  4659 net.cpp:226] ip1 needs backward computation.
I0211 09:39:43.277427  4659 net.cpp:226] pool2 needs backward computation.
I0211 09:39:43.277436  4659 net.cpp:226] conv2 needs backward computation.
I0211 09:39:43.277446  4659 net.cpp:226] pool1 needs backward computation.
I0211 09:39:43.277454  4659 net.cpp:226] conv1 needs backward computation.
I0211 09:39:43.277464  4659 net.cpp:228] label_mnist_1_split does not need backward computation.
I0211 09:39:43.277475  4659 net.cpp:228] mnist does not need backward computation.
I0211 09:39:43.277483  4659 net.cpp:270] This network produces output accuracy
I0211 09:39:43.277492  4659 net.cpp:270] This network produces output loss
I0211 09:39:43.277520  4659 net.cpp:283] Network initialization done.
I0211 09:39:43.277585  4659 solver.cpp:60] Solver scaffolding done.
I0211 09:39:43.363811  4659 parallel.cpp:405] GPUs pairs 0:1, 2:3, 4:5, 0:2, 0:4
I0211 09:39:43.577750  4659 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:43.926900  4659 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:44.379454  4659 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:44.662777  4659 parallel.cpp:234] GPU 4 does not have p2p access to GPU 0
I0211 09:39:44.932368  4659 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:45.426841  4659 data_layer.cpp:41] output data size: 21,1,28,28
I0211 09:39:45.702740  4659 parallel.cpp:433] Starting Optimization - TEST TEST TEST
I0211 09:39:45.704140  4659 solver.cpp:311] Solving LeNet
I0211 09:39:45.704152  4659 solver.cpp:312] Learning Rate Policy: inv
I0211 09:39:45.704602  4659 solver.cpp:364] Iteration 0, Testing net (#0)
I0211 09:39:46.733914  4659 solver.cpp:432]     Test net output #0: accuracy = 0.0642
I0211 09:39:46.733954  4659 solver.cpp:432]     Test net output #1: loss = 2.35434 (* 1 = 2.35434 loss)
I0211 09:39:46.753545  4659 solver.cpp:250] Iteration 0, loss = 2.36006 Time spent communicating 0.63536
I0211 09:39:46.753595  4659 solver.cpp:267]     Train net output #0: loss = 2.36006 (* 1 = 2.36006 loss)
I0211 09:39:46.757752  4659 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0211 09:39:47.749207  4659 solver.cpp:250] Iteration 100, loss = 0.403787 Time spent communicating 157.468
I0211 09:39:47.749254  4659 solver.cpp:267]     Train net output #0: loss = 0.403787 (* 1 = 0.403787 loss)
I0211 09:39:47.750257  4659 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0211 09:39:48.723109  4659 solver.cpp:250] Iteration 200, loss = 0.184184 Time spent communicating 154.985
I0211 09:39:48.723145  4659 solver.cpp:267]     Train net output #0: loss = 0.184184 (* 1 = 0.184184 loss)
I0211 09:39:48.724061  4659 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0211 09:39:49.665727  4659 solver.cpp:250] Iteration 300, loss = 0.0690943 Time spent communicating 146.298
I0211 09:39:49.665765  4659 solver.cpp:267]     Train net output #0: loss = 0.069094 (* 1 = 0.069094 loss)
I0211 09:39:49.666949  4659 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0211 09:39:50.654832  4659 solver.cpp:250] Iteration 400, loss = 0.46299 Time spent communicating 156.461
I0211 09:39:50.654866  4659 solver.cpp:267]     Train net output #0: loss = 0.46299 (* 1 = 0.46299 loss)
I0211 09:39:50.656903  4659 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0211 09:39:51.637918  4659 solver.cpp:482] Snapshotting to binary proto file examples/mnist/lenet_iter_500.caffemodel
I0211 09:39:51.674049  4659 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_500.solverstate
I0211 09:39:51.704100  4659 solver.cpp:344] Iteration 500, loss = 0.215783
I0211 09:39:51.704139  4659 solver.cpp:364] Iteration 500, Testing net (#0)
I0211 09:39:52.646981  4659 solver.cpp:432]     Test net output #0: accuracy = 0.9774
I0211 09:39:52.647013  4659 solver.cpp:432]     Test net output #1: loss = 0.0723577 (* 1 = 0.0723577 loss)
I0211 09:39:52.647020  4659 solver.cpp:349] Optimization Done.
I0211 09:39:52.647131  4659 parallel.cpp:256] IN DESTRUCTOR AND I'M 1
I0211 09:39:52.669582  4659 parallel.cpp:256] IN DESTRUCTOR AND I'M 3
I0211 09:39:52.690865  4659 parallel.cpp:256] IN DESTRUCTOR AND I'M 5
I0211 09:39:52.711180  4659 parallel.cpp:256] IN DESTRUCTOR AND I'M 2
I0211 09:39:52.731792  4659 parallel.cpp:256] IN DESTRUCTOR AND I'M 4
I0211 09:39:52.749900  4659 parallel.cpp:256] IN DESTRUCTOR AND I'M 0
I0211 09:39:52.750370  4659 caffe.cpp:215] Optimization Done.
