I0211 09:46:40.960011  4985 caffe.cpp:184] Using GPUs 0
I0211 09:46:43.835779  4985 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 500
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "examples/mnist/lenet_train_test.prototxt"
I0211 09:46:43.847290  4985 solver.cpp:91] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0211 09:46:43.848511  4985 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0211 09:46:43.848536  4985 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0211 09:46:43.848670  4985 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:46:43.848758  4985 layer_factory.hpp:77] Creating layer mnist
I0211 09:46:43.849510  4985 net.cpp:106] Creating Layer mnist
I0211 09:46:43.849530  4985 net.cpp:411] mnist -> data
I0211 09:46:43.849567  4985 net.cpp:411] mnist -> label
I0211 09:46:43.856031  4990 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_train_lmdb
I0211 09:46:43.870877  4985 data_layer.cpp:41] output data size: 128,1,28,28
I0211 09:46:43.873703  4985 net.cpp:150] Setting up mnist
I0211 09:46:43.873726  4985 net.cpp:157] Top shape: 128 1 28 28 (100352)
I0211 09:46:43.873735  4985 net.cpp:157] Top shape: 128 (128)
I0211 09:46:43.873740  4985 net.cpp:165] Memory required for data: 401920
I0211 09:46:43.873755  4985 layer_factory.hpp:77] Creating layer conv1
I0211 09:46:43.873790  4985 net.cpp:106] Creating Layer conv1
I0211 09:46:43.873800  4985 net.cpp:454] conv1 <- data
I0211 09:46:43.873821  4985 net.cpp:411] conv1 -> conv1
I0211 09:46:43.875222  4985 net.cpp:150] Setting up conv1
I0211 09:46:43.875238  4985 net.cpp:157] Top shape: 128 20 24 24 (1474560)
I0211 09:46:43.875242  4985 net.cpp:165] Memory required for data: 6300160
I0211 09:46:43.875260  4985 layer_factory.hpp:77] Creating layer pool1
I0211 09:46:43.875279  4985 net.cpp:106] Creating Layer pool1
I0211 09:46:43.875286  4985 net.cpp:454] pool1 <- conv1
I0211 09:46:43.875294  4985 net.cpp:411] pool1 -> pool1
I0211 09:46:43.875499  4985 net.cpp:150] Setting up pool1
I0211 09:46:43.875514  4985 net.cpp:157] Top shape: 128 20 12 12 (368640)
I0211 09:46:43.875519  4985 net.cpp:165] Memory required for data: 7774720
I0211 09:46:43.875525  4985 layer_factory.hpp:77] Creating layer conv2
I0211 09:46:43.875536  4985 net.cpp:106] Creating Layer conv2
I0211 09:46:43.875543  4985 net.cpp:454] conv2 <- pool1
I0211 09:46:43.875555  4985 net.cpp:411] conv2 -> conv2
I0211 09:46:43.877194  4985 net.cpp:150] Setting up conv2
I0211 09:46:43.877209  4985 net.cpp:157] Top shape: 128 50 8 8 (409600)
I0211 09:46:43.877214  4985 net.cpp:165] Memory required for data: 9413120
I0211 09:46:43.877226  4985 layer_factory.hpp:77] Creating layer pool2
I0211 09:46:43.877240  4985 net.cpp:106] Creating Layer pool2
I0211 09:46:43.877246  4985 net.cpp:454] pool2 <- conv2
I0211 09:46:43.877254  4985 net.cpp:411] pool2 -> pool2
I0211 09:46:43.877411  4985 net.cpp:150] Setting up pool2
I0211 09:46:43.877423  4985 net.cpp:157] Top shape: 128 50 4 4 (102400)
I0211 09:46:43.877429  4985 net.cpp:165] Memory required for data: 9822720
I0211 09:46:43.877434  4985 layer_factory.hpp:77] Creating layer ip1
I0211 09:46:43.877452  4985 net.cpp:106] Creating Layer ip1
I0211 09:46:43.877460  4985 net.cpp:454] ip1 <- pool2
I0211 09:46:43.877470  4985 net.cpp:411] ip1 -> ip1
I0211 09:46:43.882159  4985 net.cpp:150] Setting up ip1
I0211 09:46:43.882174  4985 net.cpp:157] Top shape: 128 500 (64000)
I0211 09:46:43.882180  4985 net.cpp:165] Memory required for data: 10078720
I0211 09:46:43.882194  4985 layer_factory.hpp:77] Creating layer relu1
I0211 09:46:43.882206  4985 net.cpp:106] Creating Layer relu1
I0211 09:46:43.882213  4985 net.cpp:454] relu1 <- ip1
I0211 09:46:43.882220  4985 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:46:43.882232  4985 net.cpp:150] Setting up relu1
I0211 09:46:43.882241  4985 net.cpp:157] Top shape: 128 500 (64000)
I0211 09:46:43.882246  4985 net.cpp:165] Memory required for data: 10334720
I0211 09:46:43.882251  4985 layer_factory.hpp:77] Creating layer ip2
I0211 09:46:43.882263  4985 net.cpp:106] Creating Layer ip2
I0211 09:46:43.882269  4985 net.cpp:454] ip2 <- ip1
I0211 09:46:43.882277  4985 net.cpp:411] ip2 -> ip2
I0211 09:46:43.883164  4985 net.cpp:150] Setting up ip2
I0211 09:46:43.883179  4985 net.cpp:157] Top shape: 128 10 (1280)
I0211 09:46:43.883184  4985 net.cpp:165] Memory required for data: 10339840
I0211 09:46:43.883193  4985 layer_factory.hpp:77] Creating layer loss
I0211 09:46:43.883205  4985 net.cpp:106] Creating Layer loss
I0211 09:46:43.883211  4985 net.cpp:454] loss <- ip2
I0211 09:46:43.883218  4985 net.cpp:454] loss <- label
I0211 09:46:43.883226  4985 net.cpp:411] loss -> loss
I0211 09:46:43.883249  4985 layer_factory.hpp:77] Creating layer loss
I0211 09:46:43.884246  4985 net.cpp:150] Setting up loss
I0211 09:46:43.884260  4985 net.cpp:157] Top shape: (1)
I0211 09:46:43.884265  4985 net.cpp:160]     with loss weight 1
I0211 09:46:43.884294  4985 net.cpp:165] Memory required for data: 10339844
I0211 09:46:43.884302  4985 net.cpp:226] loss needs backward computation.
I0211 09:46:43.884310  4985 net.cpp:226] ip2 needs backward computation.
I0211 09:46:43.884313  4985 net.cpp:226] relu1 needs backward computation.
I0211 09:46:43.884318  4985 net.cpp:226] ip1 needs backward computation.
I0211 09:46:43.884322  4985 net.cpp:226] pool2 needs backward computation.
I0211 09:46:43.884326  4985 net.cpp:226] conv2 needs backward computation.
I0211 09:46:43.884335  4985 net.cpp:226] pool1 needs backward computation.
I0211 09:46:43.884341  4985 net.cpp:226] conv1 needs backward computation.
I0211 09:46:43.884346  4985 net.cpp:228] mnist does not need backward computation.
I0211 09:46:43.884351  4985 net.cpp:270] This network produces output loss
I0211 09:46:43.884366  4985 net.cpp:283] Network initialization done.
I0211 09:46:43.885382  4985 solver.cpp:181] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0211 09:46:43.885422  4985 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0211 09:46:43.885598  4985 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:46:43.885707  4985 layer_factory.hpp:77] Creating layer mnist
I0211 09:46:43.885843  4985 net.cpp:106] Creating Layer mnist
I0211 09:46:43.885856  4985 net.cpp:411] mnist -> data
I0211 09:46:43.885869  4985 net.cpp:411] mnist -> label
I0211 09:46:43.892653  4992 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_test_lmdb
I0211 09:46:43.893035  4985 data_layer.cpp:41] output data size: 100,1,28,28
I0211 09:46:43.895501  4985 net.cpp:150] Setting up mnist
I0211 09:46:43.895520  4985 net.cpp:157] Top shape: 100 1 28 28 (78400)
I0211 09:46:43.895529  4985 net.cpp:157] Top shape: 100 (100)
I0211 09:46:43.895534  4985 net.cpp:165] Memory required for data: 314000
I0211 09:46:43.895540  4985 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0211 09:46:43.895572  4985 net.cpp:106] Creating Layer label_mnist_1_split
I0211 09:46:43.895581  4985 net.cpp:454] label_mnist_1_split <- label
I0211 09:46:43.895591  4985 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_0
I0211 09:46:43.895604  4985 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_1
I0211 09:46:43.895773  4985 net.cpp:150] Setting up label_mnist_1_split
I0211 09:46:43.895787  4985 net.cpp:157] Top shape: 100 (100)
I0211 09:46:43.895795  4985 net.cpp:157] Top shape: 100 (100)
I0211 09:46:43.895799  4985 net.cpp:165] Memory required for data: 314800
I0211 09:46:43.895805  4985 layer_factory.hpp:77] Creating layer conv1
I0211 09:46:43.895823  4985 net.cpp:106] Creating Layer conv1
I0211 09:46:43.895831  4985 net.cpp:454] conv1 <- data
I0211 09:46:43.895844  4985 net.cpp:411] conv1 -> conv1
I0211 09:46:43.896152  4985 net.cpp:150] Setting up conv1
I0211 09:46:43.896167  4985 net.cpp:157] Top shape: 100 20 24 24 (1152000)
I0211 09:46:43.896173  4985 net.cpp:165] Memory required for data: 4922800
I0211 09:46:43.896188  4985 layer_factory.hpp:77] Creating layer pool1
I0211 09:46:43.896203  4985 net.cpp:106] Creating Layer pool1
I0211 09:46:43.896226  4985 net.cpp:454] pool1 <- conv1
I0211 09:46:43.896236  4985 net.cpp:411] pool1 -> pool1
I0211 09:46:43.896487  4985 net.cpp:150] Setting up pool1
I0211 09:46:43.896503  4985 net.cpp:157] Top shape: 100 20 12 12 (288000)
I0211 09:46:43.896510  4985 net.cpp:165] Memory required for data: 6074800
I0211 09:46:43.896517  4985 layer_factory.hpp:77] Creating layer conv2
I0211 09:46:43.896531  4985 net.cpp:106] Creating Layer conv2
I0211 09:46:43.896539  4985 net.cpp:454] conv2 <- pool1
I0211 09:46:43.896553  4985 net.cpp:411] conv2 -> conv2
I0211 09:46:43.897073  4985 net.cpp:150] Setting up conv2
I0211 09:46:43.897089  4985 net.cpp:157] Top shape: 100 50 8 8 (320000)
I0211 09:46:43.897096  4985 net.cpp:165] Memory required for data: 7354800
I0211 09:46:43.897109  4985 layer_factory.hpp:77] Creating layer pool2
I0211 09:46:43.897125  4985 net.cpp:106] Creating Layer pool2
I0211 09:46:43.897131  4985 net.cpp:454] pool2 <- conv2
I0211 09:46:43.897141  4985 net.cpp:411] pool2 -> pool2
I0211 09:46:43.897322  4985 net.cpp:150] Setting up pool2
I0211 09:46:43.897336  4985 net.cpp:157] Top shape: 100 50 4 4 (80000)
I0211 09:46:43.897358  4985 net.cpp:165] Memory required for data: 7674800
I0211 09:46:43.897368  4985 layer_factory.hpp:77] Creating layer ip1
I0211 09:46:43.897387  4985 net.cpp:106] Creating Layer ip1
I0211 09:46:43.897399  4985 net.cpp:454] ip1 <- pool2
I0211 09:46:43.897423  4985 net.cpp:411] ip1 -> ip1
I0211 09:46:43.903054  4985 net.cpp:150] Setting up ip1
I0211 09:46:43.903069  4985 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:46:43.903074  4985 net.cpp:165] Memory required for data: 7874800
I0211 09:46:43.903087  4985 layer_factory.hpp:77] Creating layer relu1
I0211 09:46:43.903096  4985 net.cpp:106] Creating Layer relu1
I0211 09:46:43.903102  4985 net.cpp:454] relu1 <- ip1
I0211 09:46:43.903115  4985 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:46:43.903125  4985 net.cpp:150] Setting up relu1
I0211 09:46:43.903133  4985 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:46:43.903139  4985 net.cpp:165] Memory required for data: 8074800
I0211 09:46:43.903144  4985 layer_factory.hpp:77] Creating layer ip2
I0211 09:46:43.903154  4985 net.cpp:106] Creating Layer ip2
I0211 09:46:43.903162  4985 net.cpp:454] ip2 <- ip1
I0211 09:46:43.903172  4985 net.cpp:411] ip2 -> ip2
I0211 09:46:43.903333  4985 net.cpp:150] Setting up ip2
I0211 09:46:43.903345  4985 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:46:43.903352  4985 net.cpp:165] Memory required for data: 8078800
I0211 09:46:43.903362  4985 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0211 09:46:43.903370  4985 net.cpp:106] Creating Layer ip2_ip2_0_split
I0211 09:46:43.903376  4985 net.cpp:454] ip2_ip2_0_split <- ip2
I0211 09:46:43.903385  4985 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0211 09:46:43.903395  4985 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0211 09:46:43.903437  4985 net.cpp:150] Setting up ip2_ip2_0_split
I0211 09:46:43.903447  4985 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:46:43.903455  4985 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:46:43.903461  4985 net.cpp:165] Memory required for data: 8086800
I0211 09:46:43.903467  4985 layer_factory.hpp:77] Creating layer accuracy
I0211 09:46:43.903483  4985 net.cpp:106] Creating Layer accuracy
I0211 09:46:43.903491  4985 net.cpp:454] accuracy <- ip2_ip2_0_split_0
I0211 09:46:43.903499  4985 net.cpp:454] accuracy <- label_mnist_1_split_0
I0211 09:46:43.903507  4985 net.cpp:411] accuracy -> accuracy
I0211 09:46:43.903522  4985 net.cpp:150] Setting up accuracy
I0211 09:46:43.903532  4985 net.cpp:157] Top shape: (1)
I0211 09:46:43.903538  4985 net.cpp:165] Memory required for data: 8086804
I0211 09:46:43.903545  4985 layer_factory.hpp:77] Creating layer loss
I0211 09:46:43.903556  4985 net.cpp:106] Creating Layer loss
I0211 09:46:43.903563  4985 net.cpp:454] loss <- ip2_ip2_0_split_1
I0211 09:46:43.903571  4985 net.cpp:454] loss <- label_mnist_1_split_1
I0211 09:46:43.903579  4985 net.cpp:411] loss -> loss
I0211 09:46:43.903591  4985 layer_factory.hpp:77] Creating layer loss
I0211 09:46:43.903714  4985 net.cpp:150] Setting up loss
I0211 09:46:43.903726  4985 net.cpp:157] Top shape: (1)
I0211 09:46:43.903733  4985 net.cpp:160]     with loss weight 1
I0211 09:46:43.903741  4985 net.cpp:165] Memory required for data: 8086808
I0211 09:46:43.903749  4985 net.cpp:226] loss needs backward computation.
I0211 09:46:43.903756  4985 net.cpp:228] accuracy does not need backward computation.
I0211 09:46:43.903762  4985 net.cpp:226] ip2_ip2_0_split needs backward computation.
I0211 09:46:43.903769  4985 net.cpp:226] ip2 needs backward computation.
I0211 09:46:43.903774  4985 net.cpp:226] relu1 needs backward computation.
I0211 09:46:43.903780  4985 net.cpp:226] ip1 needs backward computation.
I0211 09:46:43.903786  4985 net.cpp:226] pool2 needs backward computation.
I0211 09:46:43.903792  4985 net.cpp:226] conv2 needs backward computation.
I0211 09:46:43.903798  4985 net.cpp:226] pool1 needs backward computation.
I0211 09:46:43.903803  4985 net.cpp:226] conv1 needs backward computation.
I0211 09:46:43.903810  4985 net.cpp:228] label_mnist_1_split does not need backward computation.
I0211 09:46:43.903817  4985 net.cpp:228] mnist does not need backward computation.
I0211 09:46:43.903822  4985 net.cpp:270] This network produces output accuracy
I0211 09:46:43.903830  4985 net.cpp:270] This network produces output loss
I0211 09:46:43.903849  4985 net.cpp:283] Network initialization done.
I0211 09:46:43.903889  4985 solver.cpp:60] Solver scaffolding done.
I0211 09:46:43.904227  4985 caffe.cpp:212] Starting Optimization
I0211 09:46:43.904237  4985 solver.cpp:311] Solving LeNet
I0211 09:46:43.904242  4985 solver.cpp:312] Learning Rate Policy: inv
I0211 09:46:43.904913  4985 solver.cpp:364] Iteration 0, Testing net (#0)
I0211 09:46:44.865766  4985 solver.cpp:432]     Test net output #0: accuracy = 0.1058
I0211 09:46:44.865797  4985 solver.cpp:432]     Test net output #1: loss = 2.42907 (* 1 = 2.42907 loss)
I0211 09:46:44.887266  4985 solver.cpp:250] Iteration 0, loss = 2.41916 Time spent communicating 0.002272
I0211 09:46:44.887290  4985 solver.cpp:267]     Train net output #0: loss = 2.41916 (* 1 = 2.41916 loss)
I0211 09:46:44.895951  4985 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0211 09:46:47.771296  4985 solver.cpp:250] Iteration 100, loss = 0.218922 Time spent communicating 0.388673
I0211 09:46:47.771338  4985 solver.cpp:267]     Train net output #0: loss = 0.218922 (* 1 = 0.218922 loss)
I0211 09:46:47.781276  4985 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0211 09:46:50.651034  4985 solver.cpp:250] Iteration 200, loss = 0.137807 Time spent communicating 0.379808
I0211 09:46:50.651065  4985 solver.cpp:267]     Train net output #0: loss = 0.137807 (* 1 = 0.137807 loss)
I0211 09:46:50.661023  4985 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0211 09:46:53.530763  4985 solver.cpp:250] Iteration 300, loss = 0.120885 Time spent communicating 0.378944
I0211 09:46:53.530794  4985 solver.cpp:267]     Train net output #0: loss = 0.120885 (* 1 = 0.120885 loss)
I0211 09:46:53.540525  4985 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0211 09:46:56.411255  4985 solver.cpp:250] Iteration 400, loss = 0.155594 Time spent communicating 0.380321
I0211 09:46:56.411298  4985 solver.cpp:267]     Train net output #0: loss = 0.155594 (* 1 = 0.155594 loss)
I0211 09:46:56.421212  4985 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0211 09:46:59.273488  4985 solver.cpp:482] Snapshotting to binary proto file examples/mnist/lenet_iter_500.caffemodel
I0211 09:46:59.302464  4985 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_500.solverstate
I0211 09:46:59.337759  4985 solver.cpp:344] Iteration 500, loss = 0.063621
I0211 09:46:59.337795  4985 solver.cpp:364] Iteration 500, Testing net (#0)
I0211 09:47:00.287919  4985 solver.cpp:432]     Test net output #0: accuracy = 0.974
I0211 09:47:00.287947  4985 solver.cpp:432]     Test net output #1: loss = 0.0784205 (* 1 = 0.0784205 loss)
I0211 09:47:00.287955  4985 solver.cpp:349] Optimization Done.
I0211 09:47:00.287994  4985 caffe.cpp:215] Optimization Done.
