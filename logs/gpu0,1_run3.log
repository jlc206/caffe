I0211 09:45:54.477248  4966 caffe.cpp:184] Using GPUs 0, 1
I0211 09:46:00.872599  4966 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 500
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "examples/mnist/lenet_train_test.prototxt"
I0211 09:46:00.881964  4966 solver.cpp:91] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0211 09:46:00.883610  4966 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0211 09:46:00.883693  4966 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0211 09:46:00.883970  4966 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:46:00.884141  4966 layer_factory.hpp:77] Creating layer mnist
I0211 09:46:00.886607  4966 net.cpp:106] Creating Layer mnist
I0211 09:46:00.886658  4966 net.cpp:411] mnist -> data
I0211 09:46:00.886811  4966 net.cpp:411] mnist -> label
I0211 09:46:00.892350  4970 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_train_lmdb
I0211 09:46:00.911684  4966 data_layer.cpp:41] output data size: 64,1,28,28
I0211 09:46:00.912971  4966 net.cpp:150] Setting up mnist
I0211 09:46:00.912994  4966 net.cpp:157] Top shape: 64 1 28 28 (50176)
I0211 09:46:00.913003  4966 net.cpp:157] Top shape: 64 (64)
I0211 09:46:00.913007  4966 net.cpp:165] Memory required for data: 200960
I0211 09:46:00.913022  4966 layer_factory.hpp:77] Creating layer conv1
I0211 09:46:00.913053  4966 net.cpp:106] Creating Layer conv1
I0211 09:46:00.913065  4966 net.cpp:454] conv1 <- data
I0211 09:46:00.913085  4966 net.cpp:411] conv1 -> conv1
I0211 09:46:00.914348  4966 net.cpp:150] Setting up conv1
I0211 09:46:00.914363  4966 net.cpp:157] Top shape: 64 20 24 24 (737280)
I0211 09:46:00.914368  4966 net.cpp:165] Memory required for data: 3150080
I0211 09:46:00.914386  4966 layer_factory.hpp:77] Creating layer pool1
I0211 09:46:00.914402  4966 net.cpp:106] Creating Layer pool1
I0211 09:46:00.914408  4966 net.cpp:454] pool1 <- conv1
I0211 09:46:00.914420  4966 net.cpp:411] pool1 -> pool1
I0211 09:46:00.914633  4966 net.cpp:150] Setting up pool1
I0211 09:46:00.914645  4966 net.cpp:157] Top shape: 64 20 12 12 (184320)
I0211 09:46:00.914649  4966 net.cpp:165] Memory required for data: 3887360
I0211 09:46:00.914655  4966 layer_factory.hpp:77] Creating layer conv2
I0211 09:46:00.914670  4966 net.cpp:106] Creating Layer conv2
I0211 09:46:00.914677  4966 net.cpp:454] conv2 <- pool1
I0211 09:46:00.914686  4966 net.cpp:411] conv2 -> conv2
I0211 09:46:00.915105  4966 net.cpp:150] Setting up conv2
I0211 09:46:00.915119  4966 net.cpp:157] Top shape: 64 50 8 8 (204800)
I0211 09:46:00.915124  4966 net.cpp:165] Memory required for data: 4706560
I0211 09:46:00.915137  4966 layer_factory.hpp:77] Creating layer pool2
I0211 09:46:00.915149  4966 net.cpp:106] Creating Layer pool2
I0211 09:46:00.915156  4966 net.cpp:454] pool2 <- conv2
I0211 09:46:00.915168  4966 net.cpp:411] pool2 -> pool2
I0211 09:46:00.915318  4966 net.cpp:150] Setting up pool2
I0211 09:46:00.915328  4966 net.cpp:157] Top shape: 64 50 4 4 (51200)
I0211 09:46:00.915334  4966 net.cpp:165] Memory required for data: 4911360
I0211 09:46:00.915340  4966 layer_factory.hpp:77] Creating layer ip1
I0211 09:46:00.915356  4966 net.cpp:106] Creating Layer ip1
I0211 09:46:00.915364  4966 net.cpp:454] ip1 <- pool2
I0211 09:46:00.915374  4966 net.cpp:411] ip1 -> ip1
I0211 09:46:00.917695  4971 blocking_queue.cpp:50] Waiting for data
I0211 09:46:00.919878  4966 net.cpp:150] Setting up ip1
I0211 09:46:00.919894  4966 net.cpp:157] Top shape: 64 500 (32000)
I0211 09:46:00.919898  4966 net.cpp:165] Memory required for data: 5039360
I0211 09:46:00.919910  4966 layer_factory.hpp:77] Creating layer relu1
I0211 09:46:00.919920  4966 net.cpp:106] Creating Layer relu1
I0211 09:46:00.919925  4966 net.cpp:454] relu1 <- ip1
I0211 09:46:00.919932  4966 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:46:00.919945  4966 net.cpp:150] Setting up relu1
I0211 09:46:00.919952  4966 net.cpp:157] Top shape: 64 500 (32000)
I0211 09:46:00.919958  4966 net.cpp:165] Memory required for data: 5167360
I0211 09:46:00.919963  4966 layer_factory.hpp:77] Creating layer ip2
I0211 09:46:00.919975  4966 net.cpp:106] Creating Layer ip2
I0211 09:46:00.919982  4966 net.cpp:454] ip2 <- ip1
I0211 09:46:00.919993  4966 net.cpp:411] ip2 -> ip2
I0211 09:46:00.920876  4966 net.cpp:150] Setting up ip2
I0211 09:46:00.920891  4966 net.cpp:157] Top shape: 64 10 (640)
I0211 09:46:00.920894  4966 net.cpp:165] Memory required for data: 5169920
I0211 09:46:00.920903  4966 layer_factory.hpp:77] Creating layer loss
I0211 09:46:00.920914  4966 net.cpp:106] Creating Layer loss
I0211 09:46:00.920920  4966 net.cpp:454] loss <- ip2
I0211 09:46:00.920928  4966 net.cpp:454] loss <- label
I0211 09:46:00.920938  4966 net.cpp:411] loss -> loss
I0211 09:46:00.920958  4966 layer_factory.hpp:77] Creating layer loss
I0211 09:46:00.921061  4966 net.cpp:150] Setting up loss
I0211 09:46:00.921072  4966 net.cpp:157] Top shape: (1)
I0211 09:46:00.921077  4966 net.cpp:160]     with loss weight 1
I0211 09:46:00.921106  4966 net.cpp:165] Memory required for data: 5169924
I0211 09:46:00.921113  4966 net.cpp:226] loss needs backward computation.
I0211 09:46:00.921120  4966 net.cpp:226] ip2 needs backward computation.
I0211 09:46:00.921126  4966 net.cpp:226] relu1 needs backward computation.
I0211 09:46:00.921130  4966 net.cpp:226] ip1 needs backward computation.
I0211 09:46:00.921135  4966 net.cpp:226] pool2 needs backward computation.
I0211 09:46:00.921140  4966 net.cpp:226] conv2 needs backward computation.
I0211 09:46:00.921149  4966 net.cpp:226] pool1 needs backward computation.
I0211 09:46:00.921155  4966 net.cpp:226] conv1 needs backward computation.
I0211 09:46:00.921161  4966 net.cpp:228] mnist does not need backward computation.
I0211 09:46:00.921167  4966 net.cpp:270] This network produces output loss
I0211 09:46:00.921181  4966 net.cpp:283] Network initialization done.
I0211 09:46:00.922247  4966 solver.cpp:181] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0211 09:46:00.922287  4966 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0211 09:46:00.922466  4966 net.cpp:49] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0211 09:46:00.922567  4966 layer_factory.hpp:77] Creating layer mnist
I0211 09:46:00.922722  4966 net.cpp:106] Creating Layer mnist
I0211 09:46:00.922735  4966 net.cpp:411] mnist -> data
I0211 09:46:00.922747  4966 net.cpp:411] mnist -> label
I0211 09:46:00.927703  4972 db_lmdb.cpp:38] Opened lmdb examples/mnist/mnist_test_lmdb
I0211 09:46:00.928046  4966 data_layer.cpp:41] output data size: 100,1,28,28
I0211 09:46:00.929464  4966 net.cpp:150] Setting up mnist
I0211 09:46:00.929481  4966 net.cpp:157] Top shape: 100 1 28 28 (78400)
I0211 09:46:00.929487  4966 net.cpp:157] Top shape: 100 (100)
I0211 09:46:00.929491  4966 net.cpp:165] Memory required for data: 314000
I0211 09:46:00.929497  4966 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0211 09:46:00.929507  4966 net.cpp:106] Creating Layer label_mnist_1_split
I0211 09:46:00.929513  4966 net.cpp:454] label_mnist_1_split <- label
I0211 09:46:00.929522  4966 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_0
I0211 09:46:00.929536  4966 net.cpp:411] label_mnist_1_split -> label_mnist_1_split_1
I0211 09:46:00.929591  4966 net.cpp:150] Setting up label_mnist_1_split
I0211 09:46:00.929602  4966 net.cpp:157] Top shape: 100 (100)
I0211 09:46:00.929608  4966 net.cpp:157] Top shape: 100 (100)
I0211 09:46:00.929612  4966 net.cpp:165] Memory required for data: 314800
I0211 09:46:00.929617  4966 layer_factory.hpp:77] Creating layer conv1
I0211 09:46:00.929641  4966 net.cpp:106] Creating Layer conv1
I0211 09:46:00.929647  4966 net.cpp:454] conv1 <- data
I0211 09:46:00.929659  4966 net.cpp:411] conv1 -> conv1
I0211 09:46:00.930162  4966 net.cpp:150] Setting up conv1
I0211 09:46:00.930176  4966 net.cpp:157] Top shape: 100 20 24 24 (1152000)
I0211 09:46:00.930181  4966 net.cpp:165] Memory required for data: 4922800
I0211 09:46:00.930194  4966 layer_factory.hpp:77] Creating layer pool1
I0211 09:46:00.930223  4966 net.cpp:106] Creating Layer pool1
I0211 09:46:00.930230  4966 net.cpp:454] pool1 <- conv1
I0211 09:46:00.930238  4966 net.cpp:411] pool1 -> pool1
I0211 09:46:00.930399  4966 net.cpp:150] Setting up pool1
I0211 09:46:00.930411  4966 net.cpp:157] Top shape: 100 20 12 12 (288000)
I0211 09:46:00.930416  4966 net.cpp:165] Memory required for data: 6074800
I0211 09:46:00.930423  4966 layer_factory.hpp:77] Creating layer conv2
I0211 09:46:00.930438  4966 net.cpp:106] Creating Layer conv2
I0211 09:46:00.930444  4966 net.cpp:454] conv2 <- pool1
I0211 09:46:00.930454  4966 net.cpp:411] conv2 -> conv2
I0211 09:46:00.930892  4966 net.cpp:150] Setting up conv2
I0211 09:46:00.930905  4966 net.cpp:157] Top shape: 100 50 8 8 (320000)
I0211 09:46:00.930912  4966 net.cpp:165] Memory required for data: 7354800
I0211 09:46:00.930922  4966 layer_factory.hpp:77] Creating layer pool2
I0211 09:46:00.930935  4966 net.cpp:106] Creating Layer pool2
I0211 09:46:00.930941  4966 net.cpp:454] pool2 <- conv2
I0211 09:46:00.930951  4966 net.cpp:411] pool2 -> pool2
I0211 09:46:00.931099  4966 net.cpp:150] Setting up pool2
I0211 09:46:00.931110  4966 net.cpp:157] Top shape: 100 50 4 4 (80000)
I0211 09:46:00.931116  4966 net.cpp:165] Memory required for data: 7674800
I0211 09:46:00.931120  4966 layer_factory.hpp:77] Creating layer ip1
I0211 09:46:00.931129  4966 net.cpp:106] Creating Layer ip1
I0211 09:46:00.931134  4966 net.cpp:454] ip1 <- pool2
I0211 09:46:00.931145  4966 net.cpp:411] ip1 -> ip1
I0211 09:46:00.937119  4966 net.cpp:150] Setting up ip1
I0211 09:46:00.937152  4966 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:46:00.937162  4966 net.cpp:165] Memory required for data: 7874800
I0211 09:46:00.937182  4966 layer_factory.hpp:77] Creating layer relu1
I0211 09:46:00.937203  4966 net.cpp:106] Creating Layer relu1
I0211 09:46:00.937217  4966 net.cpp:454] relu1 <- ip1
I0211 09:46:00.937232  4966 net.cpp:397] relu1 -> ip1 (in-place)
I0211 09:46:00.937248  4966 net.cpp:150] Setting up relu1
I0211 09:46:00.937261  4966 net.cpp:157] Top shape: 100 500 (50000)
I0211 09:46:00.937270  4966 net.cpp:165] Memory required for data: 8074800
I0211 09:46:00.937280  4966 layer_factory.hpp:77] Creating layer ip2
I0211 09:46:00.937299  4966 net.cpp:106] Creating Layer ip2
I0211 09:46:00.937309  4966 net.cpp:454] ip2 <- ip1
I0211 09:46:00.937328  4966 net.cpp:411] ip2 -> ip2
I0211 09:46:00.937593  4966 net.cpp:150] Setting up ip2
I0211 09:46:00.937613  4966 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:46:00.937629  4966 net.cpp:165] Memory required for data: 8078800
I0211 09:46:00.937645  4966 layer_factory.hpp:77] Creating layer ip2_ip2_0_split
I0211 09:46:00.937660  4966 net.cpp:106] Creating Layer ip2_ip2_0_split
I0211 09:46:00.937670  4966 net.cpp:454] ip2_ip2_0_split <- ip2
I0211 09:46:00.937683  4966 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_0
I0211 09:46:00.937700  4966 net.cpp:411] ip2_ip2_0_split -> ip2_ip2_0_split_1
I0211 09:46:00.937768  4966 net.cpp:150] Setting up ip2_ip2_0_split
I0211 09:46:00.937789  4966 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:46:00.937803  4966 net.cpp:157] Top shape: 100 10 (1000)
I0211 09:46:00.937811  4966 net.cpp:165] Memory required for data: 8086800
I0211 09:46:00.937821  4966 layer_factory.hpp:77] Creating layer accuracy
I0211 09:46:00.937842  4966 net.cpp:106] Creating Layer accuracy
I0211 09:46:00.937854  4966 net.cpp:454] accuracy <- ip2_ip2_0_split_0
I0211 09:46:00.937865  4966 net.cpp:454] accuracy <- label_mnist_1_split_0
I0211 09:46:00.937880  4966 net.cpp:411] accuracy -> accuracy
I0211 09:46:00.937903  4966 net.cpp:150] Setting up accuracy
I0211 09:46:00.937916  4966 net.cpp:157] Top shape: (1)
I0211 09:46:00.937925  4966 net.cpp:165] Memory required for data: 8086804
I0211 09:46:00.937935  4966 layer_factory.hpp:77] Creating layer loss
I0211 09:46:00.937953  4966 net.cpp:106] Creating Layer loss
I0211 09:46:00.937964  4966 net.cpp:454] loss <- ip2_ip2_0_split_1
I0211 09:46:00.937978  4966 net.cpp:454] loss <- label_mnist_1_split_1
I0211 09:46:00.937989  4966 net.cpp:411] loss -> loss
I0211 09:46:00.938033  4966 layer_factory.hpp:77] Creating layer loss
I0211 09:46:00.938194  4966 net.cpp:150] Setting up loss
I0211 09:46:00.938213  4966 net.cpp:157] Top shape: (1)
I0211 09:46:00.938222  4966 net.cpp:160]     with loss weight 1
I0211 09:46:00.938237  4966 net.cpp:165] Memory required for data: 8086808
I0211 09:46:00.938246  4966 net.cpp:226] loss needs backward computation.
I0211 09:46:00.938256  4966 net.cpp:228] accuracy does not need backward computation.
I0211 09:46:00.938267  4966 net.cpp:226] ip2_ip2_0_split needs backward computation.
I0211 09:46:00.938277  4966 net.cpp:226] ip2 needs backward computation.
I0211 09:46:00.938287  4966 net.cpp:226] relu1 needs backward computation.
I0211 09:46:00.938295  4966 net.cpp:226] ip1 needs backward computation.
I0211 09:46:00.938303  4966 net.cpp:226] pool2 needs backward computation.
I0211 09:46:00.938313  4966 net.cpp:226] conv2 needs backward computation.
I0211 09:46:00.938323  4966 net.cpp:226] pool1 needs backward computation.
I0211 09:46:00.938331  4966 net.cpp:226] conv1 needs backward computation.
I0211 09:46:00.938343  4966 net.cpp:228] label_mnist_1_split does not need backward computation.
I0211 09:46:00.938354  4966 net.cpp:228] mnist does not need backward computation.
I0211 09:46:00.938362  4966 net.cpp:270] This network produces output accuracy
I0211 09:46:00.938371  4966 net.cpp:270] This network produces output loss
I0211 09:46:00.938400  4966 net.cpp:283] Network initialization done.
I0211 09:46:00.938469  4966 solver.cpp:60] Solver scaffolding done.
I0211 09:46:00.942193  4966 parallel.cpp:405] GPUs pairs 0:1
I0211 09:46:01.161262  4966 data_layer.cpp:41] output data size: 64,1,28,28
I0211 09:46:01.316901  4966 parallel.cpp:433] Starting Optimization - TEST TEST TEST
I0211 09:46:01.317021  4966 solver.cpp:311] Solving LeNet
I0211 09:46:01.317031  4966 solver.cpp:312] Learning Rate Policy: inv
I0211 09:46:01.317144  4966 solver.cpp:364] Iteration 0, Testing net (#0)
I0211 09:46:02.384325  4966 solver.cpp:432]     Test net output #0: accuracy = 0.0876
I0211 09:46:02.384368  4966 solver.cpp:432]     Test net output #1: loss = 2.36538 (* 1 = 2.36538 loss)
I0211 09:46:02.400158  4966 solver.cpp:250] Iteration 0, loss = 2.34754 Time spent communicating 0.167456
I0211 09:46:02.400182  4966 solver.cpp:267]     Train net output #0: loss = 2.34754 (* 1 = 2.34754 loss)
I0211 09:46:02.410399  4966 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0211 09:46:04.121145  4966 solver.cpp:250] Iteration 100, loss = 0.337287 Time spent communicating 38.1098
I0211 09:46:04.121186  4966 solver.cpp:267]     Train net output #0: loss = 0.337287 (* 1 = 0.337287 loss)
I0211 09:46:04.125377  4966 sgd_solver.cpp:106] Iteration 100, lr = 0.00992565
I0211 09:46:05.816665  4966 solver.cpp:250] Iteration 200, loss = 0.274631 Time spent communicating 25.042
I0211 09:46:05.816699  4966 solver.cpp:267]     Train net output #0: loss = 0.274631 (* 1 = 0.274631 loss)
I0211 09:46:05.820960  4966 sgd_solver.cpp:106] Iteration 200, lr = 0.00985258
I0211 09:46:07.506419  4966 solver.cpp:250] Iteration 300, loss = 0.195419 Time spent communicating 27.7584
I0211 09:46:07.506453  4966 solver.cpp:267]     Train net output #0: loss = 0.195419 (* 1 = 0.195419 loss)
I0211 09:46:07.510295  4966 sgd_solver.cpp:106] Iteration 300, lr = 0.00978075
I0211 09:46:09.206921  4966 solver.cpp:250] Iteration 400, loss = 0.360049 Time spent communicating 27.9253
I0211 09:46:09.206954  4966 solver.cpp:267]     Train net output #0: loss = 0.360049 (* 1 = 0.360049 loss)
I0211 09:46:09.212076  4966 sgd_solver.cpp:106] Iteration 400, lr = 0.00971013
I0211 09:46:10.896718  4966 solver.cpp:482] Snapshotting to binary proto file examples/mnist/lenet_iter_500.caffemodel
I0211 09:46:10.928413  4966 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_500.solverstate
I0211 09:46:10.960677  4966 solver.cpp:344] Iteration 500, loss = 0.140765
I0211 09:46:10.960726  4966 solver.cpp:364] Iteration 500, Testing net (#0)
I0211 09:46:11.921207  4966 solver.cpp:432]     Test net output #0: accuracy = 0.9721
I0211 09:46:11.921267  4966 solver.cpp:432]     Test net output #1: loss = 0.0875022 (* 1 = 0.0875022 loss)
I0211 09:46:11.921283  4966 solver.cpp:349] Optimization Done.
I0211 09:46:11.921331  4966 parallel.cpp:256] IN DESTRUCTOR AND I'M 1
I0211 09:46:11.935065  4966 parallel.cpp:256] IN DESTRUCTOR AND I'M 0
I0211 09:46:11.935523  4966 caffe.cpp:215] Optimization Done.
